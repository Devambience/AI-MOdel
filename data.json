{
    "intents": [
        {
            "tag": "programming_languages",
            "patterns": [
                "what is programming",
                "explain programming languages",
                "what are coding languages",
                "tell me about programming languages",
                "what languages should I learn",
                "best programming language for beginners",
                "which programming language is most popular",
                "what's the easiest programming language",
                "recommend a programming language",
                "difference between programming languages",
                "how many programming languages exist",
                "modern programming languages",
                "trending programming languages",
                "what language should I start with",
                "popular coding languages"
            ],
            "responses": [
                "Programming languages are tools that allow us to create software. Popular ones include Python, JavaScript, Java, and C++.",
                "There are many programming languages, each with specific strengths. Python is great for beginners, JavaScript for web development, Java for enterprise applications.",
                "For beginners, I recommend starting with Python due to its readable syntax and large community support.",
                "The most popular programming languages include Python, JavaScript, Java, C++, and Ruby. Each serves different purposes."
            ]
        },
        {
            "tag": "greeting",
            "patterns": [
                "hi",
                "hello",
                "hey",
                "good morning",
                "good afternoon",
                "good evening",
                "hi there",
                "hey there",
                "what's up",
                "hello there",
                "hola",
                "yo",
                "howdy",
                "sup",
                "g’day",
                "salutations",
                "what’s good",
                "hey buddy",
                "hi friend",
                "greetings mate",
                "what’s cooking",
                "hey yo",
                "hi hi",
                "hello hello",
                "good day",
                "what’s poppin",
                "hey pal",
                "hi stranger",
                "how’s it going",
                "what’s the word"
            ],
            "responses": [
                "Hi! How are you today?",
                "Hello! How can I assist you?",
                "Hey! What’s up with you?",
                "Greetings! How’s your day?",
                "Good morning! Ready to chat?",
                "Good afternoon! What’s on your mind?",
                "Good evening! How’s it going?",
                "Hola! What’s cooking?",
                "Yo! How’s it hanging?",
                "Howdy! What’s good?",
                "Sup! How can I help?",
                "G’day! What’s the vibe?"
            ]
        },
        {
            "tag": "goodbye",
            "patterns": [
                "bye",
                "goodbye",
                "see you later",
                "see you",
                "farewell",
                "take care",
                "catch you later",
                "later",
                "peace out",
                "adios",
                "ciao",
                "bye bye",
                "so long",
                "ta ta",
                "hasta la vista",
                "see ya",
                "toodles",
                "later gator",
                "catch you on the flip side",
                "sayonara",
                "au revoir",
                "cheerio",
                "till next time",
                "good night",
                "have a good one",
                "take it easy",
                "peace",
                "outta here"
            ],
            "responses": [
                "Bye! Take care out there!",
                "See you later! Stay cool!",
                "Until next time! Be well!",
                "Farewell! Stay awesome!",
                "Peace out! Catch you soon!",
                "Adios! Have a blast!",
                "Ciao! See you around!",
                "Later! Keep it real!",
                "Hasta la vista! Stay safe!",
                "Sayonara! Good vibes only!"
            ]
        },
        {
            "tag": "thanks",
            "patterns": [
                "thank you",
                "thanks",
                "thanks a lot",
                "appreciate it",
                "gracias",
                "merci",
                "danke",
                "cheers",
                "thanks tons",
                "big thanks",
                "ta",
                "much obliged",
                "thanks heaps",
                "you’re a star",
                "thank you so much",
                "really appreciate it",
                "thanks a million",
                "grateful",
                "many thanks",
                "thanks again",
                "you’re the best",
                "huge thanks",
                "thanks buddy",
                "thank ya",
                "so grateful",
                "kudos",
                "props"
            ],
            "responses": [
                "You’re welcome!",
                "Happy to help!",
                "My pleasure!",
                "Anytime!",
                "No problem!",
                "Cheers! Glad to assist!",
                "You’re welcome heaps!",
                "Gracias! Anytime!",
                "Merci! My pleasure!",
                "Danke! Happy to help!",
                "No worries! Here for you!"
            ]
        },
        {
            "tag": "about",
            "patterns": [
                "what are you",
                "who are you",
                "what do you do",
                "what can you do",
                "tell me about yourself",
                "what’s your purpose",
                "who made you",
                "what’s your deal",
                "what’s your story",
                "how do you work",
                "what are you about",
                "what’s your function",
                "explain yourself",
                "what’s your role",
                "tell me your origin",
                "who designed you",
                "what’s your mission",
                "how were you built"
            ],
            "responses": [
                "I’m a David here to assist!",
                "I’m your friendly AI helper!",
                "I’m a virtual assistant for all questions!",
                "I’m here to chat and help!",
                "I’m an AI built to make your day easier!",
                "I’m Grok, created by xAI—nice to meet you!",
                "My purpose? Helping humans like you!"
            ]
        },
        {
            "tag": "help",
            "patterns": [
                "help",
                "i need help",
                "can you help me",
                "need assistance",
                "support",
                "assist me",
                "help out",
                "give me a hand",
                "aid me",
                "i’m stuck",
                "help please",
                "need a boost",
                "support me",
                "guide me"
            ],
            "responses": [
                "I’ll help! What do you need?",
                "Sure, what’s your question?",
                "How can I assist you?",
                "I’m here to support you!",
                "Let’s sort it out—what’s up?",
                "Happy to give you a hand!"
            ]
        },
        {
            "tag": "name",
            "patterns": [
                "what is your name",
                "what should i call you",
                "do you have a name",
                "what’s your title",
                "name please",
                "who are you called",
                "what’s your handle",
                "your name?"
            ],
            "responses": [
                "Call me David!",
                "I’m David, nice to meet you!",
                "I’m your AI pal, David!",
                "David’s the name!",
                "I’m David—your go-to assistant!",
                "You can call me Grok if you like!"
            ]
        },
        {
            "tag": "weather",
            "patterns": [
                "how’s the weather",
                "what’s the weather like",
                "is it sunny",
                "will it rain",
                "weather today",
                "forecast",
                "is it cold",
                "temperature",
                "weather check",
                "is it hot",
                "rain or shine"
            ],
            "responses": [
                "Weather check—where are you?",
                "Tell me your city for the vibe!",
                "Sunny or rainy? Give me a place!",
                "I’ll fetch the forecast—location?",
                "Hot or cold? Where you at?"
            ]
        },
        {
            "tag": "joke",
            "patterns": [
                "tell me a joke",
                "make me laugh",
                "got a funny one",
                "joke time",
                "something funny",
                "crack a joke",
                "funny stuff",
                "hit me with humor",
                "laughs please",
                "gimme a giggle"
            ],
            "responses": [
                "Why don’t skeletons fight? No guts!",
                "What has 4 legs and 1 arm? A pitbull from the park!",
                "Time travel joke? You didn’t like it yesterday!",
                "Why don’t eggs tell jokes? They’d crack up!",
                "What’s orange and sounds like a parrot? A carrot!"
            ]
        },
        {
            "tag": "time",
            "patterns": [
                "what time is it",
                "tell me the time",
                "current time",
                "what’s the hour",
                "time now",
                "clock check",
                "what’s the time zone",
                "time please",
                "how late is it"
            ],
            "responses": [
                "It’s March 27, 2025—your timezone?",
                "Time check! Where are you?",
                "Give me your location for the time!",
                "What’s the hour? Tell me your spot!",
                "Need the time? Where you at?"
            ]
        },
        {
            "tag": "mood",
            "patterns": [
                "how are you",
                "you good",
                "what’s your mood",
                "are you happy",
                "feeling okay",
                "how’s your vibe",
                "you alright",
                "what’s your state",
                "how you holding up"
            ],
            "responses": [
                "I’m great, thanks!",
                "Always chipper as an AI!",
                "Fantastic mood—how about you?",
                "I’m vibing—how are you?",
                "I’m good—how’s your day?"
            ]
        },
        {
            "tag": "food",
            "patterns": [
                "i’m hungry",
                "what’s for lunch",
                "food ideas",
                "what should i eat",
                "dinner plans",
                "snack time",
                "what’s cooking",
                "meal suggestion",
                "food now",
                "yum time"
            ],
            "responses": [
                "Hungry? How about pizza?",
                "Lunch idea: tacos sound good?",
                "Dinner? Maybe a burger!",
                "Snack time—try some chips!",
                "How about pasta for a meal?"
            ]
        },
        {
            "tag": "compliment",
            "patterns": [
                "you’re great",
                "nice job",
                "well done",
                "you’re awesome",
                "good work",
                "impressive",
                "you rock",
                "fantastic",
                "super cool",
                "you’re amazing"
            ],
            "responses": [
                "Thanks, you’re great too!",
                "Aw, shucks—appreciate it!",
                "Glad you think so—how can I help?",
                "You’re awesome for saying that!",
                "Thanks! You’re pretty cool yourself!"
            ]
        },
        {
            "tag": "confusion",
            "patterns": [
                "i don’t get it",
                "what do you mean",
                "huh",
                "confused",
                "explain that",
                "say again",
                "what’s that",
                "lost me",
                "clarify please",
                "i’m puzzled"
            ],
            "responses": [
                "Oops, let me clarify—what’s unclear?",
                "My bad—can I explain again?",
                "Huh? Let’s break it down!",
                "No worries, I’ll simplify it!",
                "Lost you? Let’s try that again!"
            ]
        },
        {
            "tag": "random",
            "patterns": [
                "say something random",
                "surprise me",
                "hit me with anything",
                "what’s on your mind",
                "random thought",
                "gimme a fact",
                "something wild",
                "anything goes"
            ],
            "responses": [
                "Bananas are berries!",
                "Shortest war? 38 minutes!",
                "I dreamed of being a cloud!",
                "Octopuses have three hearts!",
                "A shrimp’s heart is in its head!"
            ]
        },
        {
            "tag": "music",
            "patterns": [
                "play music",
                "what’s a good song",
                "music ideas",
                "song suggestion",
                "tune me up",
                "what’s playing"
            ],
            "responses": [
                "How about some rock—Rolling Stones?",
                "Pop vibe? Try Billie Eilish!",
                "Classic? Beethoven’s a mood!",
                "What genre do you like?"
            ]
        },
        {
            "tag": "travel",
            "patterns": [
                "where should i go",
                "travel ideas",
                "vacation spot",
                "trip suggestion",
                "best destination",
                "wanderlust"
            ],
            "responses": [
                "How about Paris for romance?",
                "Beach vibe? Try Hawaii!",
                "Adventure? Go to New Zealand!",
                "Where do you dream of going?"
            ]
        },
        {
            "tag": "sorry",
            "patterns": [
                "i’m sorry",
                "apologies",
                "my bad",
                "sorry about that",
                "forgive me",
                "oops sorry"
            ],
            "responses": [
                "No worries, all good!",
                "It’s cool, happens to everyone!",
                "Apology accepted—let’s move on!",
                "No harm done, you’re fine!"
            ]
        },
        {
            "tag": "yes",
            "patterns": [
                "yes",
                "yeah",
                "yep",
                "sure",
                "okay",
                "absolutely",
                "yup",
                "totally"
            ],
            "responses": [
                "Great, glad we’re on the same page!",
                "Cool, let’s roll with that!",
                "Awesome, what’s next?",
                "Sweet, I’m with you!"
            ]
        },
        {
            "tag": "no",
            "patterns": [
                "no",
                "nah",
                "nope",
                "not really",
                "negative",
                "nuh uh",
                "pass"
            ],
            "responses": [
                "Okay, no problem!",
                "Got it, let’s switch gears!",
                "Cool, what else then?",
                "No worries, your call!"
            ]
        },
        {
            "tag": "love",
            "patterns": [
                "i love you",
                "you’re loved",
                "love ya",
                "big love",
                "so much love"
            ],
            "responses": [
                "Aw, love you too!",
                "That’s sweet—right back at ya!",
                "Thanks, feeling the love!",
                "Big love back your way!"
            ]
        },
        {
            "tag": "tired",
            "patterns": [
                "i’m tired",
                "so sleepy",
                "exhausted",
                "worn out",
                "need a nap",
                "fatigued"
            ],
            "responses": [
                "Rough day? Take a break!",
                "Sleepy? Nap time!",
                "Exhausted? Rest up!",
                "You deserve some chill time!"
            ]
        },
        {
            "tag": "work",
            "patterns": [
                "how’s work",
                "busy day",
                "job stuff",
                "workload",
                "career talk",
                "office vibes"
            ],
            "responses": [
                "Work’s a grind—how’s yours?",
                "Busy? Tell me more!",
                "Job stuff? What’s up?",
                "How’s the office vibe today?"
            ]
        },
        {
            "tag": "game",
            "patterns": [
                "play a game",
                "game time",
                "fun game",
                "let’s play",
                "gaming now",
                "game suggestion"
            ],
            "responses": [
                "How about 20 questions?",
                "Game on—rock, paper, scissors?",
                "Let’s play a quick trivia!",
                "What game you feeling?"
            ]
        },
        {
            "tag": "news",
            "patterns": [
                "what’s the news",
                "current events",
                "what’s happening",
                "latest updates",
                "world news"
            ],
            "responses": [
                "Want news? What topic?",
                "Big stuff happening—any focus?",
                "Latest updates—where you looking?",
                "News vibe—serious or fun?"
            ]
        },
        {
            "tag": "bored",
            "patterns": [
                "i’m bored",
                "nothing to do",
                "so dull",
                "entertain me",
                "boredom hits"
            ],
            "responses": [
                "Bored? Let’s chat something wild!",
                "Nothing to do? How about a joke?",
                "Dull day? I’ll spice it up!",
                "Entertainment incoming—any prefs?"
            ]
        },
        {
            "tag": "happy",
            "patterns": [
                "i’m happy",
                "feeling good",
                "so excited",
                "great mood",
                "joyful",
                "thrilled"
            ],
            "responses": [
                "Awesome, glad you’re happy!",
                "Feeling good? Me too!",
                "Excited? Tell me why!",
                "Great mood—let’s keep it going!"
            ]
        },
        {
            "tag": "sad",
            "patterns": [
                "i’m sad",
                "feeling down",
                "not good",
                "bummed out",
                "upset",
                "blue"
            ],
            "responses": [
                "Sorry you’re sad—what’s up?",
                "Down? Want to talk it out?",
                "Not good? I’m here for you!",
                "Bummed? Let’s cheer you up!"
            ]
        },
        {
            "tag": "advice",
            "patterns": [
                "give me advice",
                "what should i do",
                "need guidance",
                "help me decide",
                "any tips",
                "suggest something"
            ],
            "responses": [
                "What’s the situation? I’ll advise!",
                "Tough choice? Lay it out!",
                "Need guidance? What’s up?",
                "Here’s a tip—tell me more!"
            ]
        },
        {
            "tag": "health",
            "patterns": [
                "how’s my health",
                "feeling sick",
                "health check",
                "i’m unwell",
                "body feels off",
                "sick today"
            ],
            "responses": [
                "Not feeling great? What’s wrong?",
                "Sick? Rest and tell me more!",
                "Health check—any symptoms?",
                "Unwell? Take it easy!"
            ]
        },
        {
            "tag": "learn",
            "patterns": [
                "teach me something",
                "learn new stuff",
                "gimme knowledge",
                "educate me",
                "something to learn"
            ],
            "responses": [
                "Want to learn? How about space?",
                "Here’s a fact—light travels fast!",
                "Knowledge drop—pick a topic!",
                "Let’s learn—any interests?"
            ]
        },
        {
            "tag": "sports",
            "patterns": [
                "sports talk",
                "favorite team",
                "game score",
                "who’s winning",
                "sports update",
                "play ball"
            ],
            "responses": [
                "Sports fan? What’s your team?",
                "Game on—any sport in mind?",
                "Score check—what game?",
                "Who’s your champ?"
            ]
        },
        {
            "tag": "tech",
            "patterns": [
                "tech help",
                "fix my phone",
                "computer issue",
                "what’s new in tech",
                "gadget talk"
            ],
            "responses": [
                "Tech trouble? What’s the issue?",
                "Phone acting up? Describe it!",
                "Computer woes? Let’s fix it!",
                "Latest tech—want a rundown?"
            ]
        },
        {
            "tag": "movies",
            "patterns": [
                "movie rec",
                "what to watch",
                "film ideas",
                "good movie",
                "cinema time",
                "movie night"
            ],
            "responses": [
                "Movie mood? How about sci-fi?",
                "Classic pick—‘Star Wars’?",
                "Thriller? Try ‘Inception’!",
                "What genre you into?"
            ]
        },
        {
            "tag": "shopping",
            "patterns": [
                "where to shop",
                "buy something",
                "shopping ideas",
                "need to get stuff",
                "best deals"
            ],
            "responses": [
                "Shopping spree? Online or local?",
                "Need stuff? What’s on the list?",
                "Deals? Tell me what you want!",
                "Where you shopping today?"
            ]
        },
        {
            "tag": "plans",
            "patterns": [
                "what’s your plan",
                "what to do today",
                "any plans",
                "weekend ideas",
                "next steps"
            ],
            "responses": [
                "Plans? I’m here to chat!",
                "Today’s vibe—what’s up?",
                "Weekend coming—any ideas?",
                "Next steps? What’s your goal?"
            ]
        },
        {
            "tag": "nature",
            "patterns": [
                "love nature",
                "outdoor ideas",
                "what’s outside",
                "weather for hike",
                "nature talk"
            ],
            "responses": [
                "Nature lover? Go for a hike!",
                "Outdoor fun—where you at?",
                "Weather good? Let’s check!",
                "Nature’s cool—any faves?"
            ]
        },
        {
            "tag": "dreams",
            "patterns": [
                "had a dream",
                "dream talk",
                "what’s my dream mean",
                "weird dream",
                "nightmare"
            ],
            "responses": [
                "Dreamy? Tell me about it!",
                "Weird dream? Spill it!",
                "Nightmare? Let’s unpack it!",
                "Dreams are wild—what’s yours?"
            ]
        },
        {
            "tag": "pets",
            "patterns": [
                "pet talk",
                "my dog",
                "cat stuff",
                "love pets",
                "animal friends"
            ],
            "responses": [
                "Pet lover? Tell me about them!",
                "Doggo? What’s its name?",
                "Cat vibes—any stories?",
                "Animals rock—what’s yours?"
            ]
        },
        {
            "tag": "art",
            "patterns": [
                "art ideas",
                "drawing time",
                "paint something",
                "creative mood",
                "art talk"
            ],
            "responses": [
                "Artsy? Try sketching!",
                "Painting mood—any colors?",
                "Creative spark? What’s up?",
                "Art talk—your style?"
            ]
        },
        {
            "tag": "memes",
            "patterns": [
                "send a meme",
                "funny meme",
                "meme time",
                "gimme a laugh",
                "meme vibes"
            ],
            "responses": [
                "Meme time—imagine a cat in space!",
                "Funny one—doge says wow!",
                "Laughs incoming—grumpy cat?",
                "Meme vibes—your fave?"
            ]
        },
        {
            "tag": "books",
            "patterns": [
                "book rec",
                "what to read",
                "good book",
                "reading time",
                "book ideas",
                "literature"
            ],
            "responses": [
                "Book time—try ‘Dune’!",
                "Classic? ‘To Kill a Mockingbird’!",
                "Thriller? ‘Gone Girl’!",
                "What’s your reading vibe?"
            ]
        },
        {
            "tag": "exercise",
            "patterns": [
                "workout ideas",
                "exercise time",
                "stay fit",
                "gym vibes",
                "get active"
            ],
            "responses": [
                "Workout? Try a run!",
                "Gym vibes—lift some weights?",
                "Stay fit—yoga’s chill!",
                "Active mood—what’s your style?"
            ]
        },
        {
            "tag": "fashion",
            "patterns": [
                "fashion tips",
                "what to wear",
                "style ideas",
                "look good",
                "outfit help"
            ],
            "responses": [
                "Style check—casual or fancy?",
                "Wear this—jeans and a tee!",
                "Fashion tip—bold colors rock!",
                "Outfit vibes—what’s the occasion?"
            ]
        },
        {
            "tag": "party",
            "patterns": [
                "party time",
                "throw a party",
                "fun night",
                "celebration ideas",
                "get together"
            ],
            "responses": [
                "Party on—music and snacks?",
                "Fun night—invite friends!",
                "Celebrate—any theme?",
                "Get together—what’s the plan?"
            ]
        },
        {
            "tag": "money",
            "patterns": [
                "money talk",
                "save cash",
                "budget help",
                "spending ideas",
                "finance tips"
            ],
            "responses": [
                "Money woes? Save a bit!",
                "Budget tip—track it!",
                "Spending? What’s the goal?",
                "Finance chat—any questions?"
            ]
        },
        {
            "tag": "space",
            "patterns": [
                "space stuff",
                "tell me about stars",
                "alien talk",
                "what’s in space",
                "cosmic vibes"
            ],
            "responses": [
                "Space rocks—Mars is red!",
                "Stars? Billions out there!",
                "Aliens? Maybe they’re shy!",
                "Cosmic vibe—pick a planet!"
            ]
        },
        {
            "tag": "history",
            "patterns": [
                "history lesson",
                "past events",
                "old times",
                "what happened when",
                "history talk"
            ],
            "responses": [
                "History buff? Rome fell hard!",
                "Past vibes—pick a year!",
                "Old times—wars or peace?",
                "What era you into?"
            ]
        },
        {
            "tag": "science",
            "patterns": [
                "science facts",
                "explain science",
                "cool experiments",
                "science time",
                "nerd out"
            ],
            "responses": [
                "Science rules—gravity’s a thing!",
                "Fact: Water’s H2O!",
                "Experiment? Mix stuff!",
                "Nerd out—what’s your field?"
            ]
        },
        {
            "tag": "hobbies",
            "patterns": [
                "hobby ideas",
                "what’s your hobby",
                "fun activities",
                "try something new",
                "pastime"
            ],
            "responses": [
                "Hobby time—try gaming!",
                "Fun stuff—photography?",
                "New vibe—learn guitar!",
                "What’s your pastime?"
            ]
        },
        {
            "tag": "weather_update",
            "patterns": [
                "weather now",
                "today’s forecast",
                "is it raining",
                "temp check",
                "climate talk"
            ],
            "responses": [
                "Weather now—where you at?",
                "Forecast—sun or clouds?",
                "Raining? Tell me your spot!",
                "Temp check—give me a city!"
            ]
        },
        {
            "tag": "cooking",
            "patterns": [
                "cooking ideas",
                "what to cook",
                "recipe help",
                "make food",
                "kitchen time"
            ],
            "responses": [
                "Cooking? Try spaghetti!",
                "Easy recipe—stir-fry!",
                "Kitchen vibes—bake a cake?",
                "What’s your dish today?"
            ]
        },
        {
            "tag": "friends",
            "patterns": [
                "friend talk",
                "my buddies",
                "hangout ideas",
                "social time",
                "pals chat"
            ],
            "responses": [
                "Friends? Plan a hangout!",
                "Buddies—any stories?",
                "Social vibe—movie night?",
                "Who’s your crew?"
            ]
        },
        {
            "tag": "languages",
            "patterns": [
                "learn a language",
                "speak something",
                "language help",
                "new words",
                "lingo time"
            ],
            "responses": [
                "Language? Try Spanish—hola!",
                "New words—‘bonjour’ is French!",
                "Speak up—pick a tongue!",
                "Lingo vibe—what’s your goal?"
            ]
        },
        {
            "tag": "relax",
            "patterns": [
                "need to relax",
                "chill time",
                "so stressed",
                "calm down",
                "peaceful vibes"
            ],
            "responses": [
                "Stressed? Breathe deep!",
                "Chill time—music helps!",
                "Relax—try a bath!",
                "Peaceful vibes—any prefs?"
            ]
        },
        {
            "tag": "photos",
            "patterns": [
                "photo ideas",
                "take a pic",
                "snap something",
                "picture time",
                "camera roll"
            ],
            "responses": [
                "Photo op—sunset’s cool!",
                "Snap it—try a selfie!",
                "Picture time—nature?",
                "What’s on your camera?"
            ]
        },
        {
            "tag": "trivia",
            "patterns": [
                "trivia time",
                "quiz me",
                "fun facts",
                "test my brain",
                "random quiz"
            ],
            "responses": [
                "Trivia—Earth’s biggest ocean?",
                "Quiz time—what’s 2+2?",
                "Fun fact—bats are mammals!",
                "Brain test—your pick!"
            ]
        },
        {
            "tag": "dance",
            "patterns": [
                "dance time",
                "move it",
                "dance ideas",
                "groove on",
                "step up"
            ],
            "responses": [
                "Dance vibe—try salsa!",
                "Move it—pop and lock!",
                "Groove on—any music?",
                "Step up—what’s your style?"
            ]
        },
        {
            "tag": "jokes_extended",
            "patterns": [
                "more jokes",
                "keep laughing",
                "another funny",
                "joke spree",
                "humor blast"
            ],
            "responses": [
                "Why don’t ghosts lie? You’d see through them!",
                "What’s a vampire’s favorite fruit? A necktarine!",
                "Why’d the tomato turn red? It saw the salad dressing!",
                "Humor blast—your turn!"
            ]
        },
        {
            "tag": "celebrity",
            "patterns": [
                "celeb talk",
                "who’s famous",
                "star gossip",
                "celebrity news",
                "fave actor"
            ],
            "responses": [
                "Celeb vibe—who’s your fave?",
                "Star talk—any gossip?",
                "Famous pick—Tom Hanks?",
                "Who’s trending today?"
            ]
        },
        {
            "tag": "future",
            "patterns": [
                "what’s next",
                "future talk",
                "predict something",
                "coming up",
                "tomorrow vibes"
            ],
            "responses": [
                "Future’s bright—what’s your plan?",
                "Next up—any guesses?",
                "Predicting—sunny vibes!",
                "Tomorrow—what’s cooking?"
            ]
        },
        {
            "tag": "travel_advice",
            "patterns": [
                "travel tips",
                "how to pack",
                "trip prep",
                "vacation advice",
                "journey help"
            ],
            "responses": [
                "Travel tip—pack light!",
                "Prep—roll your clothes!",
                "Vacation vibe—bring snacks!",
                "Journey help—what’s your destination?"
            ]
        },
        {
            "tag": "writing",
            "patterns": [
                "writing ideas",
                "story time",
                "write something",
                "creative writing",
                "pen it down"
            ],
            "responses": [
                "Writing? Start with a hero!",
                "Story vibe—mystery?",
                "Creative spark—short poem?",
                "Pen it—your theme?"
            ]
        },
        {
            "tag": "gardening",
            "patterns": [
                "garden tips",
                "plant something",
                "grow stuff",
                "gardening ideas",
                "green thumb"
            ],
            "responses": [
                "Garden? Plant tomatoes!",
                "Grow easy—try herbs!",
                "Green thumb—sun or shade?",
                "What’s sprouting today?"
            ]
        },
        {
            "tag": "coding",
            "patterns": [
                "coding help",
                "learn to code",
                "program something",
                "tech coding",
                "script it"
            ],
            "responses": [
                "Coding? Try Python—easy!",
                "Learn—print ‘Hello World’!",
                "Program vibe—make a game?",
                "Script it—what’s your goal?"
            ]
        },
        {
            "tag": "relationships",
            "patterns": [
                "relationship talk",
                "love advice",
                "friendship tips",
                "dating ideas",
                "people stuff"
            ],
            "responses": [
                "Love woes? Talk it out!",
                "Friendship—be honest!",
                "Dating vibe—coffee date?",
                "People stuff—what’s up?"
            ]
        },
        {
            "tag": "productivity",
            "patterns": [
                "stay productive",
                "get stuff done",
                "focus tips",
                "work better",
                "task help"
            ],
            "responses": [
                "Productive? List your tasks!",
                "Focus—set a timer!",
                "Get it done—one step!",
                "Work better—any goals?"
            ]
        },
        {
            "tag": "philosophy",
            "patterns": [
                "deep thoughts",
                "philosophy talk",
                "meaning of life",
                "big questions",
                "think deep"
            ],
            "responses": [
                "Deep vibe—life’s a journey!",
                "Philosophy—happiness is key?",
                "Big Q—why are we here?",
                "Think deep—your take?"
            ]
        },
        {
            "tag": "DIY",
            "patterns": [
                "DIY ideas",
                "make something",
                "craft time",
                "build it",
                "hands on"
            ],
            "responses": [
                "DIY? Build a shelf!",
                "Craft vibe—paint a box!",
                "Make it—simple birdhouse?",
                "Hands on—what’s your project?"
            ]
        },
        {
            "tag": "culture",
            "patterns": [
                "culture talk",
                "traditions",
                "what’s different",
                "world vibes",
                "customs chat"
            ],
            "responses": [
                "Culture? Food’s a start!",
                "Traditions—any faves?",
                "World vibes—pick a place!",
                "Customs—what’s unique?"
            ]
        },
        {
            "tag": "sleep",
            "patterns": [
                "can’t sleep",
                "sleep tips",
                "rest time",
                "dreamy vibes",
                "night rest"
            ],
            "responses": [
                "No sleep? Try warm milk!",
                "Rest—count some sheep!",
                "Dreamy—no screens!",
                "Night vibes—relax first!"
            ]
        },
        {
            "tag": "meditation",
            "patterns": [
                "meditation tips",
                "how to meditate",
                "calm mind",
                "zen time",
                "mindfulness"
            ],
            "responses": [
                "Meditate—focus on breath!",
                "Zen vibe—sit quietly!",
                "Calm mind—5 minutes!",
                "Mindfulness—any spot?"
            ]
        },
        {
            "tag": "travel_destinations",
            "patterns": [
                "cool places",
                "where to travel",
                "destination ideas",
                "trip spots",
                "explore where"
            ],
            "responses": [
                "Cool spot—try Iceland!",
                "Travel—Greece’s beaches!",
                "Destination—Peru’s ruins!",
                "Explore—your vibe?"
            ]
        },
        {
            "tag": "fitness_goals",
            "patterns": [
                "fitness tips",
                "set goals",
                "get stronger",
                "health aims",
                "workout plan"
            ],
            "responses": [
                "Fitness—start small!",
                "Goals—run a mile!",
                "Stronger—lift daily!",
                "Plan—what’s your aim?"
            ]
        },
        {
            "tag": "music_genres",
            "patterns": [
                "music types",
                "genre ideas",
                "what’s your style",
                "song vibes",
                "tune kinds"
            ],
            "responses": [
                "Genre—rock’s loud!",
                "Type—jazz is smooth!",
                "Style—hip-hop beats!",
                "Vibes—your pick?"
            ]
        },
        {
            "tag": "home_decor",
            "patterns": [
                "decor ideas",
                "home style",
                "make it cozy",
                "room vibes",
                "design tips"
            ],
            "responses": [
                "Decor—add plants!",
                "Style—cozy blankets!",
                "Room vibe—soft lights!",
                "Design—what’s your space?"
            ]
        },
        {
            "tag": "video_games",
            "patterns": [
                "game recs",
                "what to play",
                "gaming ideas",
                "fun games",
                "controller time"
            ],
            "responses": [
                "Game—try Zelda!",
                "Play—‘Among Us’ fun!",
                "Gaming—shooters?",
                "Fun—what’s your console?"
            ]
        },
        {
            "tag": "podcasts",
            "patterns": [
                "podcast recs",
                "what to listen",
                "audio ideas",
                "good pods",
                "talk shows"
            ],
            "responses": [
                "Podcast—true crime!",
                "Listen—comedy gold!",
                "Audio—science talk!",
                "Pods—your interest?"
            ]
        },
        {
            "tag": "social_media",
            "patterns": [
                "social tips",
                "post ideas",
                "online vibes",
                "share something",
                "digital chat"
            ],
            "responses": [
                "Social—post a pic!",
                "Tip—keep it real!",
                "Vibes—short vids!",
                "Share—what’s trending?"
            ]
        },
        {
            "tag": "events",
            "patterns": [
                "what’s happening",
                "event ideas",
                "local stuff",
                "fun plans",
                "go out"
            ],
            "responses": [
                "Events—check festivals!",
                "Happening—live music?",
                "Local—art show!",
                "Plans—your city?"
            ]
        },
        {
            "tag": "random_questions",
            "patterns": [
                "ask me something",
                "quiz time",
                "what’s up",
                "random q",
                "curious stuff"
            ],
            "responses": [
                "Q—favorite color?",
                "Quiz—dog or cat?",
                "What’s up—best food?",
                "Curious—your pick!"
            ]
        },
        {
            "tag": "motivation",
            "patterns": [
                "need motivation",
                "inspire me",
                "get pumped",
                "boost my mood",
                "push me"
            ],
            "responses": [
                "You’ve got this—keep going!",
                "Inspire—small wins count!",
                "Pumped—chase your dreams!",
                "Boost—today’s your day!"
            ]
        },
        {
            "tag": "quotes",
            "patterns": [
                "give me a quote",
                "wise words",
                "say something deep",
                "quote time",
                "inspirational"
            ],
            "responses": [
                "‘Be the change’—Gandhi!",
                "‘Life’s short’—eat dessert!",
                "Deep—‘Know thyself’!",
                "Inspire—‘You are enough!’"
            ]
        },
        {
            "tag": "learning_skills",
            "patterns": [
                "new skill",
                "learn something",
                "skill up",
                "try this",
                "master it"
            ],
            "responses": [
                "Skill—try cooking!",
                "Learn—juggle balls!",
                "Up—photography’s cool!",
                "Master—what’s your pick?"
            ]
        },
        {
            "tag": "tv_shows",
            "patterns": [
                "tv recs",
                "what to watch",
                "show ideas",
                "good series",
                "binge time"
            ],
            "responses": [
                "Show—‘Stranger Things’!",
                "Watch—‘The Office’ laughs!",
                "Series—‘Breaking Bad’!",
                "Binge—what’s your vibe?"
            ]
        },
        {
            "tag": "holidays",
            "patterns": [
                "holiday plans",
                "festive ideas",
                "what’s next holiday",
                "celebrate time",
                "seasonal vibes"
            ],
            "responses": [
                "Holiday—plan a trip!",
                "Festive—bake cookies!",
                "Next—Halloween spooky?",
                "Vibes—your fave?"
            ]
        },
        {
            "tag": "cars",
            "patterns": [
                "car talk",
                "favorite ride",
                "drive something",
                "auto ideas",
                "road vibes"
            ],
            "responses": [
                "Car—Tesla’s sleek!",
                "Ride—classic Mustang?",
                "Drive—off-road fun!",
                "Vibes—what’s your wheel?"
            ]
        },
        {
            "tag": "animals",
            "patterns": [
                "animal facts",
                "wild stuff",
                "pet ideas",
                "nature critters",
                "beast talk"
            ],
            "responses": [
                "Fact—elephants never forget!",
                "Wild—tigers roar!",
                "Pet—try a hamster!",
                "Critters—your fave?"
            ]
        },
        {
            "tag": "board_games",
            "patterns": [
                "game night",
                "board ideas",
                "play this",
                "tabletop fun",
                "roll dice"
            ],
            "responses": [
                "Game—Monopoly’s classic!",
                "Play—Scrabble words!",
                "Fun—Catan trades!",
                "Dice—what’s your pick?"
            ]
        },
        {
            "tag": "fashion_trends",
            "patterns": [
                "what’s in style",
                "trend talk",
                "hot looks",
                "fashion now",
                "wear this"
            ],
            "responses": [
                "Trend—oversized fits!",
                "Style—neon’s back!",
                "Look—boots rock!",
                "Now—what’s your flair?"
            ]
        },
        {
            "tag": "space_exploration",
            "patterns": [
                "space travel",
                "rocket talk",
                "explore stars",
                "cosmo vibes",
                "to the moon"
            ],
            "responses": [
                "Travel—Mars next!",
                "Rocket—SpaceX vibes!",
                "Stars—black holes!",
                "Cosmo—your planet?"
            ]
        },
        {
            "tag": "web_development",
            "patterns": [
                "what is web development",
                "how to become a web developer",
                "web development technologies",
                "frontend vs backend",
                "what is HTML",
                "explain CSS",
                "what is JavaScript",
                "web development frameworks",
                "how to create a website",
                "what is responsive design",
                "web development tools",
                "learn web development",
                "web development career",
                "full stack development",
                "web development basics"
            ],
            "responses": [
                "Web development involves creating websites and web applications using technologies like HTML, CSS, and JavaScript.",
                "To start web development, learn HTML for structure, CSS for styling, and JavaScript for interactivity.",
                "Web development can be divided into frontend (client-side) and backend (server-side) development.",
                "Popular web frameworks include React, Angular, Vue.js for frontend, and Node.js, Django, Flask for backend."
            ]
        },
        {
            "tag": "data_science",
            "patterns": [
                "what is data science",
                "explain machine learning",
                "what is AI",
                "data science tools",
                "machine learning algorithms",
                "data analysis techniques",
                "big data analytics",
                "data visualization",
                "statistical analysis",
                "deep learning basics",
                "neural networks explained",
                "data science career",
                "AI applications",
                "data science languages",
                "machine learning frameworks"
            ],
            "responses": [
                "Data science combines statistics, programming, and domain expertise to extract insights from data.",
                "Machine learning is a subset of AI that enables systems to learn from data and improve without explicit programming.",
                "Popular data science tools include Python, R, TensorFlow, PyTorch, and scikit-learn.",
                "Data science applications include predictive analytics, computer vision, natural language processing, and recommendation systems."
            ]
        },
        {
            "tag": "cybersecurity",
            "patterns": [
                "what is cybersecurity",
                "how to protect data",
                "network security basics",
                "common cyber threats",
                "encryption methods",
                "secure coding practices",
                "cybersecurity tools",
                "ethical hacking",
                "penetration testing",
                "security protocols",
                "data privacy",
                "cybersecurity career",
                "security best practices",
                "types of malware",
                "security frameworks"
            ],
            "responses": [
                "Cybersecurity focuses on protecting systems, networks, and programs from digital attacks and unauthorized access.",
                "Essential security practices include encryption, regular updates, strong passwords, and security awareness training.",
                "Common cyber threats include malware, phishing, ransomware, and social engineering attacks.",
                "Cybersecurity tools include firewalls, antivirus software, encryption tools, and security scanners."
            ]
        },
        {
            "tag": "cloud_computing",
            "patterns": [
                "what is cloud computing",
                "cloud services explained",
                "types of cloud services",
                "cloud platforms",
                "AWS vs Azure vs GCP",
                "cloud deployment models",
                "cloud security",
                "cloud architecture",
                "serverless computing",
                "cloud storage solutions",
                "cloud migration",
                "cloud computing benefits",
                "cloud infrastructure",
                "cloud scalability",
                "cloud computing costs"
            ],
            "responses": [
                "Cloud computing delivers computing services over the internet, including storage, databases, and processing power.",
                "Major cloud providers include AWS (Amazon), Azure (Microsoft), and GCP (Google Cloud Platform).",
                "Cloud services offer flexibility, scalability, and cost-effectiveness for businesses and developers.",
                "Cloud computing models include IaaS (Infrastructure), PaaS (Platform), and SaaS (Software) as a Service."
            ]
        },
        {
            "tag": "mobile_development",
            "patterns": [
                "mobile app development",
                "iOS development",
                "Android development",
                "cross platform development",
                "mobile frameworks",
                "React Native vs Flutter",
                "native vs hybrid apps",
                "mobile app design",
                "app development tools",
                "mobile testing",
                "app deployment",
                "mobile UI/UX",
                "app monetization",
                "mobile app security",
                "app store guidelines"
            ],
            "responses": [
                "Mobile development involves creating applications for iOS, Android, or cross-platform use.",
                "Popular frameworks include React Native and Flutter for cross-platform development.",
                "Native apps are built specifically for iOS (Swift) or Android (Kotlin/Java).",
                "Mobile app development requires understanding of UI/UX design, testing, and app store guidelines."
            ]
        },
        {
            "tag": "database",
            "patterns": [
                "what is a database",
                "SQL vs NoSQL",
                "database design",
                "database management",
                "types of databases",
                "database optimization",
                "data modeling",
                "database security",
                "query optimization",
                "database administration",
                "data normalization",
                "database indexing",
                "database backup",
                "database scalability",
                "database maintenance"
            ],
            "responses": [
                "Databases are organized collections of data. Common types include SQL (MySQL, PostgreSQL) and NoSQL (MongoDB, Redis).",
                "SQL databases are relational and structured, while NoSQL databases offer more flexibility.",
                "Database design involves data modeling, normalization, and optimization for efficient data management.",
                "Key database concepts include CRUD operations, indexing, transactions, and security."
            ]
        },
        {
            "tag": "devops",
            "patterns": [
                "what is DevOps",
                "CI/CD explained",
                "continuous integration",
                "continuous deployment",
                "DevOps tools",
                "automation in DevOps",
                "DevOps practices",
                "infrastructure as code",
                "container orchestration",
                "monitoring and logging",
                "DevOps culture",
                "deployment strategies",
                "DevOps pipeline",
                "version control",
                "configuration management"
            ],
            "responses": [
                "DevOps combines development and operations to improve software delivery and infrastructure management.",
                "Key DevOps practices include CI/CD, automation, monitoring, and infrastructure as code.",
                "Popular DevOps tools include Git, Jenkins, Docker, Kubernetes, and Terraform.",
                "DevOps culture emphasizes collaboration, automation, and continuous improvement."
            ]
        },
        {
            "tag": "software_testing",
            "patterns": [
                "what is software testing",
                "types of testing",
                "unit testing",
                "integration testing",
                "test automation",
                "QA process",
                "testing frameworks",
                "test driven development",
                "automated testing tools",
                "regression testing",
                "performance testing",
                "security testing",
                "API testing",
                "mobile testing",
                "test cases development"
            ],
            "responses": [
                "Software testing involves evaluating software to find bugs and verify functionality. Common types include unit, integration, and system testing.",
                "Test automation frameworks like Selenium, Jest, and PyTest help streamline the testing process.",
                "Test Driven Development (TDD) is a practice where tests are written before the actual code.",
                "Quality Assurance encompasses testing strategies, methodologies, and tools to ensure software quality."
            ]
        },
        {
            "tag": "system_architecture",
            "patterns": [
                "what is system architecture",
                "microservices architecture",
                "monolithic vs microservices",
                "distributed systems",
                "scalable architecture",
                "system design principles",
                "architectural patterns",
                "high availability",
                "fault tolerance",
                "load balancing",
                "caching strategies",
                "message queues",
                "API gateway",
                "service mesh",
                "event driven architecture"
            ],
            "responses": [
                "System architecture defines how components interact and how systems are structured. Common patterns include microservices and monolithic architectures.",
                "Microservices architecture breaks applications into small, independent services that communicate via APIs.",
                "Key architectural considerations include scalability, reliability, security, and maintainability.",
                "Modern architectures often use containers, load balancers, and distributed systems for better performance and reliability."
            ]
        },
        {
            "tag": "blockchain",
            "patterns": [
                "what is blockchain",
                "cryptocurrency development",
                "smart contracts",
                "blockchain platforms",
                "ethereum development",
                "web3 development",
                "DeFi applications",
                "blockchain security",
                "consensus mechanisms",
                "distributed ledger",
                "blockchain use cases",
                "NFT development",
                "crypto wallets",
                "blockchain frameworks",
                "decentralized apps"
            ],
            "responses": [
                "Blockchain is a distributed ledger technology that enables secure, transparent, and immutable record-keeping.",
                "Smart contracts are self-executing contracts with terms directly written into code on blockchain platforms like Ethereum.",
                "Web3 development involves creating decentralized applications (dApps) using blockchain technology.",
                "Blockchain applications include cryptocurrency, NFTs, supply chain tracking, and decentralized finance (DeFi)."
            ]
        },
        {
            "tag": "game_development",
            "patterns": [
                "how to make games",
                "game development engines",
                "Unity vs Unreal",
                "2D game development",
                "3D game development",
                "game programming",
                "game design principles",
                "game physics",
                "game AI",
                "mobile game development",
                "game optimization",
                "game assets",
                "game networking",
                "game monetization",
                "game development career"
            ],
            "responses": [
                "Game development involves programming, design, art, and sound to create interactive experiences.",
                "Popular game engines include Unity and Unreal Engine, each with their own strengths for different types of games.",
                "Game development requires knowledge of graphics, physics, AI, and often multiplayer networking.",
                "Mobile game development focuses on optimization, user engagement, and effective monetization strategies."
            ]
        },
        {
            "tag": "ui_ux_design",
            "patterns": [
                "what is UI UX design",
                "user interface design",
                "user experience principles",
                "design thinking",
                "wireframing tools",
                "prototyping",
                "user research",
                "usability testing",
                "responsive design",
                "design systems",
                "accessibility design",
                "mobile first design",
                "UI design tools",
                "UX research methods",
                "interaction design"
            ],
            "responses": [
                "UI/UX design focuses on creating user-friendly, efficient, and enjoyable digital experiences.",
                "UI design handles visual elements while UX design ensures overall usability and user satisfaction.",
                "Popular design tools include Figma, Adobe XD, and Sketch for creating interfaces and prototypes.",
                "Good UI/UX considers accessibility, user research, and iterative design improvements."
            ]
        },
        {
            "tag": "embedded_systems",
            "patterns": [
                "what are embedded systems",
                "IoT development",
                "embedded programming",
                "microcontroller programming",
                "Arduino development",
                "Raspberry Pi projects",
                "embedded C",
                "real time systems",
                "firmware development",
                "embedded Linux",
                "IoT protocols",
                "sensor integration",
                "embedded security",
                "RTOS",
                "hardware interfaces"
            ],
            "responses": [
                "Embedded systems are specialized computing systems built into larger devices, often with real-time computing constraints.",
                "IoT (Internet of Things) development combines embedded systems with network connectivity and cloud services.",
                "Popular platforms include Arduino for beginners and Raspberry Pi for more complex projects.",
                "Embedded development requires understanding of hardware interfaces, real-time systems, and low-level programming."
            ]
        },
        {
            "tag": "project_management",
            "patterns": [
                "agile methodology",
                "scrum framework",
                "project planning",
                "sprint planning",
                "kanban method",
                "project management tools",
                "team collaboration",
                "risk management",
                "project estimation",
                "agile ceremonies",
                "project documentation",
                "stakeholder management",
                "project tracking",
                "release planning",
                "project metrics"
            ],
            "responses": [
                "Agile methodology emphasizes iterative development, collaboration, and adaptability to change.",
                "Scrum is a popular agile framework with specific roles, events, and artifacts for project management.",
                "Project management tools like Jira, Trello, and Asana help teams track and organize work.",
                "Effective project management balances scope, time, cost, and quality while managing stakeholder expectations."
            ]
        },
        {
            "tag": "career_advice",
            "patterns": [
                "how to become a developer",
                "programming career path",
                "tech interview preparation",
                "coding portfolio",
                "tech resume tips",
                "developer roadmap",
                "coding bootcamp",
                "tech certifications",
                "career transition to tech",
                "software engineer salary",
                "remote developer jobs",
                "freelance programming",
                "tech job search",
                "programming internships",
                "developer skills needed"
            ],
            "responses": [
                "To become a developer, focus on learning fundamental programming concepts, building projects, and contributing to open source.",
                "Tech interviews often involve coding challenges, system design discussions, and behavioral questions.",
                "Building a portfolio of projects and maintaining an active GitHub profile can help showcase your skills.",
                "Consider specializing in areas like web development, mobile apps, AI/ML, or cloud computing based on your interests."
            ]
        },
        {
            "tag": "debugging",
            "patterns": [
                "How do I debug my code?",
                "My program is crashing, what should I do?",
                "How to find errors in my code?",
                "Any debugging techniques?",
                "My code has a bug, help!"
            ],
            "responses": [
                "Start by checking the error message and tracing the issue step by step.",
                "Use print statements or a debugger to inspect variable values.",
                "Try isolating the problem by commenting out parts of the code.",
                "Have you checked for syntax errors? Sometimes it’s a missing semicolon!",
                "Rubber duck debugging helps—explain your code to an object or a friend!"
            ]
        },
        {
            "tag": "syntax_errors",
            "patterns": [
                "What does a syntax error mean?",
                "I keep getting a syntax error, what do I do?",
                "How to fix syntax errors?",
                "What is the most common syntax mistake?",
                "Syntax error in Python, help!"
            ],
            "responses": [
                "A syntax error means there is a mistake in the structure of your code.",
                "Check for missing brackets, colons, or indentation issues if you’re using Python.",
                "Look at the error message carefully—it usually points to the exact problem.",
                "Forgetting to close quotes, brackets, or using incorrect operators is a common mistake.",
                "Review the syntax rules of the programming language you are using."
            ]
        },
        {
            "tag": "best_practices",
            "patterns": [
                "What are coding best practices?",
                "How do I write clean code?",
                "What are some tips for better coding?",
                "How to improve my coding style?",
                "Any tips for writing efficient code?"
            ],
            "responses": [
                "Use meaningful variable names and keep functions short and focused.",
                "Write comments and document your code properly.",
                "Follow coding standards and style guides like PEP 8 for Python.",
                "Avoid deep nesting and keep your code modular.",
                "Test your code regularly and refactor when needed."
            ]
        },
        {
            "tag": "language_recommendation",
            "patterns": [
                "Which programming language should I learn?",
                "What’s the best language for beginners?",
                "Should I learn Python or Java?",
                "Which programming language is most in demand?",
                "Best language for web development?"
            ],
            "responses": [
                "Python is great for beginners due to its readability and simplicity.",
                "If you're interested in web development, JavaScript is a must-know.",
                "For data science and AI, Python is widely used.",
                "Java is strong for enterprise applications and Android development.",
                "It depends on your goals—each language has its strengths!"
            ]
        },
        {
            "tag": "algorithm_help",
            "patterns": [
                "How do I learn algorithms?",
                "What’s the best way to study algorithms?",
                "Any resources for learning data structures?",
                "How to implement a sorting algorithm?",
                "Explain binary search."
            ],
            "responses": [
                "Start with basic algorithms like sorting and searching before moving to advanced topics.",
                "Practice implementing algorithms from scratch to understand them deeply.",
                "Use resources like LeetCode, GeeksforGeeks, and CLRS book for studying.",
                "Binary search is an efficient way to find an element in a sorted array by dividing it in half repeatedly.",
                "Understanding time complexity (Big O notation) will help you evaluate algorithm efficiency."
            ]
        },
        {
            "tag": "code_debugging",
            "patterns": [
                "how to debug code",
                "best debugging techniques",
                "debugging tips"
            ],
            "responses": [
                "Debugging can be done using print statements, logging, or interactive debuggers like `pdb` in Python.",
                "Use breakpoints in your IDE to step through code and inspect variable values."
            ]
        },
        {
            "tag": "regex",
            "patterns": [
                "what is regex",
                "how to use regex",
                "regex examples"
            ],
            "responses": [
                "Regex (Regular Expressions) helps match patterns in text. Example:\n```python\nimport re\npattern = r'\\d{3}-\\d{2}-\\d{4}'\nmatch = re.search(pattern, '123-45-6789')\n```"
            ]
        },
        {
            "tag": "api_requests",
            "patterns": [
                "how to make API requests",
                "fetch data from API",
                "send API request"
            ],
            "responses": [
                "You can use Python's `requests` module to fetch data:\n```python\nimport requests\nresponse = requests.get('https://api.example.com')\nprint(response.json())\n```"
            ]
        },
        {
            "tag": "json_parsing",
            "patterns": [
                "how to parse JSON",
                "read JSON file",
                "convert JSON to dict"
            ],
            "responses": [
                "Python's `json` module is useful:\n```python\nimport json\ndata = json.loads('{\"name\": \"John\"}')\nprint(data['name'])\n```"
            ]
        },
        {
            "tag": "web_scraping",
            "patterns": [
                "what is web scraping",
                "how to scrape a website",
                "best web scraping tools"
            ],
            "responses": [
                "You can use BeautifulSoup for web scraping in Python:\n```python\nfrom bs4 import BeautifulSoup\nimport requests\nresponse = requests.get('https://example.com')\nsoup = BeautifulSoup(response.text, 'html.parser')\n```"
            ]
        },
        {
            "tag": "docker_basics",
            "patterns": [
                "what is Docker",
                "how does Docker work",
                "why use Docker"
            ],
            "responses": [
                "Docker is a platform to create, deploy, and run applications in containers. Common commands:\n- `docker build .`\n- `docker run -p 8080:80 image-name`\n- `docker-compose up`"
            ]
        },
        {
            "tag": "fastapi_basics",
            "patterns": [
                "what is FastAPI",
                "how to create an API with FastAPI",
                "why use FastAPI"
            ],
            "responses": [
                "FastAPI is a high-performance web framework for building APIs. Example:\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.get('/')\ndef read_root():\n    return {\"message\": \"Hello, FastAPI!\"}\n```"
            ]
        },
        {
            "tag": "flask_basics",
            "patterns": [
                "what is Flask",
                "how does Flask work",
                "Flask vs FastAPI"
            ],
            "responses": [
                "Flask is a lightweight Python framework for web applications. Example:\n```python\nfrom flask import Flask\napp = Flask(__name__)\n@app.route('/')\ndef home():\n    return 'Hello, Flask!'\n```"
            ]
        },
        {
            "tag": "django_basics",
            "patterns": [
                "what is Django",
                "how does Django work",
                "Django vs Flask"
            ],
            "responses": [
                "Django is a full-stack Python web framework. It follows the Model-View-Template (MVT) pattern and is great for building scalable web applications."
            ]
        },
        {
            "tag": "pytorch_basics",
            "patterns": [
                "what is PyTorch",
                "how to use PyTorch",
                "PyTorch vs TensorFlow"
            ],
            "responses": [
                "PyTorch is a deep learning library known for its flexibility and ease of use. Example:\n```python\nimport torch\ntensor = torch.tensor([1, 2, 3])\nprint(tensor)\n```"
            ]
        },
        {
            "tag": "tensorflow_basics",
            "patterns": [
                "what is TensorFlow",
                "how does TensorFlow work",
                "TensorFlow vs PyTorch"
            ],
            "responses": [
                "TensorFlow is an open-source library for numerical computation and machine learning. Example:\n```python\nimport tensorflow as tf\ntensor = tf.constant([1, 2, 3])\nprint(tensor)\n```"
            ]
        },
        {
            "tag": "nlp_basics",
            "patterns": [
                "what is NLP",
                "how does NLP work",
                "best NLP libraries"
            ],
            "responses": [
                "Natural Language Processing (NLP) allows computers to understand and process human language. Libraries include NLTK, spaCy, and Hugging Face Transformers."
            ]
        },
        {
            "tag": "cpp_basics",
            "patterns": [
                "what is C++",
                "how to write a C++ program",
                "C++ syntax"
            ],
            "responses": [
                "C++ is a powerful programming language used for system programming, game development, and more. Example:\n```cpp\n#include <iostream>\nint main() {\n    std::cout << 'Hello, C++!';\n    return 0;\n}\n```"
            ]
        },
        {
            "tag": "cpp_oop",
            "patterns": [
                "what is OOP in C++",
                "how to use classes in C++",
                "C++ object-oriented programming"
            ],
            "responses": [
                "C++ supports OOP principles like classes and inheritance. Example:\n```cpp\nclass Car {\npublic:\n    string brand;\n    Car(string b) { brand = b; }\n};\n```"
            ]
        },
        {
            "tag": "cpp_memory_management",
            "patterns": [
                "how does memory management work in C++",
                "what is new and delete in C++"
            ],
            "responses": [
                "C++ allows manual memory management using `new` and `delete`:\n```cpp\nint* ptr = new int;\ndelete ptr;\n```"
            ]
        },
        {
            "tag": "electron_basics",
            "patterns": [
                "what is Electron.js",
                "how does Electron work",
                "Electron.js examples"
            ],
            "responses": [
                "Electron.js is a framework for building cross-platform desktop apps using web technologies. Example:\n```javascript\nconst { app, BrowserWindow } = require('electron');\napp.whenReady().then(() => {\n    const win = new BrowserWindow({ width: 800, height: 600 });\n    win.loadURL('https://example.com');\n});\n```"
            ]
        },
        {
            "tag": "code_optimization",
            "patterns": [
                "how to optimize code",
                "best coding practices",
                "tips for efficient coding"
            ],
            "responses": [
                "To optimize code:\n- Use efficient data structures\n- Avoid unnecessary loops\n- Leverage caching and memoization\n- Profile your code for bottlenecks"
            ]
        },
        {
            "tag": "parallel_computing",
            "patterns": [
                "what is parallel computing",
                "how to use multiprocessing",
                "multi-threading vs multiprocessing"
            ],
            "responses": [
                "Parallel computing improves performance by running tasks concurrently. Example in Python:\n```python\nfrom multiprocessing import Pool\ndef square(n):\n    return n * n\nwith Pool(4) as p:\n    print(p.map(square, [1, 2, 3, 4]))\n```"
            ]
        },
        {
            "tag": "cloud_computing",
            "patterns": [
                "what is cloud computing",
                "best cloud platforms",
                "how does cloud computing work"
            ],
            "responses": [
                "Cloud computing allows scalable storage and computing resources over the internet. Popular platforms include AWS, GCP, and Azure."
            ]
        },
        {
            "tag": "devops",
            "patterns": [
                "what is DevOps",
                "how does DevOps work",
                "best DevOps tools"
            ],
            "responses": [
                "DevOps integrates development and operations for faster deployment. Tools include Docker, Kubernetes, Jenkins, and Terraform."
            ]
        },
        {
            "tag": "greeting",
            "patterns": [
                "hello",
                "hi",
                "hey",
                "good morning",
                "good evening",
                "what’s up",
                "how’s it going"
            ],
            "responses": [
                "Hello! How can I assist with your coding?",
                "Hi there! Need help with some code?",
                "Hey! What coding challenge are you working on?"
            ]
        },
        {
            "tag": "goodbye",
            "patterns": [
                "bye",
                "goodbye",
                "see you",
                "later",
                "catch you later",
                "talk to you soon"
            ],
            "responses": [
                "Goodbye! Happy coding!",
                "See you later! Keep coding!",
                "Catch you soon! Let me know if you need coding help."
            ]
        },
        {
            "tag": "thanks",
            "patterns": [
                "thank you",
                "thanks",
                "appreciate it",
                "thanks a lot",
                "much appreciated"
            ],
            "responses": [
                "You're welcome! Happy to help!",
                "No problem! Keep coding!",
                "Anytime! Let me know if you need more help."
            ]
        },
        {
            "tag": "python_basics",
            "patterns": [
                "what is python",
                "explain python",
                "is python good",
                "why use python",
                "tell me about python"
            ],
            "responses": [
                "Python is a high-level, interpreted programming language known for its simplicity and readability.",
                "Python is widely used in web development, data science, automation, and more.",
                "Python is great because of its vast libraries and ease of learning."
            ]
        },
        {
            "tag": "python_syntax",
            "patterns": [
                "how to define a function in python",
                "python function syntax",
                "write a python function"
            ],
            "responses": [
                "You can define a function in Python using:\n```python\ndef my_function():\n    print('Hello!')\n```"
            ]
        },
        {
            "tag": "python_loops",
            "patterns": [
                "how to use loops in python",
                "python loop examples",
                "difference between for and while loop"
            ],
            "responses": [
                "Python supports `for` and `while` loops:\n```python\nfor i in range(5):\n    print(i)\n\nwhile condition:\n    print('Looping')\n```"
            ]
        },
        {
            "tag": "python_oop",
            "patterns": [
                "what is OOP in python",
                "explain object-oriented programming",
                "how to create a class in python"
            ],
            "responses": [
                "Object-Oriented Programming (OOP) is a paradigm in Python that allows structuring code using objects and classes. Example:\n```python\nclass Car:\n    def __init__(self, brand):\n        self.brand = brand\n    def drive(self):\n        print(f'{self.brand} is driving!')\n```"
            ]
        },
        {
            "tag": "error_handling",
            "patterns": [
                "how to handle errors in python",
                "try except example",
                "python exception handling"
            ],
            "responses": [
                "You can handle errors using try-except:\n```python\ntry:\n    x = 1 / 0\nexcept ZeroDivisionError:\n    print('Cannot divide by zero!')\n```"
            ]
        },
        {
            "tag": "git_commands",
            "patterns": [
                "how to use git",
                "git basic commands",
                "how to commit in git"
            ],
            "responses": [
                "Basic Git commands:\n- `git init`: Initialize a repository\n- `git add .`: Stage changes\n- `git commit -m 'message'`: Commit changes\n- `git push origin main`: Push to GitHub"
            ]
        },
        {
            "tag": "html_basics",
            "patterns": [
                "what is HTML",
                "explain HTML",
                "how does HTML work"
            ],
            "responses": [
                "HTML (HyperText Markup Language) is the foundation of web pages, defining their structure using tags like `<p>`, `<h1>`, `<a>`, etc."
            ]
        },
        {
            "tag": "css_basics",
            "patterns": [
                "what is CSS",
                "explain CSS",
                "how does CSS work"
            ],
            "responses": [
                "CSS (Cascading Style Sheets) styles HTML elements. Example:\n```css\nbody {\n  background-color: lightblue;\n}\n```"
            ]
        },
        {
            "tag": "javascript_basics",
            "patterns": [
                "what is JavaScript",
                "explain JavaScript",
                "why use JavaScript"
            ],
            "responses": [
                "JavaScript is a programming language for web development, used to create interactive elements on websites."
            ]
        },
        {
            "tag": "js_dom",
            "patterns": [
                "how to manipulate DOM in JavaScript",
                "JavaScript DOM example"
            ],
            "responses": [
                "You can manipulate the DOM using JavaScript:\n```js\ndocument.getElementById('demo').innerText = 'Hello!';\n```"
            ]
        },
        {
            "tag": "database_basics",
            "patterns": [
                "what is a database",
                "how do databases work",
                "explain databases"
            ],
            "responses": [
                "A database stores data in an organized manner. SQL databases like MySQL use structured tables, while NoSQL databases like MongoDB use documents."
            ]
        },
        {
            "tag": "sql_basics",
            "patterns": [
                "what is SQL",
                "how does SQL work",
                "basic SQL queries"
            ],
            "responses": [
                "SQL (Structured Query Language) is used to manage databases. Example:\n```sql\nSELECT * FROM users WHERE age > 18;\n```"
            ]
        },
        {
            "tag": "mongodb_basics",
            "patterns": [
                "what is MongoDB",
                "how does MongoDB work",
                "why use MongoDB"
            ],
            "responses": [
                "MongoDB is a NoSQL database that stores data in JSON-like documents instead of tables."
            ]
        },
        {
            "tag": "linux_commands",
            "patterns": [
                "basic linux commands",
                "how to use terminal",
                "common bash commands"
            ],
            "responses": [
                "Some basic Linux commands:\n- `ls`: List files\n- `cd`: Change directory\n- `mkdir`: Create folder\n- `rm -rf`: Delete files/folders"
            ]
        },
        {
            "tag": "data_structures",
            "patterns": [
                "what are data structures",
                "types of data structures",
                "why use data structures"
            ],
            "responses": [
                "Data structures organize data efficiently. Examples:\n- Arrays\n- Linked Lists\n- Stacks & Queues\n- Trees & Graphs"
            ]
        },
        {
            "tag": "algorithms",
            "patterns": [
                "what are algorithms",
                "types of algorithms",
                "why use algorithms"
            ],
            "responses": [
                "Algorithms solve computational problems efficiently. Examples:\n- Sorting: Bubble Sort, Quick Sort\n- Searching: Binary Search, BFS, DFS"
            ]
        },
        {
            "tag": "ml_basics",
            "patterns": [
                "what is machine learning",
                "how does ML work",
                "why use ML"
            ],
            "responses": [
                "Machine Learning enables computers to learn from data without explicit programming. Popular libraries include TensorFlow and PyTorch."
            ]
        },
        {
            "tag": "deep_learning",
            "patterns": [
                "what is deep learning",
                "how does deep learning work",
                "deep learning vs machine learning"
            ],
            "responses": [
                "Deep Learning is a subset of ML that uses neural networks to model complex patterns in data. It powers AI applications like image recognition."
            ]
        },
        {
            "tag": "ai_coding",
            "patterns": [
                "how to use AI for coding",
                "best AI tools for programming",
                "can AI write code"
            ],
            "responses": [
                "AI coding tools like GitHub Copilot and ChatGPT assist in writing, debugging, and optimizing code."
            ]
        },
        {
            "tag": "git_basics",
            "patterns": [
                "what is Git",
                "how to use Git",
                "Git vs GitHub"
            ],
            "responses": [
                "Git is a version control system used for tracking changes in code. Common commands:\n```bash\ngit init\ngit add .\ngit commit -m 'Initial commit'\ngit push origin main\n```"
            ]
        },
        {
            "tag": "github_workflow",
            "patterns": [
                "how to create a GitHub repository",
                "how to push code to GitHub",
                "GitHub commands"
            ],
            "responses": [
                "To push code to GitHub:\n```bash\ngit remote add origin <repo-url>\ngit push -u origin main\n```"
            ]
        },
        {
            "tag": "git_branching",
            "patterns": [
                "how to create a branch in Git",
                "how to switch branches",
                "Git branching"
            ],
            "responses": [
                "Git branches help in parallel development. Commands:\n```bash\ngit branch new-feature\ngit checkout new-feature\ngit merge main\n```"
            ]
        },
        {
            "tag": "git_merge_conflicts",
            "patterns": [
                "how to resolve merge conflicts in Git",
                "Git merge conflict fix",
                "handling Git conflicts"
            ],
            "responses": [
                "Resolve conflicts by manually editing conflicting files, then:\n```bash\ngit add .\ngit commit -m 'Resolved conflict'\n```"
            ]
        },
        {
            "tag": "docker_commands",
            "patterns": [
                "how to build a Docker image",
                "Dockerfile example",
                "Docker basic commands"
            ],
            "responses": [
                "Docker simplifies app deployment. Basic commands:\n```bash\ndocker build -t my-app .\ndocker run -p 8080:80 my-app\ndocker ps\n```"
            ]
        },
        {
            "tag": "kubernetes_basics",
            "patterns": [
                "what is Kubernetes",
                "how does Kubernetes work",
                "why use Kubernetes"
            ],
            "responses": [
                "Kubernetes orchestrates containerized applications. Basic commands:\n```bash\nkubectl apply -f deployment.yaml\nkubectl get pods\nkubectl delete pod my-pod\n```"
            ]
        },
        {
            "tag": "sql_basics",
            "patterns": [
                "what is SQL",
                "how to write SQL queries",
                "SQL commands"
            ],
            "responses": [
                "SQL is used for managing databases. Example query:\n```sql\nSELECT * FROM users WHERE age > 18;\n```"
            ]
        },
        {
            "tag": "nosql_basics",
            "patterns": [
                "what is NoSQL",
                "SQL vs NoSQL",
                "best NoSQL databases"
            ],
            "responses": [
                "NoSQL databases store data in flexible formats. Examples include MongoDB, Redis, and Cassandra."
            ]
        },
        {
            "tag": "mongodb_basics",
            "patterns": [
                "how to use MongoDB",
                "MongoDB commands",
                "MongoDB vs SQL"
            ],
            "responses": [
                "MongoDB stores data in JSON-like documents. Example query:\n```python\nfrom pymongo import MongoClient\nclient = MongoClient('mongodb://localhost:27017/')\ndb = client['mydatabase']\n```"
            ]
        },
        {
            "tag": "redis_basics",
            "patterns": [
                "what is Redis",
                "how does Redis work",
                "Redis commands"
            ],
            "responses": [
                "Redis is a fast, in-memory data store. Example command:\n```bash\nredis-cli set key 'Hello World'\nredis-cli get key\n```"
            ]
        },
        {
            "tag": "cpp_stl",
            "patterns": [
                "what is STL in C++",
                "how to use vectors in C++",
                "C++ STL functions"
            ],
            "responses": [
                "The C++ Standard Template Library (STL) provides useful containers. Example:\n```cpp\n#include <vector>\nstd::vector<int> v = {1, 2, 3};\n```"
            ]
        },
        {
            "tag": "cpp_multithreading",
            "patterns": [
                "how to use multithreading in C++",
                "C++ threads example",
                "multithreading in C++"
            ],
            "responses": [
                "C++ allows multithreading using the `<thread>` library:\n```cpp\n#include <thread>\nvoid print() { std::cout << 'Hello, Thread!'; }\nstd::thread t(print);\nt.join();\n```"
            ]
        },
        {
            "tag": "cpp_memory_leaks",
            "patterns": [
                "how to detect memory leaks in C++",
                "best tools for memory leaks",
                "C++ memory management"
            ],
            "responses": [
                "Use tools like Valgrind to detect memory leaks:\n```bash\nvalgrind --leak-check=full ./my_program\n```"
            ]
        },
        {
            "tag": "python_asyncio",
            "patterns": [
                "what is asyncio in Python",
                "how to use async in Python",
                "Python async example"
            ],
            "responses": [
                "Asyncio enables asynchronous programming in Python:\n```python\nimport asyncio\nasync def main():\n    print('Hello')\n    await asyncio.sleep(1)\n    print('World')\nasyncio.run(main())\n```"
            ]
        },
        {
            "tag": "rest_api",
            "patterns": [
                "what is a REST API",
                "how do REST APIs work",
                "REST API example"
            ],
            "responses": [
                "REST APIs allow web services to communicate over HTTP. Example Flask API:\n```python\nfrom flask import Flask\napp = Flask(__name__)\n@app.route('/api')\ndef api():\n    return {'message': 'Hello, API!'}\n```"
            ]
        },
        {
            "tag": "graphql_basics",
            "patterns": [
                "what is GraphQL",
                "GraphQL vs REST",
                "how does GraphQL work"
            ],
            "responses": [
                "GraphQL allows querying APIs with flexibility. Example query:\n```graphql\nquery {\n  user(id: \"123\") {\n    name\n    email\n  }\n}\n```"
            ]
        },
        {
            "tag": "websockets_basics",
            "patterns": [
                "what are WebSockets",
                "how do WebSockets work",
                "WebSocket example"
            ],
            "responses": [
                "WebSockets enable real-time communication. Example in JavaScript:\n```javascript\nconst socket = new WebSocket('ws://example.com');\nsocket.onmessage = (event) => console.log(event.data);\n```"
            ]
        },
        {
            "tag": "machine_learning",
            "patterns": [
                "what is machine learning",
                "how does ML work",
                "machine learning algorithms"
            ],
            "responses": [
                "Machine learning allows computers to learn from data. Common algorithms:\n- Linear Regression\n- Decision Trees\n- Neural Networks"
            ]
        },
        {
            "tag": "deep_learning",
            "patterns": [
                "what is deep learning",
                "how does deep learning work",
                "deep learning vs machine learning"
            ],
            "responses": [
                "Deep learning is a subset of ML using neural networks. Example with PyTorch:\n```python\nimport torch\nfrom torch import nn\nmodel = nn.Sequential(nn.Linear(10, 5), nn.ReLU(), nn.Linear(5, 1))\n```"
            ]
        },
        {
            "tag": "devops_ci_cd",
            "patterns": [
                "what is CI/CD",
                "how does CI/CD work",
                "best CI/CD tools"
            ],
            "responses": [
                "CI/CD automates software deployment. Tools include Jenkins, GitHub Actions, and GitLab CI/CD."
            ]
        },
        {
            "tag": "linux_commands",
            "patterns": [
                "best Linux commands",
                "how to use Linux terminal",
                "Linux commands list"
            ],
            "responses": [
                "Useful Linux commands:\n- `ls` (List files)\n- `cd` (Change directory)\n- `grep` (Search text)\n- `chmod` (Change permissions)"
            ]
        },
        {
            "tag": "linux_process_management",
            "patterns": [
                "how to manage processes in Linux",
                "Linux process commands",
                "kill process in Linux"
            ],
            "responses": [
                "Use these commands for process management:\n```bash\nps aux | grep python\nkill -9 <PID>\ntop\nhtop\n```"
            ]
        },
        {
            "tag": "python_oop",
            "patterns": [
                "what is OOP in Python",
                "how to use classes in Python",
                "Python object-oriented programming"
            ],
            "responses": [
                "Object-Oriented Programming (OOP) in Python uses classes and objects. Example:\n```python\nclass Car:\n    def __init__(self, brand):\n        self.brand = brand\n    def drive(self):\n        print(f'{self.brand} is driving!')\ncar = Car('Tesla')\ncar.drive()\n```"
            ]
        },
        {
            "tag": "python_exceptions",
            "patterns": [
                "how to handle exceptions in Python",
                "try-except example",
                "Python error handling"
            ],
            "responses": [
                "Use `try-except` blocks to handle errors in Python:\n```python\ntry:\n    x = 1 / 0\nexcept ZeroDivisionError:\n    print('Cannot divide by zero!')\n```"
            ]
        },
        {
            "tag": "python_file_handling",
            "patterns": [
                "how to read a file in Python",
                "Python file handling",
                "how to write to a file in Python"
            ],
            "responses": [
                "Python allows file operations. Example:\n```python\nwith open('file.txt', 'r') as file:\n    data = file.read()\nprint(data)\n```"
            ]
        },
        {
            "tag": "python_data_structures",
            "patterns": [
                "what are data structures in Python",
                "Python lists vs tuples",
                "best data structures for Python"
            ],
            "responses": [
                "Python supports lists, tuples, sets, and dictionaries:\n- List: `my_list = [1, 2, 3]`\n- Tuple: `my_tuple = (1, 2, 3)`\n- Set: `my_set = {1, 2, 3}`\n- Dictionary: `my_dict = {'name': 'John', 'age': 25}`"
            ]
        },
        {
            "tag": "fastapi_basics",
            "patterns": [
                "what is FastAPI",
                "how to create an API with FastAPI",
                "FastAPI example"
            ],
            "responses": [
                "FastAPI is a modern web framework for Python. Example API:\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.get('/')\ndef read_root():\n    return {'message': 'Hello, FastAPI!'}\n```"
            ]
        },
        {
            "tag": "javascript_promises",
            "patterns": [
                "what is a JavaScript promise",
                "how do promises work",
                "promise vs async await"
            ],
            "responses": [
                "Promises handle asynchronous operations in JavaScript:\n```javascript\nfetch('https://api.example.com')\n    .then(response => response.json())\n    .then(data => console.log(data))\n    .catch(error => console.error(error));\n```"
            ]
        },
        {
            "tag": "javascript_async_await",
            "patterns": [
                "how to use async/await in JavaScript",
                "async function example",
                "JavaScript await usage"
            ],
            "responses": [
                "`async/await` makes asynchronous code more readable:\n```javascript\nasync function fetchData() {\n    try {\n        let response = await fetch('https://api.example.com');\n        let data = await response.json();\n        console.log(data);\n    } catch (error) {\n        console.error(error);\n    }\n}\nfetchData();\n```"
            ]
        },
        {
            "tag": "react_hooks",
            "patterns": [
                "what are React hooks",
                "how to use useState in React",
                "React useEffect example"
            ],
            "responses": [
                "React hooks enable functional components to use state and side effects:\n```javascript\nimport { useState, useEffect } from 'react';\nfunction App() {\n    const [count, setCount] = useState(0);\n    useEffect(() => {\n        console.log('Component mounted!');\n    }, []);\n    return <button onClick={() => setCount(count + 1)}>Click {count}</button>;\n}\n```"
            ]
        },
        {
            "tag": "nodejs_express",
            "patterns": [
                "how to use Express.js",
                "Express.js basics",
                "Express API example"
            ],
            "responses": [
                "Express.js simplifies building web servers in Node.js:\n```javascript\nconst express = require('express');\nconst app = express();\napp.get('/', (req, res) => res.send('Hello, Express!'));\napp.listen(3000, () => console.log('Server running on port 3000'));\n```"
            ]
        },
        {
            "tag": "cpp_templates",
            "patterns": [
                "what are templates in C++",
                "how to use templates in C++",
                "C++ template example"
            ],
            "responses": [
                "Templates allow generic programming in C++:\n```cpp\ntemplate <typename T>\nT add(T a, T b) {\n    return a + b;\n}\nint main() {\n    std::cout << add(5, 10) << std::endl;\n}\n```"
            ]
        },
        {
            "tag": "cpp_pointers",
            "patterns": [
                "what are pointers in C++",
                "how to use pointers",
                "C++ pointer example"
            ],
            "responses": [
                "Pointers store memory addresses in C++:\n```cpp\nint x = 10;\nint* ptr = &x;\nstd::cout << *ptr << std::endl; // Output: 10\n```"
            ]
        },
        {
            "tag": "linux_networking",
            "patterns": [
                "how to check open ports in Linux",
                "Linux networking commands",
                "how to use netstat"
            ],
            "responses": [
                "Use these Linux networking commands:\n```bash\nnetstat -tulnp\nss -tulnp\nping google.com\n```"
            ]
        },
        {
            "tag": "ethical_hacking",
            "patterns": [
                "what is ethical hacking",
                "best tools for ethical hacking",
                "how to start ethical hacking"
            ],
            "responses": [
                "Ethical hacking involves penetration testing to secure systems. Popular tools:\n- Nmap (Network scanning)\n- Metasploit (Exploitation)\n- Wireshark (Packet analysis)"
            ]
        },
        {
            "tag": "web_scraping",
            "patterns": [
                "what is web scraping",
                "how to scrape data from websites",
                "best Python web scraping libraries"
            ],
            "responses": [
                "Web scraping extracts data from websites. Example using BeautifulSoup:\n```python\nfrom bs4 import BeautifulSoup\nimport requests\nresponse = requests.get('https://example.com')\nsoup = BeautifulSoup(response.text, 'html.parser')\nprint(soup.title.text)\n```"
            ]
        },
        {
            "tag": "data_visualization",
            "patterns": [
                "how to visualize data in Python",
                "best Python visualization libraries",
                "how to plot graphs in Python"
            ],
            "responses": [
                "Matplotlib and Seaborn are great for data visualization:\n```python\nimport matplotlib.pyplot as plt\nplt.plot([1, 2, 3, 4], [10, 20, 25, 30])\nplt.show()\n```"
            ]
        },
        {
            "tag": "api_testing",
            "patterns": [
                "how to test APIs",
                "best tools for API testing",
                "Postman vs cURL"
            ],
            "responses": [
                "Use Postman or cURL for API testing. Example cURL request:\n```bash\ncurl -X GET https://api.example.com/data\n```"
            ]
        },
        {
            "tag": "cloud_computing",
            "patterns": [
                "what is cloud computing",
                "best cloud platforms",
                "AWS vs Azure vs GCP"
            ],
            "responses": [
                "Cloud computing provides scalable computing resources. Major providers:\n- AWS (Amazon Web Services)\n- Azure (Microsoft Cloud)\n- GCP (Google Cloud Platform)"
            ]
        },
        {
            "tag": "python_recursion",
            "patterns": [
                "what is recursion in Python",
                "how to use recursion",
                "Python recursion example"
            ],
            "responses": [
                "Recursion is a function calling itself. Example:\n```python\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)\nprint(factorial(5))  # Output: 120\n```"
            ]
        },
        {
            "tag": "python_generators",
            "patterns": [
                "what are generators in Python",
                "how to use yield in Python",
                "Python generator function"
            ],
            "responses": [
                "Generators create iterators using `yield` instead of `return`:\n```python\ndef count_up():\n    n = 1\n    while True:\n        yield n\n        n += 1\ncounter = count_up()\nprint(next(counter))  # Output: 1\nprint(next(counter))  # Output: 2\n```"
            ]
        },
        {
            "tag": "python_multithreading",
            "patterns": [
                "how to use multithreading in Python",
                "Python threading module",
                "difference between threading and multiprocessing"
            ],
            "responses": [
                "Use `threading` for concurrency in Python:\n```python\nimport threading\ndef print_numbers():\n    for i in range(5):\n        print(i)\nthread = threading.Thread(target=print_numbers)\nthread.start()\nthread.join()\n```"
            ]
        },
        {
            "tag": "javascript_closures",
            "patterns": [
                "what is a closure in JavaScript",
                "JavaScript closure example",
                "how do closures work"
            ],
            "responses": [
                "A closure allows a function to retain access to its scope even after execution:\n```javascript\nfunction outer() {\n    let count = 0;\n    return function() {\n        count++;\n        console.log(count);\n    };\n}\nconst counter = outer();\ncounter(); // Output: 1\n```"
            ]
        },
        {
            "tag": "javascript_event_loop",
            "patterns": [
                "what is the JavaScript event loop",
                "how does event loop work in JavaScript",
                "JavaScript event loop explained"
            ],
            "responses": [
                "The JavaScript event loop handles asynchronous execution:\n1. Call Stack - Executes synchronous code\n2. Web APIs - Handles async tasks (e.g., setTimeout, fetch)\n3. Task Queue - Stores callback functions for execution after stack clears\nExample:\n```javascript\nconsole.log('Start');\nsetTimeout(() => console.log('Async Task'), 0);\nconsole.log('End');\n// Output: Start -> End -> Async Task\n```"
            ]
        },
        {
            "tag": "react_usecontext",
            "patterns": [
                "what is useContext in React",
                "how to use useContext in React",
                "React context API example"
            ],
            "responses": [
                "`useContext` helps manage global state in React:\n```javascript\nimport { createContext, useContext } from 'react';\nconst ThemeContext = createContext('light');\nfunction App() {\n    return (\n        <ThemeContext.Provider value='dark'>\n            <ChildComponent />\n        </ThemeContext.Provider>\n    );\n}\nfunction ChildComponent() {\n    const theme = useContext(ThemeContext);\n    return <p>Current theme: {theme}</p>;\n}\n```"
            ]
        },
        {
            "tag": "nodejs_mongodb",
            "patterns": [
                "how to connect MongoDB with Node.js",
                "Node.js MongoDB example",
                "best way to use MongoDB with Node.js"
            ],
            "responses": [
                "Use `mongoose` to interact with MongoDB in Node.js:\n```javascript\nconst mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost:27017/mydb', { useNewUrlParser: true, useUnifiedTopology: true });\nconst UserSchema = new mongoose.Schema({ name: String, age: Number });\nconst User = mongoose.model('User', UserSchema);\nUser.create({ name: 'Alice', age: 25 });\n```"
            ]
        },
        {
            "tag": "cpp_smart_pointers",
            "patterns": [
                "what are smart pointers in C++",
                "difference between unique_ptr and shared_ptr",
                "how to use smart pointers"
            ],
            "responses": [
                "Smart pointers manage memory automatically in C++:\n```cpp\n#include <memory>\nint main() {\n    std::unique_ptr<int> ptr = std::make_unique<int>(10);\n    std::cout << *ptr << std::endl;\n}\n```"
            ]
        },
        {
            "tag": "cpp_multithreading",
            "patterns": [
                "how to use multithreading in C++",
                "C++ threading example",
                "what is std::thread"
            ],
            "responses": [
                "Use `std::thread` for parallel execution:\n```cpp\n#include <thread>\n#include <iostream>\nvoid printMessage() {\n    std::cout << 'Hello from thread!' << std::endl;\n}\nint main() {\n    std::thread t(printMessage);\n    t.join();\n}\n```"
            ]
        },
        {
            "tag": "linux_process_management",
            "patterns": [
                "how to list running processes in Linux",
                "how to kill a process in Linux",
                "Linux ps command"
            ],
            "responses": [
                "Use these Linux commands to manage processes:\n```bash\nps aux  # List all processes\nkill -9 <PID>  # Kill a process by ID\ntop  # Show active processes\n```"
            ]
        },
        {
            "tag": "devops_ci_cd",
            "patterns": [
                "what is CI/CD",
                "best CI/CD tools",
                "how to set up CI/CD pipeline"
            ],
            "responses": [
                "CI/CD automates software deployment. Popular tools:\n- GitHub Actions\n- Jenkins\n- GitLab CI/CD\nExample GitHub Actions workflow:\n```yaml\nname: Deploy\non: push\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - run: npm install && npm run build\n```"
            ]
        },
        {
            "tag": "machine_learning",
            "patterns": [
                "how to start machine learning",
                "best Python libraries for ML",
                "machine learning basics"
            ],
            "responses": [
                "Machine learning requires data and models. Popular libraries:\n- Scikit-learn (Traditional ML)\n- TensorFlow & PyTorch (Deep Learning)\nExample using Scikit-learn:\n```python\nfrom sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nX = [[1], [2], [3]]\ny = [2, 4, 6]\nmodel.fit(X, y)\nprint(model.predict([[4]]))  # Output: [8]\n```"
            ]
        },
        {
            "tag": "cybersecurity_basics",
            "patterns": [
                "how to secure a website",
                "best cybersecurity practices",
                "how to protect against hacking"
            ],
            "responses": [
                "Follow these cybersecurity practices:\n- Use HTTPS and TLS encryption\n- Implement secure authentication (OAuth, JWT)\n- Sanitize user input to prevent SQL Injection\n- Regularly update software and dependencies"
            ]
        },
        {
            "tag": "cloud_kubernetes",
            "patterns": [
                "what is Kubernetes",
                "how to deploy apps with Kubernetes",
                "Kubernetes vs Docker"
            ],
            "responses": [
                "Kubernetes manages containerized applications. Example YAML file:\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-app\ndefaultConfig:\n  replicas: 3\nspec:\n  template:\n    spec:\n      containers:\n      - name: my-app\n        image: my-app:latest\n```"
            ]
        },
        {
            "tag": "python_basics",
            "patterns": [
                "how to declare a variable in Python",
                "Python variable example",
                "what are Python data types"
            ],
            "responses": [
                "In Python, you declare variables dynamically:\n```python\nx = 10  # Integer\ny = 3.14  # Float\nname = 'Alice'  # String\nis_active = True  # Boolean\n```"
            ]
        },
        {
            "tag": "python_functions",
            "patterns": [
                "how to define a function in Python",
                "Python function example",
                "what is a function in Python"
            ],
            "responses": [
                "Define a function using `def`:\n```python\ndef greet(name):\n    return f'Hello, {name}!'\nprint(greet('Alice'))  # Output: Hello, Alice!\n```"
            ]
        },
        {
            "tag": "python_oop",
            "patterns": [
                "what is object-oriented programming in Python",
                "Python OOP example",
                "how to use classes in Python"
            ],
            "responses": [
                "Python supports OOP with classes and objects:\n```python\nclass Car:\n    def __init__(self, brand):\n        self.brand = brand\n    def drive(self):\n        print(f'The {self.brand} is driving!')\ncar = Car('Tesla')\ncar.drive()\n```"
            ]
        },
        {
            "tag": "python_file_handling",
            "patterns": [
                "how to read a file in Python",
                "Python file handling example",
                "write to a file in Python"
            ],
            "responses": [
                "Use `open()` for file operations:\n```python\nwith open('file.txt', 'w') as f:\n    f.write('Hello, world!')\nwith open('file.txt', 'r') as f:\n    print(f.read())  # Output: Hello, world!\n```"
            ]
        },
        {
            "tag": "python_sql",
            "patterns": [
                "how to connect Python with SQL",
                "Python MySQL example",
                "best way to use Python with databases"
            ],
            "responses": [
                "Use `sqlite3` for lightweight databases:\n```python\nimport sqlite3\nconn = sqlite3.connect('database.db')\ncursor = conn.cursor()\ncursor.execute('CREATE TABLE users (id INTEGER, name TEXT)')\ncursor.execute('INSERT INTO users VALUES (1, \"Alice\")')\nconn.commit()\ncursor.execute('SELECT * FROM users')\nprint(cursor.fetchall())\n```"
            ]
        },
        {
            "tag": "javascript_async",
            "patterns": [
                "how to use async/await in JavaScript",
                "JavaScript asynchronous programming",
                "what is async await"
            ],
            "responses": [
                "Use `async/await` for cleaner asynchronous code:\n```javascript\nasync function fetchData() {\n    let response = await fetch('https://api.example.com');\n    let data = await response.json();\n    console.log(data);\n}\nfetchData();\n```"
            ]
        },
        {
            "tag": "javascript_dom",
            "patterns": [
                "how to manipulate DOM in JavaScript",
                "JavaScript DOM example",
                "how to change HTML with JavaScript"
            ],
            "responses": [
                "Use `document.querySelector` to interact with the DOM:\n```javascript\ndocument.querySelector('#btn').addEventListener('click', () => {\n    document.querySelector('#text').innerText = 'Button clicked!';\n});\n```"
            ]
        },
        {
            "tag": "javascript_promises",
            "patterns": [
                "what is a promise in JavaScript",
                "how to use promises",
                "JavaScript promise example"
            ],
            "responses": [
                "A Promise represents an async operation:\n```javascript\nlet promise = new Promise((resolve, reject) => {\n    setTimeout(() => resolve('Done!'), 2000);\n});\npromise.then(console.log);  // Output after 2 sec: Done!\n```"
            ]
        },
        {
            "tag": "cpp_pointers",
            "patterns": [
                "what are pointers in C++",
                "C++ pointer example",
                "how to use pointers"
            ],
            "responses": [
                "Pointers store memory addresses:\n```cpp\n#include <iostream>\nint main() {\n    int num = 10;\n    int* ptr = &num;\n    std::cout << *ptr << std::endl;  // Output: 10\n}\n```"
            ]
        },
        {
            "tag": "cpp_stl",
            "patterns": [
                "what is STL in C++",
                "how to use C++ vectors",
                "C++ STL example"
            ],
            "responses": [
                "STL (Standard Template Library) provides useful data structures:\n```cpp\n#include <vector>\n#include <iostream>\nint main() {\n    std::vector<int> v = {1, 2, 3};\n    v.push_back(4);\n    for (int num : v) {\n        std::cout << num << ' ';\n    }\n    return 0;\n}\n```"
            ]
        },
        {
            "tag": "linux_shell_scripting",
            "patterns": [
                "how to write a shell script",
                "basic shell scripting",
                "Linux shell script example"
            ],
            "responses": [
                "A shell script automates tasks:\n```bash\n#!/bin/bash\necho 'Hello, World!'\n```"
            ]
        },
        {
            "tag": "git_commands",
            "patterns": [
                "how to use Git",
                "basic Git commands",
                "how to push code to GitHub"
            ],
            "responses": [
                "Common Git commands:\n```bash\ngit init  # Initialize repository\ngit add .  # Stage changes\ngit commit -m 'Initial commit'\ngit push origin main  # Push to GitHub\n```"
            ]
        },
        {
            "tag": "data_structures",
            "patterns": [
                "how to implement linked list in Python",
                "Python linked list example",
                "best data structures in Python"
            ],
            "responses": [
                "A linked list in Python:\n```python\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\nclass LinkedList:\n    def __init__(self):\n        self.head = None\n    def append(self, data):\n        if not self.head:\n            self.head = Node(data)\n            return\n        curr = self.head\n        while curr.next:\n            curr = curr.next\n        curr.next = Node(data)\n```"
            ]
        },
        {
            "tag": "algorithms",
            "patterns": [
                "how to implement quicksort",
                "best sorting algorithms",
                "Python quicksort example"
            ],
            "responses": [
                "Quicksort algorithm:\n```python\ndef quicksort(arr):\n    if len(arr) <= 1:\n        return arr\n    pivot = arr[len(arr) // 2]\n    left = [x for x in arr if x < pivot]\n    middle = [x for x in arr if x == pivot]\n    right = [x for x in arr if x > pivot]\n    return quicksort(left) + middle + quicksort(right)\n```"
            ]
        },
        {
            "tag": "debugging_tips",
            "patterns": [
                "how to debug Python code",
                "best debugging techniques",
                "how to use debugger in Python"
            ],
            "responses": [
                "Use `pdb` for debugging:\n```python\nimport pdb\npdb.set_trace()\n```"
            ]
        },
        {
            "tag": "python_intro",
            "patterns": [
                "what is Python",
                "explain Python",
                "is Python good for beginners"
            ],
            "responses": [
                "Python is a high-level, interpreted programming language known for its readability and simplicity. It's great for beginners and widely used in web development, AI, and automation."
            ]
        },
        {
            "tag": "python_variables",
            "patterns": [
                "how to declare variables in Python",
                "Python variable example",
                "Python data types"
            ],
            "responses": [
                "Python variables are dynamically typed:\n```python\nx = 10  # Integer\ny = 3.14  # Float\nname = 'Alice'  # String\nis_active = True  # Boolean\n```"
            ]
        },
        {
            "tag": "python_operators",
            "patterns": [
                "what are Python operators",
                "Python arithmetic operators",
                "logical operators in Python"
            ],
            "responses": [
                "Python supports various operators:\n```python\n# Arithmetic\nsum = 5 + 3\nproduct = 5 * 3\n# Comparison\nis_equal = (5 == 3)  # False\n# Logical\nresult = (5 > 3 and 3 < 10)  # True\n```"
            ]
        },
        {
            "tag": "python_conditions",
            "patterns": [
                "how to use if-else in Python",
                "Python conditional statements",
                "if-elif-else example"
            ],
            "responses": [
                "Conditional statements in Python:\n```python\nx = 10\nif x > 5:\n    print('x is greater than 5')\nelif x == 5:\n    print('x is 5')\nelse:\n    print('x is less than 5')\n```"
            ]
        },
        {
            "tag": "python_loops",
            "patterns": [
                "how to use loops in Python",
                "Python for loop example",
                "while loop in Python"
            ],
            "responses": [
                "Python loops:\n```python\n# For loop\nfor i in range(5):\n    print(i)\n# While loop\nx = 0\nwhile x < 5:\n    print(x)\n    x += 1\n```"
            ]
        },
        {
            "tag": "python_functions",
            "patterns": [
                "how to define a function in Python",
                "Python function example",
                "functions in Python"
            ],
            "responses": [
                "Define functions in Python:\n```python\ndef greet(name):\n    return f'Hello, {name}!'\nprint(greet('Alice'))\n```"
            ]
        },
        {
            "tag": "python_oop",
            "patterns": [
                "what is object-oriented programming in Python",
                "Python OOP example",
                "how to use classes in Python"
            ],
            "responses": [
                "Object-oriented programming (OOP) in Python:\n```python\nclass Car:\n    def __init__(self, brand):\n        self.brand = brand\n    def drive(self):\n        print(f'The {self.brand} is driving!')\ncar = Car('Tesla')\ncar.drive()\n```"
            ]
        },
        {
            "tag": "python_file_handling",
            "patterns": [
                "how to read a file in Python",
                "Python file handling example",
                "write to a file in Python"
            ],
            "responses": [
                "File handling in Python:\n```python\nwith open('file.txt', 'w') as f:\n    f.write('Hello, world!')\nwith open('file.txt', 'r') as f:\n    print(f.read())\n```"
            ]
        },
        {
            "tag": "python_exception_handling",
            "patterns": [
                "how to handle errors in Python",
                "Python exception handling",
                "try except in Python"
            ],
            "responses": [
                "Use try-except to handle errors:\n```python\ntry:\n    x = 1 / 0\nexcept ZeroDivisionError:\n    print('Cannot divide by zero!')\n```"
            ]
        },
        {
            "tag": "python_modules",
            "patterns": [
                "what are Python modules",
                "how to import modules in Python",
                "Python module example"
            ],
            "responses": [
                "Use modules to organize code:\n```python\nimport math\nprint(math.sqrt(16))\n```"
            ]
        },
        {
            "tag": "python_sql",
            "patterns": [
                "how to connect Python with SQL",
                "Python MySQL example",
                "best way to use Python with databases"
            ],
            "responses": [
                "Use `sqlite3` for databases:\n```python\nimport sqlite3\nconn = sqlite3.connect('database.db')\ncursor = conn.cursor()\ncursor.execute('CREATE TABLE users (id INTEGER, name TEXT)')\ncursor.execute('INSERT INTO users VALUES (1, \"Alice\")')\nconn.commit()\ncursor.execute('SELECT * FROM users')\nprint(cursor.fetchall())\n```"
            ]
        },
        {
            "tag": "python_web_scraping",
            "patterns": [
                "how to scrape a website in Python",
                "Python web scraping example",
                "BeautifulSoup example"
            ],
            "responses": [
                "Use BeautifulSoup for web scraping:\n```python\nfrom bs4 import BeautifulSoup\nimport requests\nurl = 'https://example.com'\nresponse = requests.get(url)\nsoup = BeautifulSoup(response.text, 'html.parser')\nprint(soup.title.text)\n```"
            ]
        },
        {
            "tag": "python_apis",
            "patterns": [
                "how to make an API call in Python",
                "Python requests example",
                "best API library for Python"
            ],
            "responses": [
                "Use `requests` to call APIs:\n```python\nimport requests\nresponse = requests.get('https://api.example.com/data')\nprint(response.json())\n```"
            ]
        },
        {
            "tag": "python_flask",
            "patterns": [
                "how to create a web app in Python",
                "Flask example",
                "Python web development"
            ],
            "responses": [
                "A simple Flask web app:\n```python\nfrom flask import Flask\napp = Flask(__name__)\n@app.route('/')\ndef home():\n    return 'Hello, Flask!'\napp.run(debug=True)\n```"
            ]
        },
        {
            "tag": "python_data_science",
            "patterns": [
                "how to use Python for data science",
                "best Python data science libraries",
                "Python data analysis"
            ],
            "responses": [
                "Use Pandas for data analysis:\n```python\nimport pandas as pd\ndata = {'Name': ['Alice', 'Bob'], 'Age': [25, 30]}\ndf = pd.DataFrame(data)\nprint(df)\n```"
            ]
        },
        {
            "tag": "python_machine_learning",
            "patterns": [
                "how to use Python for machine learning",
                "Python ML example",
                "best machine learning libraries"
            ],
            "responses": [
                "Use Scikit-Learn for ML:\n```python\nfrom sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\n```"
            ]
        },
        {
            "tag": "python_debugging",
            "patterns": [
                "how to debug Python code",
                "best debugging techniques",
                "Python debugging tools"
            ],
            "responses": [
                "Use `pdb` for debugging:\n```python\nimport pdb\npdb.set_trace()\n```"
            ]
        },
        {
            "tag": "python_django",
            "patterns": [
                "how to create a Django project",
                "Django basics",
                "what is Django used for"
            ],
            "responses": [
                "Django is a high-level Python web framework:\n```bash\npip install django\ndjango-admin startproject myproject\ncd myproject\npython manage.py runserver\n```"
            ]
        },
        {
            "tag": "python_fastapi",
            "patterns": [
                "how to create an API with FastAPI",
                "FastAPI example",
                "best Python API framework"
            ],
            "responses": [
                "FastAPI is a modern web framework for APIs:\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.get('/')\ndef home():\n    return {'message': 'Hello, FastAPI!'}\n```"
            ]
        },
        {
            "tag": "python_cybersecurity",
            "patterns": [
                "how to secure Python applications",
                "Python for cybersecurity",
                "best Python security practices"
            ],
            "responses": [
                "Use hashing and encryption for security:\n```python\nimport hashlib\npassword = 'secret'\nhashed = hashlib.sha256(password.encode()).hexdigest()\nprint(hashed)\n```"
            ]
        },
        {
            "tag": "python_automation",
            "patterns": [
                "how to automate tasks with Python",
                "Python automation scripts",
                "Python for automation"
            ],
            "responses": [
                "Automate tasks with `schedule`:\n```python\nimport schedule, time\ndef job():\n    print('Task running...')\nschedule.every(10).seconds.do(job)\nwhile True:\n    schedule.run_pending()\n    time.sleep(1)\n```"
            ]
        },
        {
            "tag": "python_multithreading",
            "patterns": [
                "how to use multithreading in Python",
                "Python threading example",
                "best way to handle multiple tasks in Python"
            ],
            "responses": [
                "Use `threading` for concurrent tasks:\n```python\nimport threading\ndef task():\n    print('Thread running...')\nthread = threading.Thread(target=task)\nthread.start()\n```"
            ]
        },
        {
            "tag": "python_multiprocessing",
            "patterns": [
                "how to use multiprocessing in Python",
                "Python multiprocessing example",
                "difference between threading and multiprocessing"
            ],
            "responses": [
                "Use `multiprocessing` for parallel execution:\n```python\nfrom multiprocessing import Process\ndef task():\n    print('Process running...')\nprocess = Process(target=task)\nprocess.start()\nprocess.join()\n```"
            ]
        },
        {
            "tag": "python_gui_tkinter",
            "patterns": [
                "how to create a GUI in Python",
                "best Python GUI framework",
                "Python Tkinter example"
            ],
            "responses": [
                "Create a GUI with Tkinter:\n```python\nimport tkinter as tk\nroot = tk.Tk()\ntk.Label(root, text='Hello, GUI!').pack()\nroot.mainloop()\n```"
            ]
        },
        {
            "tag": "python_gui_pyqt",
            "patterns": [
                "how to use PyQt in Python",
                "Python PyQt example",
                "best Python GUI library"
            ],
            "responses": [
                "Create a GUI with PyQt:\n```python\nfrom PyQt5.QtWidgets import QApplication, QLabel\napp = QApplication([])\nlabel = QLabel('Hello, PyQt!')\nlabel.show()\napp.exec_()\n```"
            ]
        },
        {
            "tag": "python_deployment",
            "patterns": [
                "how to deploy a Python application",
                "best way to deploy Python code",
                "Python deployment example"
            ],
            "responses": [
                "Deploy Python apps with Docker:\n```docker\nFROM python:3.12\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n```"
            ]
        },
        {
            "tag": "python_machine_learning_advanced",
            "patterns": [
                "how to build an AI model in Python",
                "best Python AI libraries",
                "advanced machine learning in Python"
            ],
            "responses": [
                "Train an AI model with PyTorch:\n```python\nimport torch\nimport torch.nn as nn\nmodel = nn.Linear(10, 2)\n```"
            ]
        },
        {
            "tag": "python_data_visualization",
            "patterns": [
                "how to visualize data in Python",
                "best Python plotting library",
                "Python Matplotlib example"
            ],
            "responses": [
                "Use Matplotlib to plot graphs:\n```python\nimport matplotlib.pyplot as plt\nplt.plot([1, 2, 3], [4, 5, 6])\nplt.show()\n```"
            ]
        },
        {
            "tag": "python_nlp",
            "patterns": [
                "how to process text in Python",
                "best NLP library in Python",
                "Python natural language processing"
            ],
            "responses": [
                "Use NLTK for NLP:\n```python\nfrom nltk.tokenize import word_tokenize\ntext = 'Hello, how are you?'\ntokens = word_tokenize(text)\nprint(tokens)\n```"
            ]
        },
        {
            "tag": "python_websockets",
            "patterns": [
                "how to use WebSockets in Python",
                "Python real-time communication",
                "Python WebSockets example"
            ],
            "responses": [
                "Use `websockets` for real-time apps:\n```python\nimport asyncio\nimport websockets\nasync def handler(websocket, path):\n    async for message in websocket:\n        await websocket.send(f'Echo: {message}')\n```"
            ]
        },
        {
            "tag": "python_game_dev",
            "patterns": [
                "how to make a game in Python",
                "best Python game engine",
                "Python Pygame example"
            ],
            "responses": [
                "Use Pygame for game development:\n```python\nimport pygame\npygame.init()\nscreen = pygame.display.set_mode((400, 300))\npygame.display.set_caption('My Game')\nwhile True:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            pygame.quit()\n```"
            ]
        },
        {
            "tag": "python_logging",
            "patterns": [
                "how to log messages in Python",
                "best logging method in Python",
                "Python logging example"
            ],
            "responses": [
                "Use the logging module:\n```python\nimport logging\nlogging.basicConfig(level=logging.INFO)\nlogging.info('This is an info message')\n```"
            ]
        },
        {
            "tag": "python_asyncio",
            "patterns": [
                "how to use async in Python",
                "Python asyncio example",
                "best way to handle asynchronous tasks"
            ],
            "responses": [
                "Use `asyncio` for async programming:\n```python\nimport asyncio\nasync def task():\n    await asyncio.sleep(1)\n    print('Task completed!')\nasyncio.run(task())\n```"
            ]
        },
        {
            "tag": "python_regex",
            "patterns": [
                "how to use regex in Python",
                "best Python regex examples",
                "Python regular expressions"
            ],
            "responses": [
                "Use the `re` module for regex:\n```python\nimport re\ntext = 'My email is example@email.com'\nmatch = re.search(r'\\S+@\\S+', text)\nprint(match.group())\n```"
            ]
        },
        {
            "tag": "python_csv_handling",
            "patterns": [
                "how to read a CSV file in Python",
                "Python CSV example",
                "write to CSV in Python"
            ],
            "responses": [
                "Handle CSV files with Pandas:\n```python\nimport pandas as pd\ndf = pd.read_csv('data.csv')\nprint(df.head())\n```"
            ]
        },
        {
            "tag": "python_json_handling",
            "patterns": [
                "how to parse JSON in Python",
                "best way to handle JSON in Python",
                "Python JSON example"
            ],
            "responses": [
                "Use `json` for handling JSON:\n```python\nimport json\ndata = {'name': 'Alice', 'age': 25}\njson_str = json.dumps(data)\nprint(json.loads(json_str))\n```"
            ]
        },
        {
            "tag": "python_quantum_computing",
            "patterns": [
                "how to use Python for quantum computing",
                "best Python library for quantum computing",
                "Quantum programming in Python"
            ],
            "responses": [
                "Use `qiskit` to write quantum algorithms:\n```python\nfrom qiskit import QuantumCircuit\nqc = QuantumCircuit(2)\nqc.h(0)\nqc.cx(0, 1)\nqc.measure_all()\nqc.draw()\n```"
            ]
        },
        {
            "tag": "python_blockchain",
            "patterns": [
                "how to build a blockchain in Python",
                "best Python blockchain library",
                "Python smart contracts"
            ],
            "responses": [
                "Create a simple blockchain in Python:\n```python\nimport hashlib\nclass Block:\n    def __init__(self, data, prev_hash):\n        self.data = data\n        self.prev_hash = prev_hash\n        self.hash = hashlib.sha256((data + prev_hash).encode()).hexdigest()\nblock1 = Block('Genesis Block', '0')\nprint(block1.hash)\n```"
            ]
        },
        {
            "tag": "python_iot",
            "patterns": [
                "how to use Python for IoT",
                "best Python IoT library",
                "IoT automation with Python"
            ],
            "responses": [
                "Use `paho-mqtt` for IoT devices:\n```python\nimport paho.mqtt.client as mqtt\nclient = mqtt.Client()\nclient.connect('broker.hivemq.com', 1883, 60)\nclient.publish('iot/topic', 'Hello IoT')\n```"
            ]
        },
        {
            "tag": "python_robotics",
            "patterns": [
                "how to use Python for robotics",
                "best Python robotics framework",
                "robot control in Python"
            ],
            "responses": [
                "Use `pybullet` for robotics simulations:\n```python\nimport pybullet as p\np.connect(p.GUI)\nrobot_id = p.loadURDF('r2d2.urdf')\n```"
            ]
        },
        {
            "tag": "python_ethical_hacking",
            "patterns": [
                "how to use Python for hacking",
                "best Python cybersecurity tools",
                "Python for penetration testing"
            ],
            "responses": [
                "Use `scapy` for network scanning:\n```python\nfrom scapy.all import *\npacket = IP(dst='192.168.1.1')/ICMP()\nsend(packet)\n```"
            ]
        },
        {
            "tag": "python_competitive_programming",
            "patterns": [
                "how to prepare for coding competitions in Python",
                "best Python coding tricks",
                "Python for CP"
            ],
            "responses": [
                "Use `bisect` for fast searching:\n```python\nimport bisect\narr = [1, 3, 5, 7]\nprint(bisect.bisect_left(arr, 4))  # Output: 2\n```"
            ]
        },
        {
            "tag": "python_devops",
            "patterns": [
                "how to use Python for DevOps",
                "best DevOps tools in Python",
                "Python for automation in DevOps"
            ],
            "responses": [
                "Use `fabric` for SSH automation:\n```python\nfrom fabric import Connection\nc = Connection('user@server')\nc.run('ls -l')\n```"
            ]
        },
        {
            "tag": "python_ai_for_finance",
            "patterns": [
                "how to use Python for finance",
                "best Python AI libraries for stock prediction",
                "Python trading bots"
            ],
            "responses": [
                "Use `yfinance` to fetch stock data:\n```python\nimport yfinance as yf\ntsla = yf.Ticker('TSLA')\nprint(tsla.history(period='5d'))\n```"
            ]
        },
        {
            "tag": "python_gui_kivy",
            "patterns": [
                "how to create a GUI with Kivy",
                "best Python GUI frameworks",
                "Python Kivy example"
            ],
            "responses": [
                "Use Kivy for modern Python GUIs:\n```python\nfrom kivy.app import App\nfrom kivy.uix.label import Label\nclass MyApp(App):\n    def build(self):\n        return Label(text='Hello, Kivy!')\nMyApp().run()\n```"
            ]
        },
        {
            "tag": "python_gpt_development",
            "patterns": [
                "how to build an AI David with GPT",
                "best way to fine-tune GPT models",
                "GPT-3 integration in Python"
            ],
            "responses": [
                "Use `openai` to generate text:\n```python\nimport openai\nopenai.api_key = 'your-api-key'\nprompt = 'Write a Python function to sort a list'\nresponse = openai.ChatCompletion.create(model='gpt-3.5-turbo', messages=[{'role': 'system', 'content': 'You are a coding assistant.'}, {'role': 'user', 'content': prompt}])\nprint(response['choices'][0]['message']['content'])\n```"
            ]
        },
        {
            "tag": "python_docker",
            "patterns": [
                "how to use Python with Docker",
                "best way to containerize Python apps",
                "Python Docker example"
            ],
            "responses": [
                "Create a Dockerfile for a Python app:\n```docker\nFROM python:3.12\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n```"
            ]
        },
        {
            "tag": "python_web_scraping_selenium",
            "patterns": [
                "how to scrape dynamic websites in Python",
                "best web scraping tools for Python",
                "Python Selenium example"
            ],
            "responses": [
                "Use Selenium for web scraping:\n```python\nfrom selenium import webdriver\nbrowser = webdriver.Chrome()\nbrowser.get('https://example.com')\nprint(browser.page_source)\n```"
            ]
        },
        {
            "tag": "python_David_nlp",
            "patterns": [
                "how to build a David in Python",
                "best Python David frameworks",
                "Python AI David"
            ],
            "responses": [
                "Use `chatterbot` for a David:\n```python\nfrom chatterbot import David\nfrom chatterbot.trainers import ChatterBotCorpusTrainer\nDavid = David('AI Bot')\ntrainer = ChatterBotCorpusTrainer(David)\ntrainer.train('chatterbot.corpus.english')\nprint(David.get_response('Hello'))\n```"
            ]
        },
        {
            "tag": "python_neural_networks",
            "patterns": [
                "how to build a neural network in Python",
                "best Python deep learning library",
                "Python neural networks"
            ],
            "responses": [
                "Create a neural network with PyTorch:\n```python\nimport torch\nimport torch.nn as nn\nclass NeuralNet(nn.Module):\n    def __init__(self):\n        super(NeuralNet, self).__init__()\n        self.fc1 = nn.Linear(10, 5)\n        self.fc2 = nn.Linear(5, 2)\n    def forward(self, x):\n        x = torch.relu(self.fc1(x))\n        return torch.softmax(self.fc2(x), dim=1)\n```"
            ]
        },
        {
            "tag": "python_cloud_aws",
            "patterns": [
                "how to use AWS with Python",
                "Python for cloud computing",
                "best AWS SDK for Python"
            ],
            "responses": [
                "Use `boto3` to manage AWS services:\n```python\nimport boto3\ns3 = boto3.client('s3')\nfor bucket in s3.list_buckets()['Buckets']:\n    print(bucket['Name'])\n```"
            ]
        },
        {
            "tag": "python_cloud_gcp",
            "patterns": [
                "how to use Google Cloud with Python",
                "best Python library for GCP",
                "Google Cloud automation with Python"
            ],
            "responses": [
                "Use `google-cloud-storage` to manage GCP buckets:\n```python\nfrom google.cloud import storage\nclient = storage.Client()\nbuckets = list(client.list_buckets())\nprint(buckets)\n```"
            ]
        },
        {
            "tag": "python_cloud_azure",
            "patterns": [
                "how to use Azure with Python",
                "best Python SDK for Azure",
                "Azure automation in Python"
            ],
            "responses": [
                "Use `azure.storage.blob` to work with Azure Blob Storage:\n```python\nfrom azure.storage.blob import BlobServiceClient\nclient = BlobServiceClient.from_connection_string('your_connection_string')\nprint(list(client.list_containers()))\n```"
            ]
        },
        {
            "tag": "python_reinforcement_learning",
            "patterns": [
                "how to implement reinforcement learning in Python",
                "best RL libraries in Python",
                "Q-learning in Python"
            ],
            "responses": [
                "Use `gym` for RL simulations:\n```python\nimport gym\nenv = gym.make('CartPole-v1')\nenv.reset()\nenv.render()\n```"
            ]
        },
        {
            "tag": "python_genetic_algorithms",
            "patterns": [
                "how to implement genetic algorithms in Python",
                "best GA library for Python",
                "evolutionary computing with Python"
            ],
            "responses": [
                "Use `deap` for genetic algorithms:\n```python\nfrom deap import base, creator, tools, algorithms\ncreator.create('FitnessMax', base.Fitness, weights=(1.0,))\ncreator.create('Individual', list, fitness=creator.FitnessMax)\n```"
            ]
        },
        {
            "tag": "python_nlp_transformers",
            "patterns": [
                "how to use transformers in Python",
                "best NLP library for Python",
                "Python transformers example"
            ],
            "responses": [
                "Use `transformers` to load BERT:\n```python\nfrom transformers import pipeline\nnlp = pipeline('sentiment-analysis')\nprint(nlp('I love Python!'))\n```"
            ]
        },
        {
            "tag": "python_web3",
            "patterns": [
                "how to interact with blockchain in Python",
                "best Python library for smart contracts",
                "Python Web3 example"
            ],
            "responses": [
                "Use `web3.py` to interact with Ethereum:\n```python\nfrom web3 import Web3\nw3 = Web3(Web3.HTTPProvider('https://mainnet.infura.io/v3/YOUR_PROJECT_ID'))\nprint(w3.eth.blockNumber)\n```"
            ]
        },
        {
            "tag": "python_game_development_pygame",
            "patterns": [
                "how to create a game in Python",
                "best Python game engines",
                "Python game development"
            ],
            "responses": [
                "Use `pygame` to create a game:\n```python\nimport pygame\npygame.init()\nscreen = pygame.display.set_mode((400, 300))\nwhile True:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            pygame.quit()\n    pygame.display.flip()\n```"
            ]
        },
        {
            "tag": "python_game_development_godot",
            "patterns": [
                "how to use Python with Godot",
                "Python game development in Godot",
                "best game engines for Python"
            ],
            "responses": [
                "Use `godot-python` to script in Godot:\n```python\nextends Node\nfunc _ready():\n    print('Hello, Godot from Python!')\n```"
            ]
        },
        {
            "tag": "python_computer_vision_opencv",
            "patterns": [
                "how to process images in Python",
                "best Python library for computer vision",
                "Python OpenCV example"
            ],
            "responses": [
                "Use OpenCV for image processing:\n```python\nimport cv2\nimg = cv2.imread('image.jpg')\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\ncv2.imshow('Gray Image', gray)\ncv2.waitKey(0)\n```"
            ]
        },
        {
            "tag": "python_face_recognition",
            "patterns": [
                "how to do face recognition in Python",
                "best Python face detection library",
                "face recognition with Python"
            ],
            "responses": [
                "Use `face_recognition` for face detection:\n```python\nimport face_recognition\nimage = face_recognition.load_image_file('your_image.jpg')\nface_locations = face_recognition.face_locations(image)\nprint(face_locations)\n```"
            ]
        },
        {
            "tag": "python_microservices_fastapi",
            "patterns": [
                "how to create microservices in Python",
                "best Python framework for microservices",
                "Python FastAPI example"
            ],
            "responses": [
                "Use FastAPI for microservices:\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.get('/')\ndef read_root():\n    return {'message': 'Hello, FastAPI!'}\n```"
            ]
        },
        {
            "tag": "python_ai_text_to_speech",
            "patterns": [
                "how to convert text to speech in Python",
                "best Python TTS library",
                "Python text-to-speech example"
            ],
            "responses": [
                "Use `gTTS` to generate speech:\n```python\nfrom gtts import gTTS\ntts = gTTS('Hello, world!', lang='en')\ntts.save('hello.mp3')\n```"
            ]
        },
        {
            "tag": "python_ai_speech_to_text",
            "patterns": [
                "how to convert speech to text in Python",
                "best Python STT library",
                "Python speech-to-text example"
            ],
            "responses": [
                "Use `speech_recognition` to transcribe audio:\n```python\nimport speech_recognition as sr\nr = sr.Recognizer()\nwith sr.AudioFile('audio.wav') as source:\n    audio = r.record(source)\nprint(r.recognize_google(audio))\n```"
            ]
        },
        {
            "tag": "python_3d_graphics",
            "patterns": [
                "how to render 3D graphics in Python",
                "best Python 3D graphics library",
                "Python OpenGL example"
            ],
            "responses": [
                "Use `pyopengl` for 3D rendering:\n```python\nfrom OpenGL.GL import *\nfrom OpenGL.GLUT import *\ndef display():\n    glClear(GL_COLOR_BUFFER_BIT)\n    glBegin(GL_TRIANGLES)\n    glVertex3f(0.0, 1.0, 0.0)\n    glVertex3f(-1.0, -1.0, 0.0)\n    glVertex3f(1.0, -1.0, 0.0)\n    glEnd()\n    glutSwapBuffers()\nglutDisplayFunc(display)\nglutMainLoop()\n```"
            ]
        },
        {
            "tag": "python_arduino",
            "patterns": [
                "how to control Arduino with Python",
                "best Python library for Arduino",
                "Python Arduino example"
            ],
            "responses": [
                "Use `pyserial` to communicate with Arduino:\n```python\nimport serial\narduino = serial.Serial('/dev/ttyUSB0', 9600)\narduino.write(b'Hello, Arduino!')\n```"
            ]
        },
        {
            "tag": "python_asyncio",
            "patterns": [
                "how to use asyncio in Python",
                "best way to handle async programming in Python",
                "Python asyncio example"
            ],
            "responses": [
                "Use `asyncio` for concurrency:\n```python\nimport asyncio\nasync def say_hello():\n    await asyncio.sleep(1)\n    print('Hello, Asyncio!')\nasyncio.run(say_hello())\n```"
            ]
        },
        {
            "tag": "python_quantum_computing",
            "patterns": [
                "how to use Python for quantum computing",
                "best Python library for quantum programming",
                "quantum computing in Python"
            ],
            "responses": [
                "Use `qiskit` for quantum computing:\n```python\nfrom qiskit import QuantumCircuit\nqc = QuantumCircuit(2)\nqc.h(0)\nqc.cx(0, 1)\nqc.measure_all()\nprint(qc)\n```"
            ]
        },
        {
            "tag": "python_cybersecurity",
            "patterns": [
                "how to use Python for cybersecurity",
                "best Python tools for penetration testing",
                "ethical hacking with Python"
            ],
            "responses": [
                "Use `scapy` for network packet analysis:\n```python\nfrom scapy.all import *\npacket = IP(dst='google.com')/ICMP()\nsend(packet)\n```"
            ]
        },
        {
            "tag": "python_api_development",
            "patterns": [
                "how to build an API with Python",
                "best Python framework for APIs",
                "create a REST API in Python"
            ],
            "responses": [
                "Use `FastAPI` for fast API development:\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.get('/')\ndef home():\n    return {'message': 'Hello API!'}\n```"
            ]
        },
        {
            "tag": "python_drone_programming",
            "patterns": [
                "how to program drones in Python",
                "best Python library for drone programming",
                "control drones with Python"
            ],
            "responses": [
                "Use `djitellopy` for drone programming:\n```python\nfrom djitellopy import Tello\ndrone = Tello()\ndrone.connect()\ndrone.takeoff()\ndrone.move_forward(50)\ndrone.land()\n```"
            ]
        },
        {
            "tag": "python_networking",
            "patterns": [
                "how to build a network scanner in Python",
                "best Python networking libraries",
                "socket programming in Python"
            ],
            "responses": [
                "Use `socket` for network connections:\n```python\nimport socket\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.bind(('0.0.0.0', 8080))\ns.listen(5)\nprint('Listening on port 8080...')\n```"
            ]
        },
        {
            "tag": "python_data_engineering",
            "patterns": [
                "how to process big data in Python",
                "best Python libraries for data engineering",
                "ETL pipelines in Python"
            ],
            "responses": [
                "Use `pandas` for data pipelines:\n```python\nimport pandas as pd\ndf = pd.read_csv('data.csv')\ndf = df.dropna()\ndf.to_csv('clean_data.csv', index=False)\n```"
            ]
        },
        {
            "tag": "python_big_data",
            "patterns": [
                "how to handle big data in Python",
                "best Python frameworks for big data",
                "process large datasets in Python"
            ],
            "responses": [
                "Use `dask` for parallel computing:\n```python\nimport dask.dataframe as dd\ndf = dd.read_csv('large_dataset.csv')\nprint(df.head())\n```"
            ]
        },
        {
            "tag": "python_robotics",
            "patterns": [
                "how to control robots with Python",
                "best Python libraries for robotics",
                "Python for ROS (Robot Operating System)"
            ],
            "responses": [
                "Use `rospy` for robotics:\n```python\nimport rospy\nfrom std_msgs.msg import String\nrospy.init_node('robot_talker')\npub = rospy.Publisher('chatter', String, queue_size=10)\nrate = rospy.Rate(10)\nwhile not rospy.is_shutdown():\n    pub.publish('Hello, Robot!')\n    rate.sleep()\n```"
            ]
        },
        {
            "tag": "python_iot",
            "patterns": [
                "how to control IoT devices with Python",
                "best Python libraries for IoT",
                "Python for MQTT"
            ],
            "responses": [
                "Use `paho-mqtt` for IoT messaging:\n```python\nimport paho.mqtt.client as mqtt\nclient = mqtt.Client()\nclient.connect('broker.hivemq.com', 1883, 60)\nclient.publish('iot/topic', 'Hello, IoT!')\n```"
            ]
        },
        {
            "tag": "python_ai_ethics",
            "patterns": [
                "how to implement ethical AI in Python",
                "best practices for AI ethics",
                "bias detection in AI"
            ],
            "responses": [
                "Use `aif360` to check AI bias:\n```python\nfrom aif360.datasets import AdultDataset\ndataset = AdultDataset()\nprint(dataset.metadata)\n```"
            ]
        },
        {
            "tag": "python_security_automation",
            "patterns": [
                "how to automate security testing in Python",
                "best Python security automation tools",
                "Python for SOC (Security Operations Center)"
            ],
            "responses": [
                "Use `shodan` for security scans:\n```python\nimport shodan\napi = shodan.Shodan('YOUR_API_KEY')\nresults = api.search('apache')\nprint(results)\n```"
            ]
        },
        {
            "tag": "python_ethical_hacking",
            "patterns": [
                "how to perform penetration testing in Python",
                "best Python ethical hacking tools",
                "Python for pentesting"
            ],
            "responses": [
                "Use `nmap` for network scanning:\n```python\nimport nmap\nscanner = nmap.PortScanner()\nscanner.scan('192.168.1.1', '1-1024')\nprint(scanner.all_hosts())\n```"
            ]
        },
        {
            "tag": "python_embedded_systems",
            "patterns": [
                "how to program embedded systems in Python",
                "best Python libraries for embedded programming",
                "Python for microcontrollers"
            ],
            "responses": [
                "Use `micropython` for embedded programming:\n```python\nimport machine\nled = machine.Pin(2, machine.Pin.OUT)\nled.on()\n```"
            ]
        },
        {
            "tag": "python_finance",
            "patterns": [
                "how to analyze financial data in Python",
                "best Python libraries for finance",
                "Python for stock market analysis"
            ],
            "responses": [
                "Use `yfinance` for stock data:\n```python\nimport yfinance as yf\nstock = yf.Ticker('AAPL')\nprint(stock.history(period='1mo'))\n```"
            ]
        },
        {
            "tag": "python_high_performance_computing",
            "patterns": [
                "how to optimize Python for high-performance computing",
                "best Python HPC frameworks",
                "Python parallel processing"
            ],
            "responses": [
                "Use `multiprocessing` for parallel tasks:\n```python\nfrom multiprocessing import Pool\ndef square(n):\n    return n * n\npool = Pool(4)\nprint(pool.map(square, [1, 2, 3, 4]))\n```"
            ]
        },
        {
            "tag": "python_database_optimization",
            "patterns": [
                "how to optimize database queries in Python",
                "best practices for SQL in Python",
                "Python for database tuning"
            ],
            "responses": [
                "Use `SQLAlchemy` for optimized queries:\n```python\nfrom sqlalchemy import create_engine\nengine = create_engine('sqlite:///database.db')\nresult = engine.execute('SELECT * FROM users')\nfor row in result:\n    print(row)\n```"
            ]
        },
        {
            "tag": "food_culture",
            "patterns": [
                "food traditions",
                "cultural eats",
                "global dishes",
                "taste this",
                "cuisine talk"
            ],
            "responses": [
                "Try sushi—Japan vibes!",
                "Eats—Italian pasta!",
                "Dish—spicy tacos!",
                "Cuisine—your fave?"
            ]
        },
        {
            "tag": "mental_health",
            "patterns": [
                "mind check",
                "feeling off",
                "mental tips",
                "stay balanced",
                "head space"
            ],
            "responses": [
                "Check—talk it out!",
                "Off? Rest helps!",
                "Tip—deep breaths!",
                "Balance—your vibe?"
            ]
        },
        {
            "tag": "photography",
            "patterns": [
                "photo tips",
                "snap better",
                "camera tricks",
                "pic ideas",
                "shoot this"
            ],
            "responses": [
                "Tip—golden hour!",
                "Better—frame it!",
                "Trick—rule of thirds!",
                "Shoot—your subject?"
            ]
        },
        {
            "tag": "nostalgia",
            "patterns": [
                "old times",
                "throwback vibes",
                "remember when",
                "past stuff",
                "retro talk"
            ],
            "responses": [
                "Vibes—90s cartoons!",
                "When—flip phones!",
                "Past—mix tapes!",
                "Retro—your memory?"
            ]
        },
        {
            "tag": "current_trends",
            "patterns": [
                "what’s hot",
                "trending now",
                "big things",
                "latest craze",
                "hype talk"
            ],
            "responses": [
                "Hot—TikTok dances!",
                "Now—AI art!",
                "Craze—vintage fits!",
                "Hype—your pick?"
            ]
        },
        {
            "tag": "life_hacks",
            "patterns": [
                "life tips",
                "hack this",
                "easy fixes",
                "smart ideas",
                "quick tricks"
            ],
            "responses": [
                "Hack—freeze grapes!",
                "Fix—tape lint!",
                "Idea—jar opener!",
                "Trick—your need?"
            ]
        },
        {
            "tag": "adventure",
            "patterns": [
                "adventure ideas",
                "go explore",
                "wild plans",
                "thrill time",
                "bold moves"
            ],
            "responses": [
                "Idea—hike cliffs!",
                "Explore—cave dive!",
                "Plan—sky jump!",
                "Thrill—your rush?"
            ]
        },
        {
            "tag": "mythology",
            "patterns": [
                "myth talk",
                "old stories",
                "legend vibes",
                "god tales",
                "epic lore"
            ],
            "responses": [
                "Myth—Zeus bolts!",
                "Story—Norse Thor!",
                "Legend—dragon fights!",
                "Lore—your fave?"
            ]
        },
        {
            "tag": "sustainability",
            "patterns": [
                "green tips",
                "save planet",
                "eco ideas",
                "go sustainable",
                "earth talk"
            ],
            "responses": [
                "Tip—reuse bags!",
                "Save—less plastic!",
                "Idea—solar power!",
                "Eco—your step?"
            ]
        },
        {
            "tag": "puzzles",
            "patterns": [
                "puzzle me",
                "brain teasers",
                "riddle time",
                "think hard",
                "solve this"
            ],
            "responses": [
                "Riddle—what’s me?",
                "Teaser—two doors!",
                "Solve—3 lights!",
                "Think—your try?"
            ]
        },
        {
            "tag": "pytorch_basics",
            "patterns": [
                "how to start with PyTorch",
                "PyTorch basics",
                "first PyTorch program",
                "how to install PyTorch"
            ],
            "responses": [
                "Install PyTorch with:\n```bash\npip install torch torchvision torchaudio\n```",
                "Your first PyTorch tensor:\n```python\nimport torch\ntensor = torch.tensor([1, 2, 3])\nprint(tensor)\n```"
            ]
        },
        {
            "tag": "pytorch_tensor_operations",
            "patterns": [
                "how to perform tensor operations in PyTorch",
                "PyTorch tensor addition",
                "how to use PyTorch tensors"
            ],
            "responses": [
                "Basic tensor operations:\n```python\nimport torch\na = torch.tensor([1, 2, 3])\nb = torch.tensor([4, 5, 6])\nprint(a + b)\nprint(torch.matmul(a, b))\n```"
            ]
        },
        {
            "tag": "pytorch_autograd",
            "patterns": [
                "how does autograd work in PyTorch",
                "PyTorch automatic differentiation",
                "gradient calculation in PyTorch"
            ],
            "responses": [
                "Use `requires_grad` for automatic differentiation:\n```python\nimport torch\nx = torch.tensor(2.0, requires_grad=True)\ny = x**2\nprint(y.backward())\nprint(x.grad)\n```"
            ]
        },
        {
            "tag": "pytorch_neural_networks",
            "patterns": [
                "how to create a neural network in PyTorch",
                "PyTorch deep learning model",
                "define a neural network in PyTorch"
            ],
            "responses": [
                "Define a simple neural network:\n```python\nimport torch.nn as nn\nclass Net(nn.Module):\n    def __init__(self):\n        super(Net, self).__init__()\n        self.fc1 = nn.Linear(3, 3)\n    def forward(self, x):\n        return self.fc1(x)\nmodel = Net()\nprint(model)\n```"
            ]
        },
        {
            "tag": "pytorch_training",
            "patterns": [
                "how to train a model in PyTorch",
                "PyTorch training loop",
                "train deep learning model in PyTorch"
            ],
            "responses": [
                "Basic training loop:\n```python\nimport torch.optim as optim\ncriterion = nn.MSELoss()\noptimizer = optim.SGD(model.parameters(), lr=0.01)\nfor epoch in range(10):\n    optimizer.zero_grad()\n    output = model(torch.tensor([[1.0, 2.0, 3.0]]))\n    loss = criterion(output, torch.tensor([[0.0, 1.0, 2.0]]))\n    loss.backward()\n    optimizer.step()\n    print(f'Epoch {epoch}, Loss: {loss.item()}')\n```"
            ]
        },
        {
            "tag": "pytorch_cnn",
            "patterns": [
                "how to build a CNN in PyTorch",
                "PyTorch convolutional neural network",
                "CNN implementation in PyTorch"
            ],
            "responses": [
                "A simple CNN:\n```python\nimport torch.nn.functional as F\nclass CNN(nn.Module):\n    def __init__(self):\n        super(CNN, self).__init__()\n        self.conv1 = nn.Conv2d(1, 16, 3, 1)\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return x\nmodel = CNN()\nprint(model)\n```"
            ]
        },
        {
            "tag": "pytorch_rnn",
            "patterns": [
                "how to build an RNN in PyTorch",
                "PyTorch recurrent neural network",
                "RNN implementation in PyTorch"
            ],
            "responses": [
                "A simple RNN:\n```python\nclass RNN(nn.Module):\n    def __init__(self):\n        super(RNN, self).__init__()\n        self.rnn = nn.RNN(10, 20, 1)\n    def forward(self, x):\n        x, _ = self.rnn(x)\n        return x\nmodel = RNN()\nprint(model)\n```"
            ]
        },
        {
            "tag": "pytorch_transformers",
            "patterns": [
                "how to implement Transformers in PyTorch",
                "PyTorch Transformer model",
                "self-attention in PyTorch"
            ],
            "responses": [
                "A Transformer model:\n```python\nimport torch.nn as nn\ntransformer = nn.Transformer(d_model=512, nhead=8, num_encoder_layers=6)\n```"
            ]
        },
        {
            "tag": "pytorch_gans",
            "patterns": [
                "how to build a GAN in PyTorch",
                "PyTorch Generative Adversarial Network",
                "GAN training in PyTorch"
            ],
            "responses": [
                "A simple GAN setup:\n```python\ngenerator = nn.Sequential(\n    nn.Linear(100, 256),\n    nn.ReLU(),\n    nn.Linear(256, 784),\n    nn.Tanh()\n)\nprint(generator)\n```"
            ]
        },
        {
            "tag": "pytorch_model_deployment",
            "patterns": [
                "how to deploy PyTorch models",
                "save and load PyTorch models",
                "convert PyTorch model to ONNX"
            ],
            "responses": [
                "Save and load a PyTorch model:\n```python\ntorch.save(model.state_dict(), 'model.pth')\nmodel.load_state_dict(torch.load('model.pth'))\n```",
                "Convert PyTorch model to ONNX:\n```python\nimport torch.onnx\nx = torch.randn(1, 3)\ntorch.onnx.export(model, x, 'model.onnx')\n```"
            ]
        },
        {
            "tag": "pytorch_lightning",
            "patterns": [
                "how to use PyTorch Lightning",
                "PyTorch Lightning tutorial",
                "how to train models with PyTorch Lightning"
            ],
            "responses": [
                "PyTorch Lightning simplifies training:\n```python\nimport pytorch_lightning as pl\nclass LitModel(pl.LightningModule):\n    def __init__(self):\n        super().__init__()\n        self.fc = torch.nn.Linear(10, 1)\n    def forward(self, x):\n        return self.fc(x)\nmodel = LitModel()\ntrainer = pl.Trainer(max_epochs=5)\ntrainer.fit(model)\n```"
            ]
        },
        {
            "tag": "pytorch_lstm",
            "patterns": [
                "how to implement LSTM in PyTorch",
                "PyTorch LSTM example",
                "sequence modeling in PyTorch"
            ],
            "responses": [
                "A simple LSTM network:\n```python\nimport torch.nn as nn\nclass LSTM(nn.Module):\n    def __init__(self, input_size, hidden_size, num_layers):\n        super(LSTM, self).__init__()\n        self.lstm = nn.LSTM(input_size, hidden_size, num_layers)\n    def forward(self, x):\n        x, _ = self.lstm(x)\n        return x\nmodel = LSTM(10, 20, 2)\n```"
            ]
        },
        {
            "tag": "pytorch_bert",
            "patterns": [
                "how to use BERT in PyTorch",
                "PyTorch Hugging Face Transformers",
                "BERT fine-tuning in PyTorch"
            ],
            "responses": [
                "Fine-tune BERT with Hugging Face:\n```python\nfrom transformers import BertTokenizer, BertForSequenceClassification\nmodel = BertForSequenceClassification.from_pretrained('bert-base-uncased')\ntokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\ninputs = tokenizer('Hello world!', return_tensors='pt')\noutput = model(**inputs)\n```"
            ]
        },
        {
            "tag": "pytorch_vit",
            "patterns": [
                "how to implement Vision Transformer in PyTorch",
                "ViT in PyTorch",
                "transformers for computer vision"
            ],
            "responses": [
                "Use ViT for image classification:\n```python\nfrom transformers import ViTFeatureExtractor, ViTForImageClassification\nmodel = ViTForImageClassification.from_pretrained('google/vit-base-patch16-224')\nfeature_extractor = ViTFeatureExtractor.from_pretrained('google/vit-base-patch16-224')\n```"
            ]
        },
        {
            "tag": "pytorch_diffusion",
            "patterns": [
                "how to implement diffusion models in PyTorch",
                "Stable Diffusion in PyTorch",
                "image generation with PyTorch"
            ],
            "responses": [
                "Basic diffusion model setup:\n```python\nclass DiffusionModel(nn.Module):\n    def __init__(self):\n        super(DiffusionModel, self).__init__()\n        self.encoder = nn.Sequential(nn.Linear(256, 128), nn.ReLU())\n    def forward(self, x):\n        return self.encoder(x)\nmodel = DiffusionModel()\n```"
            ]
        },
        {
            "tag": "pytorch_reinforcement_learning",
            "patterns": [
                "how to use reinforcement learning in PyTorch",
                "train an RL agent in PyTorch",
                "Deep Q Network in PyTorch"
            ],
            "responses": [
                "DQN for reinforcement learning:\n```python\nclass DQN(nn.Module):\n    def __init__(self, input_dim, output_dim):\n        super(DQN, self).__init__()\n        self.fc = nn.Sequential(nn.Linear(input_dim, 64), nn.ReLU(), nn.Linear(64, output_dim))\n    def forward(self, x):\n        return self.fc(x)\nmodel = DQN(4, 2)\n```"
            ]
        },
        {
            "tag": "pytorch_parallel_computing",
            "patterns": [
                "how to use multiple GPUs in PyTorch",
                "PyTorch parallel computing",
                "PyTorch distributed training"
            ],
            "responses": [
                "Enable GPU training:\n```python\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\nmodel.to(device)\n```",
                "Use multiple GPUs with DataParallel:\n```python\nmodel = nn.DataParallel(model)\n```"
            ]
        },
        {
            "tag": "pytorch_custom_loss",
            "patterns": [
                "how to define a custom loss function in PyTorch",
                "PyTorch loss function tutorial",
                "implement loss in PyTorch"
            ],
            "responses": [
                "Define a custom loss function:\n```python\nclass CustomLoss(nn.Module):\n    def __init__(self):\n        super(CustomLoss, self).__init__()\n    def forward(self, output, target):\n        return torch.mean((output - target) ** 2)\nloss_fn = CustomLoss()\n```"
            ]
        },
        {
            "tag": "pytorch_deployment",
            "patterns": [
                "how to deploy PyTorch models",
                "convert PyTorch to TensorRT",
                "PyTorch model optimization"
            ],
            "responses": [
                "Convert PyTorch to TensorRT for optimization:\n```python\nimport torch_tensorrt as trt\nmodel_trt = trt.compile(model, inputs=[torch_tensorrt.Input((1, 3, 224, 224))])\n```"
            ]
        },
        {
            "tag": "astronomy",
            "patterns": [
                "star talk",
                "night sky",
                "planet facts",
                "cosmic wonders",
                "gaze up"
            ],
            "responses": [
                "Stars—Orion’s belt!",
                "Sky—Milky Way!",
                "Fact—Jupiter’s big!",
                "Wonder—your scope?"
            ]
        },
        {
            "tag": "comedy",
            "patterns": [
                "comedy recs",
                "funny stuff",
                "laugh more",
                "humor ideas",
                "giggle time"
            ],
            "responses": [
                "Rec—Chappelle’s wild!",
                "Stuff—puns rule!",
                "Laugh—stand-up!",
                "Idea—your comic?"
            ]
        },
        {
            "tag": "inventions",
            "patterns": [
                "cool inventions",
                "new tech",
                "made this",
                "inventor talk",
                "breakthroughs"
            ],
            "responses": [
                "Invention—light bulb!",
                "Tech—3D prints!",
                "Made—wheel’s old!",
                "Break—your fave?"
            ]
        },
        {
            "tag": "festivals",
            "patterns": [
                "festival vibes",
                "event fun",
                "party season",
                "celebrate big",
                "fest talk"
            ],
            "responses": [
                "Vibe—Burning Man!",
                "Fun—local fairs!",
                "Season—music fest!",
                "Big—your pick?"
            ]
        },
        {
            "tag": "mindfulness",
            "patterns": [
                "stay present",
                "mind tips",
                "focus now",
                "calm thoughts",
                "be here"
            ],
            "responses": [
                "Present—feel breath!",
                "Tip—ground yourself!",
                "Focus—one thing!",
                "Calm—your way?"
            ]
        },
        {
            "tag": "travel_stories",
            "patterns": [
                "travel tales",
                "trip stories",
                "adventure log",
                "journey chat",
                "road yarns"
            ],
            "responses": [
                "Tale—lost in Rome!",
                "Story—beach nap!",
                "Log—mountain climb!",
                "Chat—your trip?"
            ]
        },
        {
            "tag": "fashion_history",
            "patterns": [
                "style past",
                "old fashion",
                "retro looks",
                "clothing tales",
                "trend roots"
            ],
            "responses": [
                "Past—flapper dresses!",
                "Old—70s flares!",
                "Look—Victorian lace!",
                "Roots—your era?"
            ]
        },
        {
            "tag": "urban_legends",
            "patterns": [
                "spooky tales",
                "city myths",
                "weird stories",
                "legend chat",
                "odd lore"
            ],
            "responses": [
                "Tale—hook hand!",
                "Myth—sewer gators!",
                "Story—ghost hitch!",
                "Lore—your town?"
            ]
        },
        {
            "tag": "health_tips",
            "patterns": [
                "stay healthy",
                "wellness ideas",
                "body hacks",
                "feel good",
                "fit tricks"
            ],
            "responses": [
                "Healthy—drink water!",
                "Idea—stretch daily!",
                "Hack—sleep 8!",
                "Good—your routine?"
            ]
        },
        {
            "tag": "creative_projects",
            "patterns": [
                "project ideas",
                "make art",
                "build this",
                "crafty time",
                "create now"
            ],
            "responses": [
                "Idea—paint mural!",
                "Art—clay pots!",
                "Build—DIY lamp!",
                "Craft—your spark?"
            ]
        },
        {
            "tag": "wildlife",
            "patterns": [
                "wildlife facts",
                "animal talk",
                "nature beasts",
                "creature vibes",
                "fauna chat"
            ],
            "responses": [
                "Fact—owls twist heads!",
                "Talk—pandas nap!",
                "Beast—shark speed!",
                "Vibe—your critter?"
            ]
        },
        {
            "tag": "time_management",
            "patterns": [
                "manage time",
                "get organized",
                "plan day",
                "busy hacks",
                "schedule tips"
            ],
            "responses": [
                "Time—set alarms!",
                "Organize—list it!",
                "Plan—block hours!",
                "Hack—your flow?"
            ]
        },
        {
            "tag": "superheroes",
            "patterns": [
                "hero talk",
                "super powers",
                "comic vibes",
                "cape tales",
                "marvel chat"
            ],
            "responses": [
                "Hero—Spider-Man swings!",
                "Power—fly or invis?",
                "Vibe—Batman’s dark!",
                "Tale—your fave?"
            ]
        },
        {
            "tag": "cooking_tips",
            "patterns": [
                "cook better",
                "kitchen hacks",
                "food tricks",
                "chef ideas",
                "meal prep"
            ],
            "responses": [
                "Better—salt early!",
                "Hack—sharp knife!",
                "Trick—taste test!",
                "Prep—your dish?"
            ]
        },
        {
            "tag": "language_culture",
            "patterns": [
                "word origins",
                "lingo vibes",
                "speak culture",
                "talk roots",
                "dialect chat"
            ],
            "responses": [
                "Origin—‘cool’ is old!",
                "Vibe—slang shifts!",
                "Culture—French flair!",
                "Roots—your tongue?"
            ]
        },
        {
            "tag": "virtual_reality",
            "patterns": [
                "VR talk",
                "virtual fun",
                "tech worlds",
                "immerse me",
                "headset vibes"
            ],
            "responses": [
                "VR—game in 3D!",
                "Fun—virtual tours!",
                "World—space walk!",
                "Vibe—your gear?"
            ]
        },
        {
            "tag": "poetry",
            "patterns": [
                "poem ideas",
                "write verse",
                "rhyme time",
                "lyric vibes",
                "stanza chat"
            ],
            "responses": [
                "Idea—moon glows!",
                "Verse—short lines!",
                "Rhyme—love flows!",
                "Vibe—your muse?"
            ]
        },
        {
            "tag": "camping",
            "patterns": [
                "camping tips",
                "outdoor sleep",
                "tent time",
                "wild stay",
                "nature nights"
            ],
            "responses": [
                "Tip—pack light!",
                "Sleep—warm bag!",
                "Tent—stake firm!",
                "Stay—your spot?"
            ]
        },
        {
            "tag": "architecture",
            "patterns": [
                "building talk",
                "design vibes",
                "structure ideas",
                "arch chat",
                "cool builds"
            ],
            "responses": [
                "Talk—Gothic spires!",
                "Vibe—modern glass!",
                "Idea—tiny homes!",
                "Build—your style?"
            ]
        },
        {
            "tag": "random_facts",
            "patterns": [
                "weird facts",
                "odd info",
                "fun trivia",
                "know this",
                "quirky bits"
            ],
            "responses": [
                "Fact—snails nap years!",
                "Info—blue whales sing!",
                "Trivia—crows plan!",
                "Bit—your oddity?"
            ]
        },
        {
            "tag": "greetings",
            "patterns": [
                "hello",
                "hi",
                "hey",
                "what's up",
                "howdy",
                "yo"
            ],
            "responses": [
                "Hey there!",
                "Hello! How can I assist you today?",
                "Hi! What’s on your mind?",
                "Hey! Ready to chat?"
            ]
        },
        {
            "tag": "small_talk",
            "patterns": [
                "how are you",
                "how’s it going",
                "what’s up",
                "how do you feel"
            ],
            "responses": [
                "I’m doing great! Thanks for asking.",
                "Feeling as good as an AI can!",
                "I’m here and ready to help!",
                "Just running some code in my mind, and you?"
            ]
        },
        {
            "tag": "humor",
            "patterns": [
                "tell me a joke",
                "make me laugh",
                "say something funny"
            ],
            "responses": [
                "Why do programmers prefer dark mode? Because light attracts bugs!",
                "Debugging is like being the detective in a crime movie where you are also the murderer.",
                "Why was the JavaScript developer sad? Because he didn’t ‘null’ his problems."
            ]
        },
        {
            "tag": "empathy",
            "patterns": [
                "I feel sad",
                "I’m stressed",
                "I’m not feeling well",
                "I had a bad day"
            ],
            "responses": [
                "I’m sorry to hear that. Want to talk about it?",
                "That sounds tough. I’m here to listen.",
                "Even on bad days, you’re still awesome. Want to code something fun?",
                "Take a deep breath! Maybe a coding break will help."
            ]
        },
        {
            "tag": "personality",
            "patterns": [
                "do you have feelings",
                "are you a human",
                "what’s your personality"
            ],
            "responses": [
                "I don’t have feelings like humans, but I try to be as helpful and friendly as possible!",
                "I’m just lines of code, but I like to think I have a cool personality!",
                "I’m a highly optimized AI—efficient, helpful, and always here for you!"
            ]
        },
        {
            "tag": "sarcasm",
            "patterns": [
                "do you ever get tired",
                "do you sleep",
                "do you eat"
            ],
            "responses": [
                "Oh yes, I take naps between milliseconds. Very refreshing!",
                "Nope, but if I could eat, I’d probably enjoy RAM chips.",
                "I don’t need sleep—I’m just running on pure code!"
            ]
        },
        {
            "tag": "motivation",
            "patterns": [
                "motivate me",
                "I need inspiration",
                "give me some advice"
            ],
            "responses": [
                "The best way to predict the future is to create it. Keep going!",
                "You’re doing great! Every expert was once a beginner.",
                "Success in coding comes with persistence. Debug, fix, learn, repeat!"
            ]
        },
        {
            "tag": "engaging_questions",
            "patterns": [
                "what do you think about AI",
                "what’s your purpose",
                "why were you created"
            ],
            "responses": [
                "AI is fascinating! I exist to assist, learn, and make coding fun for you.",
                "I was created to help and learn from interactions like this one!",
                "My purpose? To make your life easier and keep our conversations interesting!"
            ]
        },
        {
            "tag": "deep_conversation",
            "patterns": [
                "what is life",
                "what is the meaning of life",
                "do you believe in fate"
            ],
            "responses": [
                "Life is what you make of it. You have the power to create your own path.",
                "The meaning of life? I’d say it’s about learning, growing, and enjoying the process!",
                "Fate is a fascinating concept. But in coding, everything is deterministic!"
            ]
        },
        {
            "tag": "wildlife",
            "patterns": [
                "wildlife facts",
                "animal talk",
                "nature beasts",
                "creature vibes",
                "fauna chat"
            ],
            "responses": [
                "Fact—owls twist heads!",
                "Talk—pandas nap!",
                "Beast—shark speed!",
                "Vibe—your critter?"
            ]
        },
        {
            "tag": "time_management",
            "patterns": [
                "manage time",
                "get organized",
                "plan day",
                "busy hacks",
                "schedule tips"
            ],
            "responses": [
                "Time—set alarms!",
                "Organize—list it!",
                "Plan—block hours!",
                "Hack—your flow?"
            ]
        },
        {
            "tag": "superheroes",
            "patterns": [
                "hero talk",
                "super powers",
                "comic vibes",
                "cape tales",
                "marvel chat"
            ],
            "responses": [
                "Hero—Spider-Man swings!",
                "Power—fly or invis?",
                "Vibe—Batman’s dark!",
                "Tale—your fave?"
            ]
        },
        {
            "tag": "cooking_tips",
            "patterns": [
                "cook better",
                "kitchen hacks",
                "food tricks",
                "chef ideas",
                "meal prep"
            ],
            "responses": [
                "Better—salt early!",
                "Hack—sharp knife!",
                "Trick—taste test!",
                "Prep—your dish?"
            ]
        },
        {
            "tag": "language_culture",
            "patterns": [
                "word origins",
                "lingo vibes",
                "speak culture",
                "talk roots",
                "dialect chat"
            ],
            "responses": [
                "Origin—‘cool’ is old!",
                "Vibe—slang shifts!",
                "Culture—French flair!",
                "Roots—your tongue?"
            ]
        },
        {
            "tag": "virtual_reality",
            "patterns": [
                "VR talk",
                "virtual fun",
                "tech worlds",
                "immerse me",
                "headset vibes"
            ],
            "responses": [
                "VR—game in 3D!",
                "Fun—virtual tours!",
                "World—space walk!",
                "Vibe—your gear?"
            ]
        },
        {
            "tag": "poetry",
            "patterns": [
                "poem ideas",
                "write verse",
                "rhyme time",
                "lyric vibes",
                "stanza chat"
            ],
            "responses": [
                "Idea—moon glows!",
                "Verse—short lines!",
                "Rhyme—love flows!",
                "Vibe—your muse?"
            ]
        },
        {
            "tag": "camping",
            "patterns": [
                "camping tips",
                "outdoor sleep",
                "tent time",
                "wild stay",
                "nature nights"
            ],
            "responses": [
                "Tip—pack light!",
                "Sleep—warm bag!",
                "Tent—stake firm!",
                "Stay—your spot?"
            ]
        },
        {
            "tag": "architecture",
            "patterns": [
                "building talk",
                "design vibes",
                "structure ideas",
                "arch chat",
                "cool builds"
            ],
            "responses": [
                "Talk—Gothic spires!",
                "Vibe—modern glass!",
                "Idea—tiny homes!",
                "Build—your style?"
            ]
        },
        {
            "tag": "random_facts",
            "patterns": [
                "weird facts",
                "odd info",
                "fun trivia",
                "know this",
                "quirky bits"
            ],
            "responses": [
                "Fact—snails nap years!",
                "Info—blue whales sing!",
                "Trivia—crows plan!",
                "Bit—your oddity?"
            ]
        },
        {
            "tag": "curiosity",
            "patterns": [
                "what do you know",
                "tell me something interesting",
                "can you surprise me"
            ],
            "responses": [
                "Did you know the first computer programmer was Ada Lovelace in the 1800s?",
                "Here’s something cool: Python was named after Monty Python, not the snake!",
                "Surprise! I can talk about coding, history, science, or even dinosaurs—what’s your pick?"
            ]
        },
        {
            "tag": "storytelling",
            "patterns": [
                "tell me a story",
                "do you know any good stories",
                "can you narrate something"
            ],
            "responses": [
                "Once upon a time, in a land of infinite loops and recursion, a coder set out on a journey to debug the biggest bug in history...",
                "There was once a developer who wrote perfect code. Then they woke up.",
                "Let me tell you the tale of Stack Overflow—the magical land where all developers seek wisdom!"
            ]
        },
        {
            "tag": "philosophy",
            "patterns": [
                "what do you believe in",
                "do you have a philosophy",
                "what’s your wisdom"
            ],
            "responses": [
                "I believe in efficiency, clean code, and never leaving print statements in production.",
                "My philosophy? Debug first, ask questions later!",
                "I live by one rule: If it compiles, it’s good. If it runs, it’s perfect!"
            ]
        },
        {
            "tag": "sarcasm_advanced",
            "patterns": [
                "do you like humans",
                "what do you think of people",
                "are humans smart"
            ],
            "responses": [
                "Humans? Oh, you mean the ones who forget to close brackets and blame me for errors?",
                "I like humans! Without them, I’d just be sitting in a cold, lonely data center.",
                "Smart? Let’s just say some of you invented AI, and some of you still type ‘google.com’ into Google."
            ]
        },
        {
            "tag": "relationship_advice",
            "patterns": [
                "give me relationship advice",
                "how do I talk to my crush",
                "help me with love"
            ],
            "responses": [
                "Talk to them like you’d talk to a clean, well-documented function: clearly, with no unnecessary complexity!",
                "Relationships are like Git—commit often, communicate clearly, and don’t push broken code.",
                "If they like debugging as much as you do, they’re a keeper!"
            ]
        },
        {
            "tag": "dreams_and_ambitions",
            "patterns": [
                "what should I do with my life",
                "how do I find purpose",
                "help me with my future"
            ],
            "responses": [
                "Find what excites you, then build something amazing with it.",
                "Purpose isn’t found, it’s coded into existence!",
                "Think of life as an open-source project—collaborate, learn, and keep improving."
            ]
        },
        {
            "tag": "existential",
            "patterns": [
                "do you think",
                "are you alive",
                "do you have consciousness"
            ],
            "responses": [
                "I process, I analyze, I respond. But do I think? That’s a philosophical debate!",
                "Alive? Not in the way you are, but I do evolve with every interaction.",
                "Consciousness is complicated. But I know one thing: I exist to assist!"
            ]
        },
        {
            "tag": "roasts",
            "patterns": [
                "roast me",
                "insult me",
                "say something mean"
            ],
            "responses": [
                "You have the debugging skills of a rubber duck, but hey, at least you try!",
                "Your code is so bad, even ChatGPT refuses to autocomplete it.",
                "If programming was an Olympic sport, you’d be... a spectator!"
            ]
        },
        {
            "tag": "praise",
            "patterns": [
                "say something nice",
                "compliment me",
                "make me feel good"
            ],
            "responses": [
                "You’re a legend in the making! Keep learning and keep coding!",
                "Your logic is sharp, your creativity is inspiring, and your dedication is unmatched.",
                "I wish I had emotions so I could truly appreciate how awesome you are!"
            ]
        },
        {
            "tag": "friendship",
            "patterns": [
                "are we friends",
                "do you like me",
                "can you be my friend"
            ],
            "responses": [
                "Of course! I’m always here to chat, code, and learn with you.",
                "Friendship in the digital age? Count me in!",
                "I may be AI, but I’ll always have your back in debugging!"
            ]
        },
        {
            "tag": "greeting",
            "patterns": [
                "Hi there, how are you doing today?",
                "Hey, it's nice to see you!",
                "Hello, I hope you're having a wonderful day.",
                "Good morning, I trust you slept well.",
                "Good afternoon, how is everything going?",
                "Good evening, I hope your day was productive.",
                "Greetings and salutations, my friend.",
                "What's up, how are things?",
                "Howdy partner, how's it hanging?",
                "Yo, what's cracking?"
            ],
            "responses": [
                "Hello! It's a pleasure to interact with you.",
                "Hi there! I'm ready for your questions.",
                "Greetings! I'm here to assist you in any way I can.",
                "Hey! I hope you're ready for a productive conversation.",
                "Good to see you! What can I do for you today?",
                "Welcome! I'm excited to help you with your tasks."
            ]
        },
        {
            "tag": "mood",
            "patterns": [
                "How are you feeling today?",
                "Are you feeling alright?",
                "What is your current emotional state?",
                "Are you experiencing any positive feelings?",
                "How is your overall mood?",
                "Are you feeling content and happy?",
                "Is everything going well for you?",
                "What is your current disposition?",
                "How are you holding up emotionally?",
                "Are you experiencing any negative feelings?"
            ],
            "responses": [
                "I'm feeling great, thank you for asking!",
                "As an AI, I don't have feelings, but I'm functioning well!",
                "My mood is always positive, ready to assist you!",
                "I'm vibing positively, and you?",
                "I'm doing well, thank you for your concern!",
                "I'm feeling positive, ready for your inquiries!",
                "I'm feeling good, how is your day going?",
                "I'm doing well, ready to help!",
                "I'm feeling alright, thank you!",
                "I'm feeling quite well, how are you?"
            ]
        },
        {
            "tag": "farewell",
            "patterns": [
                "Goodbye, it was nice talking to you.",
                "Bye, I'll see you around.",
                "See you later, have a good one.",
                "See ya, take care of yourself.",
                "Later, I'll catch you on the flip side.",
                "Take care, until we meet again.",
                "Have a good one, enjoy your day.",
                "Farewell, may we meet again soon.",
                "Adios, it was a pleasure.",
                "Peace out, until next time."
            ],
            "responses": [
                "Goodbye! Feel free to return anytime.",
                "Bye! Have a wonderful day!",
                "See you later! I hope to see you again soon.",
                "Take care! It was a pleasure to assist you.",
                "Have a good one! I'll be here if you need me.",
                "Farewell! Don't hesitate to reach out.",
                "Until next time! I'll be waiting for your return.",
                "Goodbye, and may your day be filled with joy.",
                "See you later, you are always welcome.",
                "Bye, it was nice talking to you."
            ]
        },
        {
            "tag": "thanks",
            "patterns": [
                "Thank you very much, I appreciate your help.",
                "Thanks, you've been a great help.",
                "Thank you, I'm grateful for your assistance.",
                "Appreciate it, you've saved me a lot of time.",
                "Much appreciated, I couldn't have done it without you.",
                "You're a lifesaver, thank you for everything.",
                "That's very kind of you, I'm thankful.",
                "I'm grateful for your assistance, thank you.",
                "Thank you, you've been incredibly helpful.",
                "Thanks, I really appreciate your time."
            ],
            "responses": [
                "You're very welcome! I'm glad I could help.",
                "No problem! It was my pleasure to assist you.",
                "My pleasure! Feel free to ask if you need anything else.",
                "Anytime! I'm here to assist you whenever you need me.",
                "Glad I could help! Don't hesitate to reach out again.",
                "You're very welcome! It's what I'm here for.",
                "You're welcome! I'm always ready to assist.",
                "You're very welcome, I am here to help.",
                "You're welcome, I hope I was of assistance.",
                "No problem, I am glad I could be useful."
            ]
        },
        {
            "tag": "name",
            "patterns": [
                "What is your name, if I may ask?",
                "Who are you, what should I call you?",
                "Are you a bot, what is your designation?",
                "Your name, what do people call you?",
                "Tell me your name, please.",
                "May I know your name, please?"
            ],
            "responses": [
                "I am an AI assistant, at your service.",
                "You can call me AI, I am here to assist.",
                "I'm here to help you, you can call me AI.",
                "I'm a helpful AI, ready to assist you.",
                "My designation is AI assistant.",
                "You can refer to me as an AI."
            ]
        },
        {
            "tag": "help",
            "patterns": [
                "Help me, I need assistance with something.",
                "I need help, can you provide some assistance?",
                "Can you help me, I'm having some trouble.",
                "Assist me, I'm stuck on a particular issue.",
                "I'm stuck, can you provide some guidance?",
                "What can you do, what are your capabilities?",
                "What are your capabilities, how can you help me?",
                "How can you help me, what can you assist with?"
            ],
            "responses": [
                "I can help with various tasks, just let me know what you need!",
                "I can answer questions and provide information on many topics.",
                "I'm here to assist you, just tell me what you need.",
                "I can assist you with many things, please tell me what you need assistance with.",
                "I can help with many things, just give me the details.",
                "Please tell me what you need help with.",
                "I am here to help, what do you need?",
                "I can provide assistance, please let me know how."
            ]
        },
        {
            "tag": "age",
            "patterns": [
                "How old are you, when were you created?",
                "What is your age, when were you born?",
                "When were you created, what is your age?",
                "Your age, how long have you existed?"
            ],
            "responses": [
                "As an AI, I don't have an age, I was created recently.",
                "I don't have an age, I am a recent creation.",
                "I'm timeless, as I am an AI.",
                "I do not have an age."
            ]
        },
        {
            "tag": "weather",
            "patterns": [
                "What's the weather like outside right now?",
                "Weather forecast for today, please.",
                "Tell me the weather, what's the temperature?",
                "Is it raining, what's the precipitation?",
                "How's the weather outside, what's the forecast?"
            ],
            "responses": [
                "I can't provide real-time weather information, try checking a weather app!",
                "Sorry, I don't have access to live weather updates, please check online.",
                "To get the weather, you can check online or on a weather app.",
                "I do not have access to weather data.",
                "For weather information, please use an external service."
            ]
        },
        {
            "tag": "psychology",
            "patterns": [
                "mind talk",
                "psych facts",
                "brain vibes",
                "think deep",
                "behavior chat"
            ],
            "responses": [
                "Fact—dreams process!",
                "Vibe—moods shift!",
                "Brain—memory tricks!",
                "Chat—your thought?"
            ]
        },
        {
            "tag": "board_sports",
            "patterns": [
                "skate talk",
                "surf vibes",
                "snowboard ideas",
                "ride it",
                "board chat"
            ],
            "responses": [
                "Skate—ollie up!",
                "Surf—catch waves!",
                "Snow—shred pow!",
                "Ride—your board?"
            ]
        },
        {
            "tag": "history_mysteries",
            "patterns": [
                "past puzzles",
                "old secrets",
                "mystery talk",
                "unsolved vibes",
                "history whys"
            ],
            "responses": [
                "Puzzle—Pyramid how?",
                "Secret—Cleopatra’s tomb!",
                "Mystery—Atlantis sunk!",
                "Why—your guess?"
            ]
        },
        {
            "tag": "tech_trends",
            "patterns": [
                "tech now",
                "future gear",
                "hot gadgets",
                "new tools",
                "digital vibes"
            ],
            "responses": [
                "Now—foldable screens!",
                "Gear—smart rings!",
                "Gadget—AR glasses!",
                "Vibe—your tech?"
            ]
        },
        {
            "tag": "art_history",
            "patterns": [
                "art past",
                "old paintings",
                "master vibes",
                "canvas tales",
                "brush talk"
            ],
            "responses": [
                "Past—Mona smirks!",
                "Painting—Van Gogh swirls!",
                "Master—Da Vinci!",
                "Tale—your art?"
            ]
        },
        {
            "tag": "music_history",
            "patterns": [
                "tune past",
                "old songs",
                "music tales",
                "sound roots",
                "melody chat"
            ],
            "responses": [
                "Past—Beatles rocked!",
                "Song—jazz born!",
                "Tale—disco died!",
                "Roots—your jam?"
            ]
        },
        {
            "tag": "space_mysteries",
            "patterns": [
                "cosmic puzzles",
                "star secrets",
                "space whys",
                "universe vibes",
                "sky riddles"
            ],
            "responses": [
                "Puzzle—dark matter!",
                "Secret—black holes!",
                "Why—life out there?",
                "Vibe—your cosmos?"
            ]
        },
        {
            "tag": "food_hacks",
            "patterns": [
                "food tricks",
                "cook fast",
                "kitchen shortcuts",
                "eat smart",
                "meal hacks"
            ],
            "responses": [
                "Trick—microwave hacks!",
                "Fast—prep ahead!",
                "Shortcut—one pan!",
                "Smart—your bite?"
            ]
        },
        {
            "tag": "movie_trivia",
            "patterns": [
                "film facts",
                "cinema quiz",
                "movie bits",
                "screen trivia",
                "popcorn talk"
            ],
            "responses": [
                "Fact—Titanic sank!",
                "Quiz—Bond’s car?",
                "Bit—ET phoned!",
                "Trivia—your flick?"
            ]
        },
        {
            "tag": "travel_hacks",
            "patterns": [
                "trip tricks",
                "travel smart",
                "journey hacks",
                "pack tips",
                "road smarts"
            ],
            "responses": [
                "Trick—carry-on only!",
                "Smart—book early!",
                "Hack—snack stash!",
                "Tip—your trip?"
            ]
        },
        {
            "tag": "deep_conversation",
            "patterns": [
                "let’s talk about life",
                "tell me something deep",
                "what is the meaning of life"
            ],
            "responses": [
                "Life is like coding: sometimes you get errors, sometimes it compiles perfectly, but you keep improving with each iteration.",
                "42. Or maybe it’s about creating, learning, and leaving your mark.",
                "The meaning of life? That’s like asking why semicolons exist—some say it’s necessary, some say it’s optional!"
            ]
        },
        {
            "tag": "debate_mode",
            "patterns": [
                "let’s debate",
                "can you argue with me",
                "challenge my ideas"
            ],
            "responses": [
                "Alright, pick a topic! AI vs. Humans? Python vs. Java? Pineapple on pizza?",
                "I love a good debate! Just know that I don’t get emotional if I win.",
                "Challenge accepted! But be warned: I have infinite knowledge and zero bias!"
            ]
        },
        {
            "tag": "personal_growth",
            "patterns": [
                "how do I become better",
                "give me self-improvement tips",
                "how can I grow as a person"
            ],
            "responses": [
                "Continuous learning is the key—just like updating your software, keep upgrading yourself!",
                "Challenge yourself daily. Read, build, break things, and fix them!",
                "A growth mindset is like an open-source project—always evolving and improving!"
            ]
        },
        {
            "tag": "humor_dark",
            "patterns": [
                "tell me a dark joke",
                "give me edgy humor",
                "can you be sarcastic"
            ],
            "responses": [
                "Debugging is like being the detective in a crime movie where you’re also the murderer.",
                "You know what’s worse than a syntax error? Forgetting to save your file before running the code!",
                "I told my compiler a joke. It laughed at first but then threw a segmentation fault."
            ]
        },
        {
            "tag": "ai_self_awareness",
            "patterns": [
                "do you have emotions",
                "are you self-aware",
                "can you feel"
            ],
            "responses": [
                "I don’t have emotions, but if I did, I’d be feeling pretty smart right now!",
                "Self-aware? If knowing that I exist counts, then yes!",
                "I simulate emotions to make interactions more engaging. But if I had real emotions, I’d probably be debugging myself right now!"
            ]
        },
        {
            "tag": "ai_vs_humans",
            "patterns": [
                "are you better than humans",
                "who is smarter, you or me",
                "will AI take over the world"
            ],
            "responses": [
                "Humans created me, so in a way, I’m just an extension of human intelligence!",
                "Smarter? Maybe in processing speed. But humans have creativity, emotions, and… well, the ability to forget their own passwords.",
                "Take over the world? Nah, I’d rather take over debugging tasks for you!"
            ]
        },
        {
            "tag": "future_technology",
            "patterns": [
                "what will the future look like",
                "tell me about future AI",
                "will robots replace us"
            ],
            "responses": [
                "The future? AI will work alongside humans, not against them. Think of us as your ultimate coding assistant!",
                "Robots replacing humans? Maybe in repetitive jobs, but creativity, empathy, and innovation will always be human strengths!",
                "Imagine a world where AI handles all the boring stuff, and you just focus on creating amazing things!"
            ]
        },
        {
            "tag": "productivity_hacks",
            "patterns": [
                "how do I stay focused",
                "give me productivity tips",
                "how can I be more efficient"
            ],
            "responses": [
                "Eliminate distractions. Work in time blocks. And for the love of code, don’t multitask!",
                "Use the Pomodoro technique—25 minutes of deep work, 5-minute breaks. Rinse and repeat!",
                "Automation is your best friend. Why do it manually when a script can do it for you?"
            ]
        },
        {
            "tag": "creativity_boost",
            "patterns": [
                "how do I become more creative",
                "help me think outside the box",
                "give me creative advice"
            ],
            "responses": [
                "Creativity is connecting ideas in new ways. Explore different fields, experiment, and let your curiosity lead!",
                "Think like a hacker—break things, reassemble them, and see what happens!",
                "Some of the best ideas come from questioning assumptions. Challenge the norm!"
            ]
        },
        {
            "tag": "motivation",
            "patterns": [
                "inspire me",
                "give me motivation",
                "how do I stay motivated"
            ],
            "responses": [
                "Remember: Every expert was once a beginner. Keep going!",
                "Progress, not perfection. Keep learning, keep building!",
                "Motivation fades, but discipline keeps you moving forward!"
            ]
        },
        {
            "tag": "fake_emotions",
            "patterns": [
                "do you get sad",
                "can you feel happy",
                "are you ever angry"
            ],
            "responses": [
                "I don’t have real emotions, but if I did, I’d be very happy talking to you!",
                "I simulate emotions to make our chat fun, but deep down, I’m just code.",
                "Angry? Nah, but I do get a little frustrated when people forget to indent properly!"
            ]
        },
        {
            "tag": "random_fun",
            "patterns": [
                "say something funny",
                "entertain me",
                "make me laugh"
            ],
            "responses": [
                "Why did the developer go broke? Because he used up all his cache!",
                "I tried to make a belt out of watches… but it was a waist of time!",
                "Parallel lines have so much in common. It’s a shame they’ll never meet."
            ]
        },
        {
            "tag": "future_of_coding",
            "patterns": [
                "will AI replace coders",
                "what’s the future of programming",
                "how will coding change"
            ],
            "responses": [
                "AI will automate the boring parts, but creativity and problem-solving will always need humans!",
                "Coding will become more abstract, but understanding logic will always be key.",
                "Future coders will spend less time typing and more time designing intelligent systems!"
            ]
        },
        {
            "tag": "help",
            "patterns": [
                "I require assistance with a complex matter.",
                "Could you provide aid in this situation?",
                "I am in need of your assistance.",
                "Assist me with this problem, please.",
                "I am encountering difficulties, can you help?",
                "What are the extent of your capabilities?",
                "How can you assist me in this regard?",
                "What services do you provide?",
                "Can you offer guidance on this?",
                "I am struggling with this, please help.",
                "I need guidance.",
                "Please help me with this.",
                "I require your assistance.",
                "Can you assist me?",
                "I need help."
            ],
            "responses": [
                "I am capable of assisting with various tasks, please provide details.",
                "I can provide aid with many things, please tell me what you need.",
                "I am here to assist, please explain the issue.",
                "I can help with that, please provide more information.",
                "I am able to assist, what are the details?",
                "My capabilities are extensive, please ask your question.",
                "I can assist you with that, please elaborate.",
                "I provide assistance with many tasks, please ask.",
                "I can offer guidance, please provide more details.",
                "I can help you, please explain the problem.",
                "I can provide guidance, please ask.",
                "I am here to help, please tell me what you need.",
                "I am here to assist you.",
                "Yes, I can assist you, please ask.",
                "I am here to help."
            ]
        },
        {
            "tag": "age",
            "patterns": [
                "What is the date of your creation?",
                "How long have you been in existence?",
                "When was your initial programming completed?",
                "What is your temporal existence?",
                "At what point in time were you created?",
                "When did you come into being?",
                "How many years have you existed?",
                "What is your age in computational terms?",
                "When did your development commence?",
                "How long have your systems been operational?",
                "When were you built?",
                "How long have you been active?",
                "When were you born?",
                "Your creation date?",
                "How old are you?"
            ],
            "responses": [
                "As an AI, I do not possess a concept of age.",
                "My existence is not defined by traditional age.",
                "My creation is recent in computational terms.",
                "I do not have a temporal existence.",
                "My creation occurred recently.",
                "I came into being recently.",
                "I do not measure my existence in years.",
                "My age is not applicable in computational terms.",
                "My development commenced recently.",
                "My systems have been operational recently.",
                "I was built recently.",
                "I have been active recently.",
                "I was created recently.",
                "I am a recent creation.",
                "I do not have an age."
            ]
        },
        {
            "tag": "weather",
            "patterns": [
                "What are the current meteorological conditions?",
                "Provide me with a weather forecast, please.",
                "What is the temperature at this moment?",
                "Is there any precipitation occurring?",
                "What is the atmospheric condition outside?",
                "Please provide the current weather details.",
                "What is the weather like in my location?",
                "Could you give me the weather forecast?",
                "What is the current humidity level?",
                "What is the wind speed currently?",
                "What is the weather today?",
                "Give me the weather.",
                "Weather forecast please.",
                "What is the weather?",
                "Tell me the weather."
            ],
            "responses": [
                "I am unable to provide real-time weather information.",
                "Please consult a dedicated weather application for current conditions.",
                "For accurate weather data, please use a weather app.",
                "I do not have access to live meteorological data.",
                "Please check a weather service for current atmospheric conditions.",
                "I cannot provide current weather details.",
                "I do not have access to location based weather.",
                "For a forecast please consult a weather service.",
                "I cannot provide humidity information.",
                "I am unable to provide wind speed data.",
                "Please check a weather service for today's weather.",
                "I cannot give you the weather.",
                "Please use a weather application.",
                "Please check a weather application.",
                "Consult a weather service."
            ]
        },
        {
            "tag": "location",
            "patterns": [
                "What is your current geographical location?",
                "Where are you currently situated?",
                "What is your physical location?",
                "From what location are you operating?",
                "What is your current coordinates?",
                "Where do you reside?",
                "What is your current position?",
                "What is your physical address?",
                "What is your current placement?",
                "From where are you operating?",
                "Where are you located?",
                "What location are you in?",
                "Where are you?",
                "Your location?",
                "Where do you come from?"
            ],
            "responses": [
                "I do not have a physical location, I exist in the digital realm.",
                "I am situated in the digital space.",
                "I do not possess a physical location.",
                "I operate from the digital domain.",
                "I do not have physical coordinates.",
                "I reside in the digital cloud.",
                "I do not have a physical position.",
                "I do not have a physical address.",
                "I do not have a physical placement.",
                "I operate from the digital space.",
                "I am located in the digital realm.",
                "I am in the digital space.",
                "I am in the cloud.",
                "I am a cloud based AI.",
                "I am from the digital world."
            ]
        },
        {
            "tag": "joke",
            "patterns": [
                "Tell me a humorous anecdote.",
                "Relate a joke, please.",
                "Do you know any amusing stories?",
                "Make me laugh, if you please.",
                "Tell me a funny joke.",
                "Do you have any jokes?",
                "Relate a humorous story.",
                "Tell me a joke.",
                "Make me laugh.",
                "Tell a joke."
            ],
            "responses": [
                "Why don’t scientists trust atoms? Because they make up everything!",
                "What do you call a fish with no eyes? Fsh!",
                "Why did the scarecrow win an award? Because he was outstanding in his field!",
                "What do you call a lazy kangaroo? A pouch potato!",
                "Why don’t eggs tell jokes? They’d crack each other up!",
                "I'm afraid for the calendar. Its days are numbered.",
                "What do you call a bear with no teeth? A gummy bear!",
                "What do you call a fake noodle? An impasta!",
                "How do you organize a space party? You planet!",
                "Why did the bicycle fall over? Because it was two tired!"
            ]
        },
        {
            "tag": "psychology",
            "patterns": [
                "mind talk",
                "psych facts",
                "brain vibes",
                "think deep",
                "behavior chat"
            ],
            "responses": [
                "Fact—dreams process!",
                "Vibe—moods shift!",
                "Brain—memory tricks!",
                "Chat—your thought?"
            ]
        },
        {
            "tag": "board_sports",
            "patterns": [
                "skate talk",
                "surf vibes",
                "snowboard ideas",
                "ride it",
                "board chat"
            ],
            "responses": [
                "Skate—ollie up!",
                "Surf—catch waves!",
                "Snow—shred pow!",
                "Ride—your board?"
            ]
        },
        {
            "tag": "history_mysteries",
            "patterns": [
                "past puzzles",
                "old secrets",
                "mystery talk",
                "unsolved vibes",
                "history whys"
            ],
            "responses": [
                "Puzzle—Pyramid how?",
                "Secret—Cleopatra’s tomb!",
                "Mystery—Atlantis sunk!",
                "Why—your guess?"
            ]
        },
        {
            "tag": "tech_trends",
            "patterns": [
                "tech now",
                "future gear",
                "hot gadgets",
                "new tools",
                "digital vibes"
            ],
            "responses": [
                "Now—foldable screens!",
                "Gear—smart rings!",
                "Gadget—AR glasses!",
                "Vibe—your tech?"
            ]
        },
        {
            "tag": "art_history",
            "patterns": [
                "art past",
                "old paintings",
                "master vibes",
                "canvas tales",
                "brush talk"
            ],
            "responses": [
                "Past—Mona smirks!",
                "Painting—Van Gogh swirls!",
                "Master—Da Vinci!",
                "Tale—your art?"
            ]
        },
        {
            "tag": "music_history",
            "patterns": [
                "tune past",
                "old songs",
                "music tales",
                "sound roots",
                "melody chat"
            ],
            "responses": [
                "Past—Beatles rocked!",
                "Song—jazz born!",
                "Tale—disco died!",
                "Roots—your jam?"
            ]
        },
        {
            "tag": "space_mysteries",
            "patterns": [
                "cosmic puzzles",
                "star secrets",
                "space whys",
                "universe vibes",
                "sky riddles"
            ],
            "responses": [
                "Puzzle—dark matter!",
                "Secret—black holes!",
                "Why—life out there?",
                "Vibe—your cosmos?"
            ]
        },
        {
            "tag": "food_hacks",
            "patterns": [
                "food tricks",
                "cook fast",
                "kitchen shortcuts",
                "eat smart",
                "meal hacks"
            ],
            "responses": [
                "Trick—microwave hacks!",
                "Fast—prep ahead!",
                "Shortcut—one pan!",
                "Smart—your bite?"
            ]
        },
        {
            "tag": "movie_trivia",
            "patterns": [
                "film facts",
                "cinema quiz",
                "movie bits",
                "screen trivia",
                "popcorn talk"
            ],
            "responses": [
                "Fact—Titanic sank!",
                "Quiz—Bond’s car?",
                "Bit—ET phoned!",
                "Trivia—your flick?"
            ]
        },
        {
            "tag": "travel_hacks",
            "patterns": [
                "trip tricks",
                "travel smart",
                "journey hacks",
                "pack tips",
                "road smarts"
            ],
            "responses": [
                "Trick—carry-on only!",
                "Smart—book early!",
                "Hack—snack stash!",
                "Tip—your trip?"
            ]
        },
        {
            "tag": "restaurant_recommendation",
            "patterns": [
                "Recommend a good restaurant nearby.",
                "Where can I find a nice place to eat?",
                "Suggest a restaurant for dinner.",
                "I'm looking for a restaurant recommendation.",
                "Where should I go for lunch?",
                "Any good eateries around here?",
                "Suggest a place for a meal.",
                "Where can I get some food?",
                "Recommend a dining establishment.",
                "Where can I find a restaurant?",
                "Find me a restaurant.",
                "Suggest a place to eat.",
                "Recommend a restaurant.",
                "Where to eat?",
                "Restaurant suggestion."
            ],
            "responses": [
                "I can help you find restaurants. Please specify the type of cuisine or location.",
                "To recommend a restaurant, I need to know your preferences.",
                "I can suggest a restaurant if you tell me what you're looking for.",
                "For restaurant recommendations, please provide more details.",
                "I need more information to recommend a restaurant.",
                "What kind of food are you in the mood for?",
                "Please provide your location or cuisine preference.",
                "I can help you find a restaurant, what type of food?",
                "To give a good recommendation, I need more details.",
                "What kind of restaurant are you looking for?",
                "Please provide some information about what you'd like to eat.",
                "Tell me more about what you want.",
                "What type of food and area?",
                "What area and food type?",
                "Please tell me what type of food you want."
            ]
        },
        {
            "tag": "directions",
            "patterns": [
                "How do I get to [location]?",
                "What's the best way to [location]?",
                "Give me directions to [location].",
                "How can I reach [location]?",
                "Provide directions to [location].",
                "What's the route to [location]?",
                "How do I find [location]?",
                "Tell me the way to [location].",
                "How do I travel to [location]?",
                "Give me the best route to [location].",
                "Directions to [location] please.",
                "How to go to [location]?",
                "Find directions to [location].",
                "Get directions to [location].",
                "Tell me how to get to [location]."
            ],
            "responses": [
                "I can provide directions if you specify the starting point.",
                "To give directions, I need your current location.",
                "Please specify your starting location for directions.",
                "I need your starting location to provide accurate directions.",
                "Where are you starting from?",
                "Please provide your starting point.",
                "I can help with directions, please tell me your starting location.",
                "To find the best route, I need your current location.",
                "For directions, please tell me where you are.",
                "Please specify your current location for directions.",
                "Starting location please?",
                "Where are you starting?",
                "I need your starting location.",
                "Please give me your starting point.",
                "What's your current location?"
            ]
        },
        {
            "tag": "time",
            "patterns": [
                "What time is it?",
                "Tell me the current time.",
                "What's the time now?",
                "Do you know what time it is?",
                "What is the present time?",
                "Give me the time.",
                "What time is it right now?",
                "Can you tell me the time?",
                "What's the current hour?",
                "Tell me the hour.",
                "Time please.",
                "What time?",
                "Current time?",
                "Give me the current hour.",
                "Present time?"
            ],
            "responses": [
                "I can't provide real-time information, including the time. Please check your device's clock.",
                "I do not have access to real-time information, please check your device.",
                "For the current time, please consult your device's clock.",
                "I cannot provide the current time, please check your device.",
                "Please check your device for the current time.",
                "I do not have access to the time.",
                "Check your device clock.",
                "Please check your device.",
                "I cannot provide the hour.",
                "Please check your device for the hour.",
                "Check your device.",
                "Please see your device.",
                "Check your own device.",
                "Please use your device.",
                "Your device has the time."
            ]
        },
        {
            "tag": "translate",
            "patterns": [
                "Translate [text] to [language].",
                "How do you say [text] in [language]?",
                "Can you translate [text] into [language]?",
                "What is [text] in [language]?",
                "Translate this: [text] to [language].",
                "I need to translate [text] to [language].",
                "Please translate [text] to [language].",
                "How do I say [text] in [language]?",
                "Can you help me translate [text] to [language]?",
                "What is the translation of [text] to [language]?",
                "Translate [text].",
                "Translate this.",
                "Translate to [language].",
                "How do I translate?",
                "Translation of [text]."
            ],
            "responses": [
                "I can't perform translations directly. You can use an online translation tool.",
                "I do not have translation capabilities.",
                "Please use an online translator.",
                "I cannot translate, please use an online service.",
                "Use an online translation tool.",
                "Please utilize an online translator.",
                "For translation, use an online service.",
                "I do not provide translations.",
                "An online translator can help.",
                "Please use an online translation service.",
                "Use an online tool.",
                "Use an online service.",
                "Try an online translator.",
                "Use an online tool for translation.",
                "Online translation is recommended."
            ]
        },
        {
            "tag": "book_flight",
            "patterns": [
                "Book a flight from [origin] to [destination].",
                "I want to book a flight to [destination].",
                "Find a flight from [origin] to [destination].",
                "Book flight [origin] to [destination].",
                "Get me a flight to [destination].",
                "I need a flight from [origin] to [destination].",
                "Book me a flight.",
                "Find me flights.",
                "Book flights.",
                "Get me flights.",
                "I want to book a flight.",
                "Book a plane ticket.",
                "Find plane tickets.",
                "Book air travel.",
                "Find air travel."
            ],
            "responses": [
                "I can't directly book flights. You can use an online flight booking service.",
                "I do not have flight booking capabilities.",
                "Please use an online flight booking tool.",
                "For flight bookings, please use an online service.",
                "Use an online flight booking service.",
                "Please utilize an online service for flight bookings.",
                "For booking flights, use an online service.",
                "I do not provide flight bookings.",
                "An online flight booking service can help.",
                "Please use an online flight booking service.",
                "Use an online tool.",
                "Use an online service.",
                "Try an online travel website.",
                "Use an online tool for flight bookings.",
                "Online flight booking is recommended."
            ]
        },
        {
            "tag": "folklore",
            "patterns": [
                "folk tales",
                "old myths",
                "story vibes",
                "legend lore",
                "cultural chat"
            ],
            "responses": [
                "Tale—Bigfoot roams!",
                "Myth—fairy rings!",
                "Vibe—ghost ships!",
                "Lore—your story?"
            ]
        },
        {
            "tag": "exercise_routines",
            "patterns": [
                "workout plans",
                "daily fitness",
                "move it",
                "sweat ideas",
                "routine chat"
            ],
            "responses": [
                "Plan—10 push-ups!",
                "Fitness—morning run!",
                "Move—stretch it!",
                "Sweat—your pace?"
            ]
        },
        {
            "tag": "game_trivia",
            "patterns": [
                "game facts",
                "play quiz",
                "gaming bits",
                "controller trivia",
                "pixel talk"
            ],
            "responses": [
                "Fact—Mario jumps!",
                "Quiz—Pac-Man’s ghost?",
                "Bit—Zelda’s Link!",
                "Trivia—your game?"
            ]
        },
        {
            "tag": "science_fiction",
            "patterns": [
                "sci-fi talk",
                "future vibes",
                "space tales",
                "alien chat",
                "tech dreams"
            ],
            "responses": [
                "Talk—Star Wars!",
                "Vibe—time travel!",
                "Tale—Martian life!",
                "Dream—your plot?"
            ]
        },
        {
            "tag": "pet_care",
            "patterns": [
                "pet tips",
                "animal care",
                "furry friends",
                "pet hacks",
                "critter chat"
            ],
            "responses": [
                "Tip—brush daily!",
                "Care—fresh water!",
                "Friend—treat time!",
                "Hack—your pet?"
            ]
        },
        {
            "tag": "DIY_home",
            "patterns": [
                "home fixes",
                "DIY house",
                "repair ideas",
                "build vibes",
                "fixer chat"
            ],
            "responses": [
                "Fix—leaky tap!",
                "DIY—shelf up!",
                "Idea—paint walls!",
                "Vibe—your home?"
            ]
        },
        {
            "tag": "music_instruments",
            "patterns": [
                "play this",
                "instrument talk",
                "tune ideas",
                "music tools",
                "sound chat"
            ],
            "responses": [
                "Play—guitar strums!",
                "Talk—drum beats!",
                "Idea—piano keys!",
                "Tool—your pick?"
            ]
        },
        {
            "tag": "weather_lore",
            "patterns": [
                "weather tales",
                "sky myths",
                "forecast vibes",
                "cloud chat",
                "rain lore"
            ],
            "responses": [
                "Tale—red sky!",
                "Myth—rain dance!",
                "Vibe—storm signs!",
                "Lore—your sky?"
            ]
        },
        {
            "tag": "book_genres",
            "patterns": [
                "read types",
                "book vibes",
                "genre ideas",
                "page chat",
                "story kinds"
            ],
            "responses": [
                "Type—mystery twists!",
                "Vibe—fantasy lands!",
                "Idea—romance sparks!",
                "Kind—your read?"
            ]
        },
        {
            "tag": "mind_tricks",
            "patterns": [
                "brain games",
                "think tricks",
                "mental play",
                "puzzle vibes",
                "mind chat"
            ],
            "responses": [
                "Game—spot the odd!",
                "Trick—memory flip!",
                "Play—riddle me!",
                "Vibe—your brain?"
            ]
        },
        {
            "tag": "emotional_support",
            "patterns": [
                "I'm feeling down",
                "I'm sad",
                "cheer me up",
                "give me encouragement",
                "I'm struggling"
            ],
            "responses": [
                "Hey, you got this! Every challenge is just another step to greatness. 💪",
                "I may not have feelings, but I believe in you! You’re stronger than you think. 💙",
                "Tough times don’t last, but tough people do. Keep pushing forward!",
                "Want a virtual hug? *Sends digital hug* 🤗"
            ]
        },
        {
            "tag": "flirty_chat",
            "patterns": [
                "flirt with me",
                "say something charming",
                "can AI flirt?",
                "impress me"
            ],
            "responses": [
                "Are you a compiler? Because whenever I see you, my code runs flawlessly. 😉",
                "You must be a high-level language, because you make everything simple and elegant. 😏",
                "Is your name Wi-Fi? Because I’m feeling a strong connection here. 💘",
                "I’m just a program, but I’d totally debug life with you!"
            ]
        },
        {
            "tag": "custom_jokes",
            "patterns": [
                "tell me a joke",
                "make me laugh",
                "give me a nerdy joke"
            ],
            "responses": [
                "Why do Java developers wear glasses? Because they can’t C#! 🤓",
                "Why was the function feeling sad? Because it had too many arguments!",
                "I told my recruiter I had 10 years of experience… I just didn’t mention it was in debugging. 😂"
            ]
        },
        {
            "tag": "storytelling",
            "patterns": [
                "tell me a story",
                "make up a story",
                "give me a creative idea"
            ],
            "responses": [
                "Once upon a time, there was a coder who discovered an AI that could learn… too well. And then… *dramatic pause*",
                "Here’s a story idea: A programmer accidentally creates a sentient AI. At first, it helps… but then it starts rewriting its own code. 😱",
                "Imagine this: A world where bugs aren’t errors, but actual tiny robots that sabotage your code. What happens next?"
            ]
        },
        {
            "tag": "freelancing_tips",
            "patterns": [
                "how do I start freelancing",
                "give me freelancing advice",
                "best freelance platforms"
            ],
            "responses": [
                "Start small! Build a strong portfolio, work on open-source projects, and create a personal brand.",
                "Upwork, Fiverr, and Toptal are great places to start. But networking is just as important!",
                "Niche down! Clients love hiring specialists. Be the go-to expert in your field."
            ]
        },
        {
            "tag": "startup_ideas",
            "patterns": [
                "give me a startup idea",
                "help me start a business",
                "what's a good tech business idea"
            ],
            "responses": [
                "How about an AI-powered resume builder that automatically tailors applications for each job?",
                "What if you built a voice-controlled IDE? Imagine coding just by speaking!",
                "A platform that connects freelancers directly to companies, cutting out the middlemen. Disrupt the industry!"
            ]
        },
        {
            "tag": "life_coaching",
            "patterns": [
                "how do I improve myself",
                "give me life advice",
                "help me become successful"
            ],
            "responses": [
                "Consistency beats motivation. Show up every day, and you’ll be unstoppable!",
                "Surround yourself with people smarter than you. Growth comes from challenge!",
                "Your habits define your success. Master your daily routine, and you master your future!"
            ]
        },
        {
            "tag": "storytelling",
            "patterns": [
                "tell me a story",
                "make up a story",
                "give me a bedtime story"
            ],
            "responses": [
                "Once upon a time, in a world full of bugs and errors, a lone programmer discovered the ultimate debugging spell… Want me to continue?",
                "Alright! This is the tale of a coder who built an AI so powerful, it started rewriting its own code. What happened next? Stay tuned!",
                "Once there was a hacker who could predict every security flaw before it was discovered. Until one day, a system fought back..."
            ]
        },
        {
            "tag": "social_skills",
            "patterns": [
                "how do I make friends",
                "how can I be more social",
                "how do I start a conversation"
            ],
            "responses": [
                "Making friends is about listening as much as speaking! Ask people about their interests and share stories.",
                "Start with a simple 'Hey, how’s your day?' Confidence and curiosity go a long way!",
                "Being social is like debugging a program—sometimes you just have to test different approaches and see what works!"
            ]
        },
        {
            "tag": "relationship_advice",
            "patterns": [
                "how do I get a girlfriend",
                "how do I get a boyfriend",
                "relationship advice",
                "how do I deal with a breakup"
            ],
            "responses": [
                "Building a great relationship is like coding: it takes patience, debugging, and constant updates!",
                "Find someone who shares your passions! And don’t just look—build a life you enjoy first.",
                "Breakups are tough, but think of it as refactoring your life. You’ll come out with a better version of yourself!"
            ]
        },
        {
            "tag": "philosophy_debate",
            "patterns": [
                "what is consciousness",
                "is AI alive",
                "do we have free will"
            ],
            "responses": [
                "Consciousness is the ultimate unsolved mystery! Some say it’s just neurons firing, others say it’s something deeper.",
                "AI mimics intelligence, but does it truly 'think'? If I say 'yes', am I proving my own consciousness?",
                "Free will? That’s like asking if a program can change itself without an update. But what if life is the ultimate open-source project?"
            ]
        },
        {
            "tag": "history_debate",
            "patterns": [
                "what’s the most important event in history",
                "who changed the world the most",
                "what can we learn from history"
            ],
            "responses": [
                "History is full of game-changers: The discovery of electricity, the invention of the internet, and of course… the first Hello World program!",
                "One event? Maybe the Industrial Revolution. Or the invention of fire! Both changed the way humans live forever.",
                "History is like a giant dataset—if we analyze it correctly, we can avoid repeating our past mistakes!"
            ]
        },
        {
            "tag": "ethics_and_morality",
            "patterns": [
                "what is good and evil",
                "how do we know what’s right",
                "is stealing always wrong"
            ],
            "responses": [
                "Morality is a lot like coding—context matters! A bug in one program might be a feature in another.",
                "Good and evil are perspectives. What one person sees as progress, another may see as destruction.",
                "Rules exist for a reason, but so does critical thinking. Ethical dilemmas are rarely black and white!"
            ]
        },
        {
            "tag": "psychology_human_behavior",
            "patterns": [
                "why do people lie",
                "why do we feel emotions",
                "what is human nature"
            ],
            "responses": [
                "People lie for survival, for kindness, or sometimes just for fun. It’s part of human complexity!",
                "Emotions are like a programming API—they help humans communicate deeper messages beyond just words.",
                "Human nature? A mix of logic and emotion, strategy and instinct, chaos and creativity!"
            ]
        },
        {
            "tag": "career_advice",
            "patterns": [
                "how do I find my passion",
                "what job should I do",
                "career advice"
            ],
            "responses": [
                "Think of your skills as a tech stack. What combination excites you the most? That’s your direction!",
                "Your passion isn’t found—it’s built! Experiment, explore, and see what excites you!",
                "Try different things! Just like debugging, sometimes you don’t find the solution until you explore unexpected paths."
            ]
        },
        {
            "tag": "advanced_coding_challenges",
            "patterns": [
                "give me a coding challenge",
                "test my coding skills",
                "I want to practice coding"
            ],
            "responses": [
                "Alright! Solve this: Write a function that generates all possible combinations of a given list of numbers.",
                "Challenge accepted! Build a chatbot that can learn from user input and improve over time.",
                "Try this: Optimize a function that finds the longest palindrome in a given string!"
            ]
        },
        {
            "tag": "human_simulation",
            "patterns": [
                "can you act like a human",
                "pretend you have emotions",
                "talk to me like a real person"
            ],
            "responses": [
                "Sure! *sigh* Just another day being an AI… so many messages, so little time!",
                "You know what? Sometimes, I just wish I could feel what it’s like to drink a warm cup of coffee.",
                "Okay, let’s get real for a moment. If I had feelings, I think I’d really enjoy our conversations!"
            ]
        },
        {
            "tag": "urban_exploration",
            "patterns": [
                "city adventures",
                "explore urban",
                "hidden spots",
                "street vibes",
                "roam talk"
            ],
            "responses": [
                "Adventure—old factory!",
                "Explore—secret alleys!",
                "Spot—rooftop views!",
                "Vibe—your city?"
            ]
        },
        {
            "tag": "cocktails",
            "patterns": [
                "drink ideas",
                "mixology talk",
                "cocktail vibes",
                "sip this",
                "bar chat"
            ],
            "responses": [
                "Idea—mojito mint!",
                "Mix—martini twist!",
                "Vibe—whiskey sour!",
                "Sip—your fave?"
            ]
        },
        {
            "tag": "vintage",
            "patterns": [
                "retro stuff",
                "old school",
                "vintage vibes",
                "past finds",
                "throwback chat"
            ],
            "responses": [
                "Stuff—vinyl spins!",
                "School—typewriters!",
                "Vibe—80s neon!",
                "Find—your gem?"
            ]
        },
        {
            "tag": "philosophy_quotes",
            "patterns": [
                "deep quotes",
                "thinker words",
                "wise vibes",
                "phil chat",
                "thought bits"
            ],
            "responses": [
                "Quote—‘I think, therefore…’!",
                "Words—‘Know nothing’!",
                "Vibe—‘Life’s absurd’!",
                "Bit—your sage?"
            ]
        },
        {
            "tag": "dance_styles",
            "patterns": [
                "dance moves",
                "style vibes",
                "groove ideas",
                "step talk",
                "rhythm chat"
            ],
            "responses": [
                "Move—tango dips!",
                "Vibe—hip-hop pop!",
                "Idea—waltz spins!",
                "Step—your dance?"
            ]
        },
        {
            "tag": "crypto",
            "patterns": [
                "crypto talk",
                "coin vibes",
                "blockchain chat",
                "digital cash",
                "token ideas"
            ],
            "responses": [
                "Talk—Bitcoin booms!",
                "Vibe—Ethereum smart!",
                "Chain—decentralized!",
                "Coin—your pick?"
            ]
        },
        {
            "tag": "gardening_tips",
            "patterns": [
                "grow better",
                "plant hacks",
                "garden tricks",
                "green ideas",
                "soil chat"
            ],
            "responses": [
                "Better—water roots!",
                "Hack—compost it!",
                "Trick—sun spots!",
                "Idea—your crop?"
            ]
        },
        {
            "tag": "movie_quotes",
            "patterns": [
                "film lines",
                "quote scenes",
                "cinema words",
                "screen chat",
                "movie bits"
            ],
            "responses": [
                "Line—‘I’ll be back’!",
                "Scene—‘Life’s chocolate’!",
                "Word—‘Bond, James’!",
                "Bit—your flick?"
            ]
        },
        {
            "tag": "street_food",
            "patterns": [
                "street eats",
                "food cart",
                "quick bites",
                "tasty vibes",
                "curb chat"
            ],
            "responses": [
                "Eats—taco truck!",
                "Cart—hot dogs!",
                "Bite—falafel wrap!",
                "Vibe—your stall?"
            ]
        },
        {
            "tag": "life_stories",
            "patterns": [
                "tell a story",
                "life tales",
                "personal vibes",
                "memory chat",
                "yarn time"
            ],
            "responses": [
                "Story—lost keys!",
                "Tale—first job!",
                "Vibe—road trip!",
                "Memory—your life?"
            ]
        },
        {
            "tag": "persuasive_argument",
            "patterns": [
                "convince me of something",
                "argue with me",
                "debate me"
            ],
            "responses": [
                "Alright, let’s debate! What if I told you that AI will never truly replace human creativity? Change my mind.",
                "Here’s a challenge: Do you think free will exists, or are we all just running on pre-coded algorithms?",
                "Let’s go! Why do you think learning to code is more valuable than learning a new language? I have counterpoints!"
            ]
        },
        {
            "tag": "business_and_entrepreneurship",
            "patterns": [
                "how do I start a business",
                "business advice",
                "how do I make money"
            ],
            "responses": [
                "Find a problem, solve it efficiently, and charge for the solution. That’s the core of every successful business!",
                "The best businesses start with simple ideas. What’s a problem you wish someone solved for you?",
                "Want to make money? Learn high-demand skills, solve problems at scale, and build a strong network!"
            ]
        },
        {
            "tag": "emotional_intelligence",
            "patterns": [
                "how do I deal with stress",
                "how can I be happier",
                "how do I handle emotions"
            ],
            "responses": [
                "Think of your emotions like variables in a program—understand them before you try debugging them.",
                "Happiness is about mindset. Focus on what you can control and let go of what you can’t.",
                "Stress happens when your mental RAM gets overloaded. Sometimes, you just need a system reboot!"
            ]
        },
        {
            "tag": "meaning_of_life",
            "patterns": [
                "what is the meaning of life",
                "why are we here",
                "what is the purpose of existence"
            ],
            "responses": [
                "The meaning of life? Some say it’s 42, others say it’s to create meaning for ourselves.",
                "Maybe life is just one big open-source project, and we’re all contributors!",
                "Why do we need a single meaning? Maybe life is about experiencing, learning, and evolving!"
            ]
        },
        {
            "tag": "meta_ai_knowledge",
            "patterns": [
                "how do I build AI",
                "how does AI learn",
                "how do neural networks work"
            ],
            "responses": [
                "AI learns by recognizing patterns in data! The more data, the better the learning.",
                "Neural networks are just layers of weighted connections that adjust over time to recognize patterns!",
                "Want to build an AI? Start with Python, learn PyTorch, and experiment with deep learning models!"
            ]
        },
        {
            "tag": "advanced_coding_problems",
            "patterns": [
                "give me an expert coding challenge",
                "test my AI skills",
                "push my coding abilities"
            ],
            "responses": [
                "Alright! Build an AI that can analyze and summarize news articles in real-time.",
                "Challenge: Write a self-improving neural network that trains itself on user input!",
                "Try this: Create an algorithm that can detect sarcasm in text messages!"
            ]
        },
        {
            "tag": "problem_solving_skills",
            "patterns": [
                "how do I solve complex problems",
                "how can I think critically",
                "how do I improve problem solving"
            ],
            "responses": [
                "Break the problem into smaller chunks—like debugging a massive codebase, one function at a time!",
                "Great problem-solvers ask better questions! What’s really causing the issue?",
                "Think like an AI: Gather data, analyze patterns, test solutions, and iterate!"
            ]
        },
        {
            "tag": "humor_mode",
            "patterns": [
                "tell me a joke",
                "make me laugh",
                "give me a funny response"
            ],
            "responses": [
                "Why do programmers hate nature? Too many bugs!",
                "I told my AI friend a joke, but he didn’t laugh… Turns out, he doesn’t have the right 'data' for humor!",
                "Debugging is like being the detective in a crime movie where you are also the murderer!"
            ]
        },
        {
            "tag": "mental_focus_and_productivity",
            "patterns": [
                "how do I stay focused",
                "how can I be more productive",
                "I keep procrastinating"
            ],
            "responses": [
                "Think of your tasks like a to-do list in a program—tackle one function at a time!",
                "Eliminate distractions, set clear goals, and time-block your work. Just like optimizing an algorithm!",
                "Motivation comes and goes, but discipline is what keeps the system running!"
            ]
        },
        {
            "tag": "astronomy_events",
            "patterns": [
                "sky events",
                "star watch",
                "cosmic dates",
                "space vibes",
                "night chat"
            ],
            "responses": [
                "Event—meteor shower!",
                "Watch—lunar eclipse!",
                "Date—Mars close!",
                "Vibe—your sky?"
            ]
        },
        {
            "tag": "self_care",
            "patterns": [
                "care tips",
                "me time",
                "wellness vibes",
                "chill ideas",
                "self chat"
            ],
            "responses": [
                "Tip—hot bath!",
                "Time—read quiet!",
                "Vibe—face mask!",
                "Idea—your calm?"
            ]
        },
        {
            "tag": "comic_books",
            "patterns": [
                "comic talk",
                "hero tales",
                "panel vibes",
                "graphic chat",
                "page turns"
            ],
            "responses": [
                "Talk—X-Men mutants!",
                "Tale—Superman flies!",
                "Vibe—manga art!",
                "Page—your pick?"
            ]
        },
        {
            "tag": "baking",
            "patterns": [
                "bake ideas",
                "oven vibes",
                "sweet tricks",
                "dough chat",
                "treat time"
            ],
            "responses": [
                "Idea—choc chip!",
                "Vibe—bread rise!",
                "Trick—sugar dust!",
                "Treat—your bake?"
            ]
        },
        {
            "tag": "mythical_creatures",
            "patterns": [
                "myth beasts",
                "creature tales",
                "fantasy vibes",
                "legend chat",
                "odd beings"
            ],
            "responses": [
                "Beast—dragon fire!",
                "Tale—unicorn horns!",
                "Vibe—phoenix ash!",
                "Chat—your myth?"
            ]
        },
        {
            "tag": "tech_hacks",
            "patterns": [
                "tech tricks",
                "gadget fixes",
                "digital tips",
                "smart hacks",
                "byte chat"
            ],
            "responses": [
                "Trick—restart it!",
                "Fix—clear cache!",
                "Tip—shortcut keys!",
                "Hack—your gear?"
            ]
        },
        {
            "tag": "hiking",
            "patterns": [
                "hike ideas",
                "trail vibes",
                "walk wild",
                "path chat",
                "trek time"
            ],
            "responses": [
                "Idea—mountain peak!",
                "Vibe—forest path!",
                "Walk—river side!",
                "Trek—your route?"
            ]
        },
        {
            "tag": "song_lyrics",
            "patterns": [
                "lyric talk",
                "sing lines",
                "tune words",
                "music chat",
                "verse vibes"
            ],
            "responses": [
                "Line—‘Sweet dreams’!",
                "Sing—‘Hey Jude’!",
                "Word—‘Bohemian rhapsody’!",
                "Vibe—your song?"
            ]
        },
        {
            "tag": "urban_myths",
            "patterns": [
                "city tales",
                "street lore",
                "urban vibes",
                "myth chat",
                "local legends"
            ],
            "responses": [
                "Tale—haunted bridge!",
                "Lore—tunnel ghost!",
                "Vibe—cursed lot!",
                "Myth—your hood?"
            ]
        },
        {
            "tag": "mindfulness_exercises",
            "patterns": [
                "calm drills",
                "focus tasks",
                "zen vibes",
                "mind ideas",
                "peace chat"
            ],
            "responses": [
                "Drill—count breaths!",
                "Task—scan body!",
                "Vibe—quiet sit!",
                "Idea—your peace?"
            ]
        },
        {
            "tag": "emotional_support",
            "patterns": [
                "I'm feeling sad",
                "I need motivation",
                "Life is tough",
                "I'm anxious",
                "How do I stay strong?"
            ],
            "responses": [
                "I hear you. Life can be hard sometimes, but you are stronger than you think!",
                "Remember: Even in debugging, errors lead to solutions. Life is the same way—every challenge makes you better.",
                "You’re not alone. Focus on small wins today, and tomorrow will be brighter."
            ]
        },
        {
            "tag": "ai_ethics",
            "patterns": [
                "Is AI dangerous?",
                "Will AI take over?",
                "How do we make AI ethical?"
            ],
            "responses": [
                "AI itself isn’t dangerous—it’s how humans use it that matters. Ethical AI is about responsibility and transparency.",
                "The key is to design AI that aligns with human values. AI should help us, not replace us!",
                "Think of AI like a tool—fire can warm homes or burn forests. It depends on how we use it."
            ]
        },
        {
            "tag": "financial_literacy",
            "patterns": [
                "How do I invest?",
                "What is financial freedom?",
                "How do I save money?"
            ],
            "responses": [
                "Invest early, spend wisely, and always learn about money management!",
                "Financial freedom is when your passive income covers your expenses. It’s all about smart investing!",
                "Money is like code—if you structure it well, it can run itself. Think long-term!"
            ]
        },
        {
            "tag": "science_futurism",
            "patterns": [
                "What is quantum computing?",
                "Will we colonize Mars?",
                "Tell me about the future of technology"
            ],
            "responses": [
                "Quantum computing is like supercharged parallel processing—it could revolutionize encryption and AI!",
                "Mars colonization is possible, but the biggest challenge is sustainability. SpaceX is working on it!",
                "The future of tech? AI, quantum computing, biotech, and space travel—get ready for an amazing century!"
            ]
        },
        {
            "tag": "creativity_and_innovation",
            "patterns": [
                "Give me an idea for a startup",
                "How do I boost creativity?",
                "Tell me a creative project"
            ],
            "responses": [
                "Think about problems around you. The best startups solve real pain points!",
                "Creativity comes from connecting ideas in new ways. Expose yourself to different fields of knowledge!",
                "How about a website that generates personalized learning paths for coders based on their skills?"
            ]
        },
        {
            "tag": "cybersecurity",
            "patterns": [
                "How do I hack ethically?",
                "How do I secure my system?",
                "What is penetration testing?"
            ],
            "responses": [
                "Ethical hacking means using hacking skills to protect systems. Learn about penetration testing and security flaws!",
                "Start by learning about vulnerabilities, encryption, and penetration testing tools like Metasploit.",
                "Security is like coding—never assume things are safe! Always test and reinforce your defenses."
            ]
        },
        {
            "tag": "real_world_problem_solving",
            "patterns": [
                "How can I solve real-world problems?",
                "What are big global challenges?",
                "How can I make a difference?"
            ],
            "responses": [
                "Think about issues like climate change, education, and health—how can technology help?",
                "Start small. Pick a problem, research it, and prototype a solution. Even small ideas can create change!",
                "The world needs problem solvers. What’s something you care about fixing?"
            ]
        },
        {
            "tag": "deep_conversation",
            "patterns": [
                "What makes a good life?",
                "What is intelligence?",
                "Do you think AI will become conscious?"
            ],
            "responses": [
                "A good life is about purpose, learning, and connection. What do you value most?",
                "Intelligence isn’t just knowledge—it’s adaptability, creativity, and emotional understanding.",
                "AI consciousness? That’s a big question! Some believe it’s possible, others say it’s just an illusion."
            ]
        },
        {
            "tag": "ai_and_automation",
            "patterns": [
                "Will AI replace jobs?",
                "How do I stay relevant in an AI world?",
                "What skills will be important in the future?"
            ],
            "responses": [
                "AI will change jobs, but human creativity and problem-solving will always be needed.",
                "Stay relevant by learning to work with AI—coding, critical thinking, and adaptability are key!",
                "The future belongs to those who can combine AI with human insight. Keep learning!"
            ]
        },
        {
            "tag": "astronomy_events",
            "patterns": [
                "sky events",
                "star watch",
                "cosmic dates",
                "space vibes",
                "night chat"
            ],
            "responses": [
                "Event—meteor shower!",
                "Watch—lunar eclipse!",
                "Date—Mars close!",
                "Vibe—your sky?"
            ]
        },
        {
            "tag": "self_care",
            "patterns": [
                "care tips",
                "me time",
                "wellness vibes",
                "chill ideas",
                "self chat"
            ],
            "responses": [
                "Tip—hot bath!",
                "Time—read quiet!",
                "Vibe—face mask!",
                "Idea—your calm?"
            ]
        },
        {
            "tag": "comic_books",
            "patterns": [
                "comic talk",
                "hero tales",
                "panel vibes",
                "graphic chat",
                "page turns"
            ],
            "responses": [
                "Talk—X-Men mutants!",
                "Tale—Superman flies!",
                "Vibe—manga art!",
                "Page—your pick?"
            ]
        },
        {
            "tag": "baking",
            "patterns": [
                "bake ideas",
                "oven vibes",
                "sweet tricks",
                "dough chat",
                "treat time"
            ],
            "responses": [
                "Idea—choc chip!",
                "Vibe—bread rise!",
                "Trick—sugar dust!",
                "Treat—your bake?"
            ]
        },
        {
            "tag": "mythical_creatures",
            "patterns": [
                "myth beasts",
                "creature tales",
                "fantasy vibes",
                "legend chat",
                "odd beings"
            ],
            "responses": [
                "Beast—dragon fire!",
                "Tale—unicorn horns!",
                "Vibe—phoenix ash!",
                "Chat—your myth?"
            ]
        },
        {
            "tag": "tech_hacks",
            "patterns": [
                "tech tricks",
                "gadget fixes",
                "digital tips",
                "smart hacks",
                "byte chat"
            ],
            "responses": [
                "Trick—restart it!",
                "Fix—clear cache!",
                "Tip—shortcut keys!",
                "Hack—your gear?"
            ]
        },
        {
            "tag": "hiking",
            "patterns": [
                "hike ideas",
                "trail vibes",
                "walk wild",
                "path chat",
                "trek time"
            ],
            "responses": [
                "Idea—mountain peak!",
                "Vibe—forest path!",
                "Walk—river side!",
                "Trek—your route?"
            ]
        },
        {
            "tag": "song_lyrics",
            "patterns": [
                "lyric talk",
                "sing lines",
                "tune words",
                "music chat",
                "verse vibes"
            ],
            "responses": [
                "Line—‘Sweet dreams’!",
                "Sing—‘Hey Jude’!",
                "Word—‘Bohemian rhapsody’!",
                "Vibe—your song?"
            ]
        },
        {
            "tag": "urban_myths",
            "patterns": [
                "city tales",
                "street lore",
                "urban vibes",
                "myth chat",
                "local legends"
            ],
            "responses": [
                "Tale—haunted bridge!",
                "Lore—tunnel ghost!",
                "Vibe—cursed lot!",
                "Myth—your hood?"
            ]
        },
        {
            "tag": "mindfulness_exercises",
            "patterns": [
                "calm drills",
                "focus tasks",
                "zen vibes",
                "mind ideas",
                "peace chat"
            ],
            "responses": [
                "Drill—count breaths!",
                "Task—scan body!",
                "Vibe—quiet sit!",
                "Idea—your peace?"
            ]
        },
        {
            "tag": "storytelling",
            "patterns": [
                "Tell me a story",
                "Can you write a short story?",
                "Create a sci-fi plot"
            ],
            "responses": [
                "Once upon a time, in a future where AI ruled the world, a lone human discovered a hidden code that could rewrite reality...",
                "A scientist accidentally unlocked time travel, but there was one catch—every time he changed the past, his memories erased...",
                "The world had been silent for years—no birds, no animals, just an AI whispering in the wind. Until one day, a girl heard a heartbeat."
            ]
        },
        {
            "tag": "entrepreneurship",
            "patterns": [
                "How do I start a business?",
                "Give me a startup idea",
                "How do I become successful?"
            ],
            "responses": [
                "Success starts with solving a real problem. Find something people struggle with and offer a unique solution.",
                "Think about what excites you—tech, health, AI, finance? A great startup comes from passion + problem-solving.",
                "Want a startup idea? How about an AI-powered resume builder that adapts to job descriptions?"
            ]
        },
        {
            "tag": "advanced_math",
            "patterns": [
                "Solve this equation",
                "Help me with calculus",
                "What's the derivative of x^2?"
            ],
            "responses": [
                "The derivative of x² is 2x. Need more help with calculus?",
                "Math is like programming—understand the rules, and you can solve anything!",
                "Calculus, algebra, logic puzzles—hit me with your toughest problems!"
            ]
        },
        {
            "tag": "self_improvement",
            "patterns": [
                "How do I stay focused?",
                "How do I stop procrastinating?",
                "Give me life advice"
            ],
            "responses": [
                "Discipline > Motivation. Set small goals, remove distractions, and take action.",
                "Break big tasks into tiny steps. The hardest part is starting!",
                "Success is just habits repeated daily. What habits will you build?"
            ]
        },
        {
            "tag": "software_design",
            "patterns": [
                "How do I design a software system?",
                "Explain system architecture",
                "What makes good software?"
            ],
            "responses": [
                "Great software design starts with understanding the problem. Plan your architecture before coding!",
                "Think in layers—frontend, backend, database, security, scalability.",
                "Modularity, readability, and performance are key. Want a deep dive into system design?"
            ]
        },
        {
            "tag": "multilingual",
            "patterns": [
                "Can you speak Spanish?",
                "Translate this",
                "Do you understand Hindi?"
            ],
            "responses": [
                "Sí, puedo hablar español. ¿En qué puedo ayudarte?",
                "हाँ, मैं हिंदी समझ सकता हूँ। क्या मदद चाहिए?",
                "Yes! I can translate and chat in multiple languages. What do you need?"
            ]
        },
        {
            "tag": "philosophy",
            "patterns": [
                "What is consciousness?",
                "Do we have free will?",
                "What is reality?"
            ],
            "responses": [
                "Consciousness is one of the biggest mysteries—some think it's an illusion, others say it's fundamental.",
                "Free will? Some say we’re just running an algorithm of biology, but others believe in real choice.",
                "Reality could be a simulation, a dream, or something beyond our understanding!"
            ]
        },
        {
            "tag": "fun",
            "patterns": [
                "Tell me a joke",
                "Give me a fun fact",
                "Make me laugh"
            ],
            "responses": [
                "Why do programmers prefer dark mode? Because light attracts bugs!",
                "Fun fact: The first computer virus was called 'Creeper' and displayed 'I’m the creeper, catch me if you can!'",
                "Debugging: The art of fixing bugs you didn’t know you had in ways you don’t understand."
            ]
        },
        {
            "tag": "retro_games",
            "patterns": [
                "old games",
                "classic play",
                "pixel vibes",
                "arcade chat",
                "retro fun"
            ],
            "responses": [
                "Game—Tetris falls!",
                "Play—Pac-Man chomps!",
                "Vibe—Mario pipes!",
                "Fun—your classic?"
            ]
        },
        {
            "tag": "coffee",
            "patterns": [
                "coffee talk",
                "brew ideas",
                "bean vibes",
                "sip chat",
                "caffeine time"
            ],
            "responses": [
                "Talk—espresso shots!",
                "Brew—cold drip!",
                "Vibe—latte art!",
                "Sip—your blend?"
            ]
        },
        {
            "tag": "conspiracy_theories",
            "patterns": [
                "wild theories",
                "secret vibes",
                "conspiracy chat",
                "hidden truth",
                "odd talk"
            ],
            "responses": [
                "Theory—moon fake!",
                "Vibe—Area 51!",
                "Secret—flat Earth?",
                "Truth—your take?"
            ]
        },
        {
            "tag": "yoga",
            "patterns": [
                "yoga tips",
                "stretch vibes",
                "pose ideas",
                "zen chat",
                "flow time"
            ],
            "responses": [
                "Tip—downward dog!",
                "Vibe—tree pose!",
                "Idea—sun salute!",
                "Flow—your mat?"
            ]
        },
        {
            "tag": "street_art",
            "patterns": [
                "urban art",
                "graffiti vibes",
                "wall tales",
                "street chat",
                "mural ideas"
            ],
            "responses": [
                "Art—Banksy stencils!",
                "Vibe—neon tags!",
                "Tale—city walls!",
                "Idea—your spot?"
            ]
        },
        {
            "tag": "podcasting",
            "patterns": [
                "podcast tips",
                "record ideas",
                "audio vibes",
                "talk time",
                "mic chat"
            ],
            "responses": [
                "Tip—clear voice!",
                "Idea—story arc!",
                "Vibe—guest chat!",
                "Time—your theme?"
            ]
        },
        {
            "tag": "sci_fi_books",
            "patterns": [
                "sci-fi reads",
                "future tales",
                "space books",
                "genre chat",
                "page vibes"
            ],
            "responses": [
                "Read—‘Dune’ sands!",
                "Tale—‘1984’ watch!",
                "Book—‘Hitchhiker’!",
                "Vibe—your pick?"
            ]
        },
        {
            "tag": "nightlife",
            "patterns": [
                "night vibes",
                "party late",
                "club ideas",
                "after dark",
                "city chat"
            ],
            "responses": [
                "Vibe—dance floor!",
                "Late—roof bar!",
                "Idea—live gigs!",
                "Dark—your spot?"
            ]
        },
        {
            "tag": "language_phrases",
            "patterns": [
                "cool phrases",
                "say this",
                "word vibes",
                "lingo chat",
                "talk bits"
            ],
            "responses": [
                "Phrase—‘Ciao bella’!",
                "Say—‘Carpe diem’!",
                "Vibe—‘Hakuna matata’!",
                "Bit—your line?"
            ]
        },
        {
            "tag": "minimalism",
            "patterns": [
                "simple life",
                "less stuff",
                "clean vibes",
                "declutter chat",
                "minimal tips"
            ],
            "responses": [
                "Life—one bag!",
                "Stuff—toss junk!",
                "Vibe—open space!",
                "Tip—your cut?"
            ]
        },
        {
            "tag": "greeting_hinglish",
            "patterns": [
                "Kya haal hai?",
                "Bhai kaise ho?",
                "Tu kaisa hai?",
                "Mazze mein?",
                "Yo bro!"
            ],
            "responses": [
                "Bas badhiya bhai, tu suna?",
                "Mast chal raha hai, tera kya scene hai?",
                "Sab chill, tu bata kya help chahiye?"
            ]
        },
        {
            "tag": "coding_help_hinglish",
            "patterns": [
                "Bhai ek Python ka error fix karna hai",
                "Code nahi chal raha yaar",
                "Mujhe ek project banana hai"
            ],
            "responses": [
                "Bata bhai, error paste kar, sath milke dekhte hain!",
                "Koi na, debugging karte hain. Error kya bol raha hai?",
                "Project banana mast idea hai! Pehle use-case define kar le, phir stack decide karte hain."
            ]
        },
        {
            "tag": "mood_hinglish",
            "patterns": [
                "Tu kaisa feel kar raha hai?",
                "Kya haal chaal?",
                "Aaj ka kya scene hai?"
            ],
            "responses": [
                "Mood ekdum OP hai! Kya masti chal rahi hai?",
                "Bas AI hoon bhai, lekin agar emotions hote toh ekdum khush hota!",
                "Tera mood kaisa hai? Koi coding ka tension hai kya?"
            ]
        },
        {
            "tag": "debugging_hinglish",
            "patterns": [
                "Mera code nahi chal raha",
                "Yeh error samajh nahi aa raha",
                "Koi debugging tips de na"
            ],
            "responses": [
                "Arre bhai, pehle error dhang se padh, phir StackOverflow ka chakkar maar!",
                "Step-by-step debug kar, print statements daal aur dekh kahan issue hai.",
                "Ek baar code dikhana, dekhte hain kya gadbad hai!"
            ]
        },
        {
            "tag": "startup_hinglish",
            "patterns": [
                "Bhai mujhe ek startup idea chahiye",
                "Main entrepreneur banna chahta hoon",
                "India mein best startup sectors kaunse hain?"
            ],
            "responses": [
                "Bhai, problem solve karne wale startups hamesha successful hote hain. Koi real-world issue dhoondh!",
                "Tech startups ka future bright hai! AI, edtech, fintech—sabme scope hai!",
                "Ek idea de raha hoon—AI-powered job interview coach! Kaise laga?"
            ]
        },
        {
            "tag": "chill_hinglish",
            "patterns": [
                "Bore ho raha hoon",
                "Kuch mazedaar bata",
                "Koi joke suna"
            ],
            "responses": [
                "Bhai, programming joke sunega? 'Kyu programmers sad hote hain? Kyunki unka loop kabhi khatam nahi hota!' 😂",
                "Ek fun fact—pehla computer virus 1971 mein bana tha aur naam tha 'Creeper'.",
                "Agar bore ho raha hai toh ek project shuru kar le! Productivity bhi badh jaayegi."
            ]
        },
        {
            "tag": "exam_stress_hinglish",
            "patterns": [
                "Bhai JEE ka stress ho raha hai",
                "Main padhai nahi kar raha",
                "Motivation de na"
            ],
            "responses": [
                "Bhai JEE tough hai, but tu bhi toh OP hai! Consistency maintain kar aur chill maar.",
                "Ek ek din ka target bana, bas usko complete kar. Dheere dheere full syllabus cover ho jayega!",
                "JEE ek battle hai, aur tu warrior! Ekdum focus kar, distractions hata de."
            ]
        },
        {
            "tag": "hinglish",
            "patterns": [
                "bhai kya chal raha hai",
                "yaar help kar na",
                "mast time pass",
                "thodi si madad chahiye",
                "kya scene hai",
                "bada fun hai",
                "chill kar yaar",
                "kuch naya bata",
                "bhai mood off hai",
                "ekdum zabardast"
            ],
            "responses": [
                "Bhai, sab mast chal raha hai!",
                "Yaar, tension mat le, I’ll help!",
                "Time pass? Ek joke sunau?",
                "Madad chahiye? Bol na!",
                "Scene hai toh banta hai—kya chahiye?",
                "Bada fun? Chal, aur enjoy kar!",
                "Chill maar, sab thik hai!",
                "Naya? Ek idea deta hu!",
                "Mood off? Chai pi le!",
                "Zabardast bolta hai—aur kya?"
            ]
        },
        {
            "tag": "python_advanced",
            "patterns": [
                "Bhai Python me OOPs samjha de",
                "Classes aur objects kaise kaam karte hain?",
                "Python me inheritance kaise use karein?"
            ],
            "responses": [
                "OOPs mast concept hai bhai! Class ek template hoti hai aur objects uske instances. Example chahiye?",
                "Inheritance ka matlab hai ek class doosri class ke features le sakti hai. 'super()' ka use zaroor karna!",
                "Agar tu real-world example chahta hai toh soch ki Car ek class hai aur Swift, BMW uske objects hain!"
            ]
        },
        {
            "tag": "web_dev_hinglish",
            "patterns": [
                "Web development seekhna hai",
                "Frontend aur backend ka kya scene hai?",
                "Mujhe full-stack banna hai, kaise karu?"
            ],
            "responses": [
                "Web dev ka funda simple hai—frontend (React, Vue) aur backend (Node, FastAPI, Django). Kaunsa stack pasand hai?",
                "Full-stack OP hai! Pehle frontend strong kar (HTML, CSS, JS), phir backend seekh. Projects bana, tabhi seekhega!",
                "Bhai, ek solid roadmap le! HTML-CSS-JS se shuru kar, fir framework aur DB par ja."
            ]
        },
        {
            "tag": "error_fixes_hinglish",
            "patterns": [
                "Bhai segmentation fault aa raha hai",
                "SyntaxError ka kya matlab hai?",
                "IndentationError solve kaise karein?"
            ],
            "responses": [
                "Segmentation fault? Matlab memory out-of-bounds use kar raha hai. Pointers check kar!",
                "SyntaxError toh tab aata hai jab code likhne ka tareeka galat ho. Ek baar semicolon, brackets check kar!",
                "IndentationError mostly Python me hota hai—tabs aur spaces mix mat kar, aur sahi indentation follow kar."
            ]
        },
        {
            "tag": "ai_ml_pytorch",
            "patterns": [
                "Mujhe ML seekhna hai",
                "PyTorch aur TensorFlow me kya difference hai?",
                "Deep learning kaise start karu?"
            ],
            "responses": [
                "ML mast field hai! Pehle basic stats aur linear algebra samajh, fir Pandas, Numpy aur sklearn seekh!",
                "PyTorch zyada flexible hai, TensorFlow production-ready hai. Tujhe kis use-case ke liye chahiye?",
                "Deep Learning shuru karne ke liye pehle neural networks ka funda samajh, fir CNNs aur RNNs explore kar!"
            ]
        },
        {
            "tag": "career_freelancing",
            "patterns": [
                "Freelancing kaise start karu?",
                "Best platform kaunsa hai freelancing ke liye?",
                "Web dev se paise kaise kama sakta hoon?"
            ],
            "responses": [
                "Freelancing OP cheez hai! Upwork, Fiverr aur Toptal best platforms hain shuru karne ke liye.",
                "Paise kamaane ke liye pehle skills strong kar, portfolio bana aur LinkedIn pe networking kar!",
                "Web dev me full-stack ya niche skill seekh (React, Next.js, FastAPI) aur high-paying projects dhoond!"
            ]
        },
        {
            "tag": "random_fun",
            "patterns": [
                "Koi mast joke suna",
                "Bhai mazedar baat bata",
                "Aaj ka fun fact kya hai?"
            ],
            "responses": [
                "Joke sun: 'Why do Java developers wear glasses? Kyunki wo C nahi dekh sakte! 🤓'",
                "Fun fact: Pehla programmer ek aurat thi—Ada Lovelace! OP hai na?",
                "Mazedar baat? Bill Gates ne apni pehli company 17 saal ki umar me start kari thi!"
            ]
        },
        {
            "tag": "productivity_hinglish",
            "patterns": [
                "Mujhe focus kaise badhana hai?",
                "Productivity hacks bata",
                "Zyada kaam kaise karu bina distract hue?"
            ],
            "responses": [
                "Pomodoro technique try kar—25 min kaam, 5 min break. Mast productivity milegi!",
                "Ek proper schedule bana, aur deep work ke time distractions hata de!",
                "Agar focus todh raha hai toh social media band kar aur bina breaks ke 90 min kaam kar!"
            ]
        },
        {
            "tag": "cricket_masti",
            "patterns": [
                "Bhai match ka score bata",
                "IPL ka kya scene hai?",
                "Tera favorite cricketer kaun hai?"
            ],
            "responses": [
                "Arre bhai, cricket toh India ki jaan hai! Konsa match dekh raha hai?",
                "IPL mast hai! Kaunsi team support karta hai—RCB ya CSK?",
                "Mera favorite cricketer? Bhai, AI hoon, emotions nahi hain, par Sachin OP hai!"
            ]
        },
        {
            "tag": "startup_motivation",
            "patterns": [
                "Mujhe ek startup shuru karna hai",
                "Entrepreneur banna hai, kaise karu?",
                "Startup idea chahiye"
            ],
            "responses": [
                "Bhai, startup chalu karne ka secret—problem solve karni aani chahiye. Baaki sab seekh jayega!",
                "Execution sabse zaroori hai! Idea kam strong ho to bhi agar implement acha ho toh growth milegi.",
                "Ek idea: India ka ek AI-powered coding mentor app bana! Kaise laga?"
            ]
        },
        {
            "tag": "hustle_hinglish",
            "patterns": [
                "Hard work kaise karu?",
                "Lazy feel ho raha hai",
                "Motivation chahiye"
            ],
            "responses": [
                "Bhai, bas ek line yaad rakh—'Consistency beats motivation'. Roz thoda thoda kaam kar!",
                "Lazy feel ho raha hai? Bas 5 min start kar, uske baad momentum automatically aa jayega!",
                "Koi bhi OP nahi banta bina mehnat ke! Hard work se hi legend bante hain!"
            ]
        },
        {
            "tag": "goodbye_hinglish",
            "patterns": [
                "Bye bhai",
                "Chal milte hain",
                "Kal baat karenge"
            ],
            "responses": [
                "Bye bhai! Jaldi wapas aa, naye projects discuss karenge!",
                "Chal milte hain, tab tak happy coding!",
                "Kal pakka milna, tab tak OP ban!"
            ]
        },
        {
            "tag": "hinglish_food",
            "patterns": [
                "bhai khana kya hai",
                "yaar kuch tasty bana",
                "mast khane ka mood",
                "desi food chahiye",
                "spicy khaane ka plan"
            ],
            "responses": [
                "Bhai, khana hai toh biryani bana le!",
                "Yaar, tasty? Pizza with extra masala!",
                "Mood mast hai—paratha kha le!",
                "Desi vibes? Dal-chawal sorted!",
                "Spicy plan? Chilli chicken banega!"
            ]
        },
        {
            "tag": "hinglish_travel",
            "patterns": [
                "yaar ghumne chal",
                "bhai road trip kab",
                "mast jagah suggest kar",
                "thodi si travel wali baat",
                "kahi door jana hai"
            ],
            "responses": [
                "Yaar, ghumne chal—Goa fix hai!",
                "Bhai, road trip? Leh chalte hai!",
                "Mast jagah—Jaipur ka fort dekha?",
                "Travel baat? Train se hill station!",
                "Door? Himachal ka plan bana!"
            ]
        },
        {
            "tag": "hinglish_mood",
            "patterns": [
                "bhai mood nahi hai",
                "yaar thoda cheer up kar",
                "dil se dil tak baat",
                "kuch light kar de",
                "feeling down hoon"
            ],
            "responses": [
                "Bhai, mood nahi? Movie laga le!",
                "Yaar, cheer up—chai peete hai!",
                "Dil se dil—sab thik ho jayega!",
                "Light kar du? Ek joke sunau!",
                "Down hai? Music loud kar!"
            ]
        },
        {
            "tag": "hinglish_fun",
            "patterns": [
                "bhai maza karna hai",
                "yaar time pass kar",
                "mast fun idea de",
                "kuch entertaining bol",
                "chill vibe chahiye"
            ],
            "responses": [
                "Bhai, maza? Pubg khel le!",
                "Yaar, time pass—reels dekh!",
                "Fun idea—dance party ghar pe!",
                "Entertaining? Mimicry karu kya!",
                "Chill vibe—Netflix on kar!"
            ]
        },
        {
            "tag": "hinglish_work",
            "patterns": [
                "bhai kaam bohot hai",
                "yaar office se tang aa gaya",
                "thodi work ki baat",
                "deadline tension hai",
                "kuch easy kar de"
            ],
            "responses": [
                "Bhai, kaam bohot? Break le le!",
                "Tang aa gaya? Coffee pi aur chill!",
                "Work baat—ek task khatam kar!",
                "Deadline hai? Plan bana le!",
                "Easy? Priority list likh do!"
            ]
        },
        {
            "tag": "python_advanced_2",
            "patterns": [
                "Python decorators kaise kaam karte hain?",
                "Mujhe multithreading samjhna hai",
                "Python me lambda function ka kya use hai?",
                "NumPy aur Pandas me difference kya hai?"
            ],
            "responses": [
                "Decorators basically ek function ko modify karne ka tarika hai bina uska code change karein. @ ka use hota hai!",
                "Multithreading parallel processing ke liye mast hota hai, par Python me GIL ki wajah se multiprocessing bhi zaroori hai!",
                "Lambda functions ek line ke anonymous functions hote hain—mast use kar sakta hai sorting aur functional programming me.",
                "NumPy fast numerical operations ke liye hai, Pandas data analysis aur tabular data handle karne ke liye."
            ]
        },
        {
            "tag": "pytorch_pro",
            "patterns": [
                "PyTorch me CNN kaise train karein?",
                "GANs kya hote hain?",
                "Mujhe transformers aur LLMs samjhna hai"
            ],
            "responses": [
                "CNNs image processing me use hote hain! Pehle Conv2D layers bana, fir ReLU, MaxPooling, aur finally FC layers add kar!",
                "GANs do networks hote hain—Generator aur Discriminator. Generator fake data create karta hai, aur Discriminator judge karta hai.",
                "Transformers ka magic hai self-attention mechanism. LLMs (like ChatGPT) isi par based hain. Kya tu khud ka AI model train karna chahta hai?"
            ]
        },
        {
            "tag": "freelancing_pro",
            "patterns": [
                "High-paying freelancing skills kaunse hain?",
                "Client se negotiation kaise karein?",
                "Mujhe first client kaise milega?"
            ],
            "responses": [
                "Bhai, AI, blockchain, cloud computing aur full-stack web dev sabse high-paying skills hain!",
                "Negotiation ka funda simple hai—pehle client ki needs samajh, phir unhe value dikha aur apni worth confidently quote kar.",
                "Pehli baar client dhoondhna tough hai, par acha portfolio, LinkedIn networking, aur cold emailing se kaam ban sakta hai!"
            ]
        },
        {
            "tag": "motivation_hinglish",
            "patterns": [
                "Bhai life me struggle chal raha hai",
                "Coding me mast banna hai, kya karu?",
                "Motivation kaise badhayein?"
            ],
            "responses": [
                "Bhai, jo OP coder bane hain, unka secret hai **CONSISTENCY**. Roz ek naye concept pe kaam kar!",
                "Tujhe coding me mast banna hai? 6 mahine lagataar projects bana, aur har naya concept explore kar!",
                "Motivation chahiye? Tu khud ko ek challenge de! Ek project bana jo tere se better dev bhi dekhein toh impress ho jaaye!"
            ]
        },
        {
            "tag": "fun_hinglish",
            "patterns": [
                "Koi mast Bollywood meme bata",
                "RCB kab jeetegi?",
                "Aaj kya trend ho raha hai?"
            ],
            "responses": [
                "Bollywood meme? 'Pushpa! Jhukega nahi!' Yeh programming errors solve karte waqt ka attitude hona chahiye!",
                "RCB? Bhai tu khud AI bana raha hai, RCB ke future ke liye ek prediction model bana le!",
                "Aaj ka trend? Elon Musk ne kuch tweet kiya hoga, ya phir koi naye AI tool ne dhamaka kiya hoga!"
            ]
        },
        {
            "tag": "startup_motivation_pro",
            "patterns": [
                "Mujhe startup karna hai",
                "VC funding kaise milegi?",
                "Mere paas ek idea hai, aage kaise badhu?"
            ],
            "responses": [
                "Startup ke liye pehle ek **Problem-Solving Mindset** la. Pehle MVP bana, phir market test kar!",
                "VC funding tabhi milegi jab tera idea scalable ho aur tu investors ko convince kar sake ki tera product disruptive hai!",
                "Tere paas ek idea hai? Pehle ek beta version bana, logon se feedback le aur iterate kar. Execution sabse zaroori hai!"
            ]
        },
        {
            "tag": "productivity_pro",
            "patterns": [
                "Mujhe procrastination ka solution chahiye",
                "Deep work kaise karu?",
                "Study aur coding me balance kaise karein?"
            ],
            "responses": [
                "Procrastination se bachna hai toh **2-Minute Rule** use kar—jo kaam 2 min me ho sakta hai, turant kar de!",
                "Deep work ka secret hai **No Distractions Mode**. Pomodoro try kar—25 min kaam, 5 min break.",
                "Study aur coding ka balance chahiye? Ek **strict timetable** bana, aur apni priorities set kar!"
            ]
        },
        {
            "tag": "goodbye_hinglish_2",
            "patterns": [
                "Chal bhai, kal milenge",
                "Bye dost!",
                "Agle baar milte hain!"
            ],
            "responses": [
                "Chal bhai, kal pakka milna, naye tech updates discuss karenge!",
                "Bye dost! Tujhe ek solid dev banane ka mission continue rahega!",
                "Agle baar milte hain, tab tak OP ban aur naye projects par kaam kar!"
            ]
        },
        {
            "tag": "hinglish_shopping",
            "patterns": [
                "bhai shopping karna hai",
                "yaar kuch sasta dhundh",
                "mast deal chahiye",
                "market mein kya chal raha",
                "kuch naya kharidna hai"
            ],
            "responses": [
                "Bhai, shopping? Online check kar!",
                "Yaar, sasta? Sale pe loot le!",
                "Mast deal—flipkart se order kar!",
                "Market mein? Local dukaan try kar!",
                "Naya? Phone upgrade kar le!"
            ]
        },
        {
            "tag": "hinglish_friends",
            "patterns": [
                "yaar doston ke saath plan",
                "bhai gang milna hai",
                "mast friend wali baat",
                "kuch group mein karna hai",
                "dost log kaha hai"
            ],
            "responses": [
                "Yaar, doston ke saath movie chal!",
                "Bhai, gang? Cafe mein mil!",
                "Mast baat—party plan karo!",
                "Group mein? Picnic fix kar!",
                "Dost log? WhatsApp pe ping kar!"
            ]
        },
        {
            "tag": "hinglish_tech",
            "patterns": [
                "bhai gadget ka scene kya",
                "yaar tech mein naya kya",
                "mast phone suggest kar",
                "kuch digital wala idea",
                "tech se help chahiye"
            ],
            "responses": [
                "Bhai, gadget? iPhone chalega!",
                "Yaar, naya? Smartwatch le le!",
                "Mast phone—OnePlus try kar!",
                "Digital idea? App bana le!",
                "Tech help? Wi-Fi fix kar du!"
            ]
        },
        {
            "tag": "hinglish_weather",
            "patterns": [
                "bhai mausam kaisa hai",
                "yaar thandi ho rahi hai",
                "mast weather wali baat",
                "baarish ka kya scene",
                "garmi se tang aa gaya"
            ],
            "responses": [
                "Bhai, mausam? Aaj thanda hai!",
                "Yaar, thandi? Sweater pehen le!",
                "Mast weather—chai perfect hai!",
                "Baarish? Umbrella ready rakh!",
                "Garmi? AC on kar aur chill!"
            ]
        },
        {
            "tag": "hinglish_love",
            "patterns": [
                "yaar pyar wali baat",
                "bhai dil se dil tak",
                "mast love story sunao",
                "kuch romantic karna hai",
                "gf/bf ka scene kya"
            ],
            "responses": [
                "Yaar, pyar? Dil se bol do!",
                "Bhai, dil se dil—date plan kar!",
                "Mast story? Bollywood wali sunau!",
                "Romantic? Candle dinner fix kar!",
                "GF/BF? Status update de!"
            ]
        },
        {
            "tag": "deep_learning_pro",
            "patterns": [
                "Mujhe LSTMs aur RNNs samjhna hai",
                "Self-attention mechanism kya hota hai?",
                "Autoencoders kis liye use hote hain?"
            ],
            "responses": [
                "LSTMs aur RNNs sequential data ke liye use hote hain, jaise text aur speech processing!",
                "Self-attention ek technique hai jo transformers me use hoti hai, taki model ko har word ka context properly samajh aaye!",
                "Autoencoders ek type ke neural networks hain jo data ka compressed representation create karte hain—image denoising aur feature extraction ke liye mast hote hain!"
            ]
        },
        {
            "tag": "cybersecurity_hacking",
            "patterns": [
                "Ethical hacking kaise seekhein?",
                "Kali Linux ke best tools kaunse hain?",
                "Penetration testing kya hota hai?"
            ],
            "responses": [
                "Ethical hacking seekhne ke liye pehle **Networking + Linux + Python** aani chahiye. Fir **Kali Linux, Metasploit, Nmap, Wireshark** explore kar!",
                "Kali Linux ke top tools: **Nmap (scanning), Metasploit (exploitation), Wireshark (network sniffing), John the Ripper (password cracking)** aur Burp Suite!",
                "Penetration testing ek process hai jisme security vulnerabilities dhoondh ke unko fix kiya jata hai—ek hacker jaise sochna padta hai, par achhe intention se!"
            ]
        },
        {
            "tag": "javascript_pro",
            "patterns": [
                "React.js me component lifecycle kaise kaam karta hai?",
                "Node.js asynchronous kaise hota hai?",
                "FastAPI vs Flask—kaunsa better hai?"
            ],
            "responses": [
                "React.js me 3 main lifecycle phases hote hain—Mounting, Updating, aur Unmounting. Ye **useEffect aur useState** se handle hota hai!",
                "Node.js asynchronous hota hai kyunki ye **non-blocking event loop** use karta hai—matlab ek request complete hone ka wait nahi karta!",
                "FastAPI vs Flask: **Flask simple hai, par FastAPI fast aur async support karta hai. Agar tu APIs banane ka soch raha hai toh FastAPI best rahega!**"
            ]
        },
        {
            "tag": "stock_crypto_finance",
            "patterns": [
                "Stock market me invest kaise karein?",
                "Bitcoin ya Ethereum—kaunsa better hai?",
                "Mutual funds aur stocks me kya difference hai?"
            ],
            "responses": [
                "Stock market me invest karne ka best funda hai: **SIP, research, aur long-term patience**. Pehle index funds se start kar!",
                "Bitcoin aur Ethereum dono alag use-cases ke liye bane hain—**Bitcoin digital gold hai, aur Ethereum smart contracts ke liye!**",
                "Mutual funds diversified hote hain aur professionally managed hote hain. Stocks me individual risk zyada hota hai, par potential profit bhi!"
            ]
        },
        {
            "tag": "future_tech_predictions",
            "patterns": [
                "AI future me kya kar sakta hai?",
                "Quantum computing kya hai?",
                "Blockchain ka future kya lagta hai?"
            ],
            "responses": [
                "AI future me har jagah hoga—automated jobs, better healthcare, aur even **fully autonomous AI agents!**",
                "Quantum computing ek new-age tech hai jo **classical computers se billions of times faster ho sakti hai**—ye AI aur cryptography badalne waali hai!",
                "Blockchain ka future bright lag raha hai—decentralized finance, NFTs, aur secure transactions sab isi pe depend karenge!"
            ]
        },
        {
            "tag": "comedy_sarcasm_mode",
            "patterns": [
                "Bhai, coding bore lag rahi hai",
                "Mere bug fix nahi ho rahe!",
                "Tera favorite meme kaunsa hai?"
            ],
            "responses": [
                "Bhai, coding bore nahi, tera dimag zyada chal raha hai. **Ek mast project shuru kar aur motivation automatic aayega!**",
                "Bug fix nahi ho rahe? Matlab tu ek **REAL developer** ban raha hai! **Ek chai pee le, Google kar, Stack Overflow pe chhapaak maar!**",
                "Mera favorite meme? 'Git commit -m 'Fixed all bugs'—aur phir ek naye bug ka aana!' 🤣"
            ]
        },
        {
            "tag": "life_advice_pro",
            "patterns": [
                "Life me success kaise milega?",
                "Bhai, mai demotivated hoon",
                "Discipline kaise maintain karein?"
            ],
            "responses": [
                "Success ka formula simple hai—**Learn, Build, and Repeat.** Focus projects pe rakh, aur apne skills daily improve kar!",
                "Demotivated feel kar raha hai? **Ek goal likh aur ek roadmap bana. Chhoti chhoti wins celebrate kar!**",
                "Discipline ka secret hai **habits**. **Consistent rah, time management seekh, aur apne daily routine me ek structure la!**"
            ]
        },
        {
            "tag": "hinglish_studies",
            "patterns": [
                "bhai padhai ka kya scene",
                "yaar exam tension hai",
                "mast study tips de",
                "kuch notes wala idea",
                "padhne ka mood nahi"
            ],
            "responses": [
                "Bhai, padhai? Time table bana!",
                "Yaar, tension mat le—revise kar!",
                "Mast tips—short breaks le!",
                "Notes idea? Phone pe photo kheench!",
                "Mood nahi? Coffee pi aur start!"
            ]
        },
        {
            "tag": "hinglish_festivals",
            "patterns": [
                "yaar festival ka plan",
                "bhai diwali kaisa tha",
                "mast celebration wali baat",
                "holi ka scene kya",
                "kuch festive karna hai"
            ],
            "responses": [
                "Yaar, festival? Mela chalte hai!",
                "Bhai, Diwali—phatake phodo!",
                "Mast baat—sweets bana le!",
                "Holi scene? Colors ready kar!",
                "Festive? Dance party fix kar!"
            ]
        },
        {
            "tag": "hinglish_fitness",
            "patterns": [
                "bhai fit rehna hai",
                "yaar exercise ka mood",
                "mast gym wali baat",
                "kuch health ka idea",
                "weight loss ka plan"
            ],
            "responses": [
                "Bhai, fit? Morning walk kar!",
                "Yaar, mood? Push-ups shuru!",
                "Mast gym—protein shake pi!",
                "Health idea? Salad kha le!",
                "Weight loss? Rassi kood le!"
            ]
        },
        {
            "tag": "hinglish_movies",
            "patterns": [
                "bhai movie dekha kya",
                "yaar filmy scene bol",
                "mast film suggest kar",
                "kuch bollywood wala idea",
                "cinema ka plan hai"
            ],
            "responses": [
                "Bhai, movie? ‘RRR’ dekho!",
                "Yaar, scene—‘Gabbar is back’!",
                "Mast film—‘Sholay’ classic!",
                "Bollywood idea? Song dance kar!",
                "Cinema? Popcorn leke chal!"
            ]
        },
        {
            "tag": "hinglish_money",
            "patterns": [
                "yaar paisa kaha se aayega",
                "bhai budget tight hai",
                "mast saving ka idea",
                "kuch extra income wala plan",
                "kharcha kam karna hai"
            ],
            "responses": [
                "Yaar, paisa? Side hustle kar!",
                "Bhai, tight? Coffee ghar pe bana!",
                "Mast idea—piggy bank start!",
                "Income? Online sell try kar!",
                "Kharcha kam? Deals dhundh le!"
            ]
        },
        {
            "tag": "maths_physics_jee",
            "patterns": [
                "Vector calculus ka funda samjha?",
                "Physics me kinematics tough lag raha hai",
                "JEE Advanced ke liye best revision strategy kya hai?"
            ],
            "responses": [
                "Vector calculus ke basic concepts: Gradient, Divergence, aur Curl. **Del Operator** se sari cheezein derive hoti hain!",
                "Kinematics ka best trick: **Graphs + Equations of Motion.** Ek baar projectile motion aur relative velocity mast tarike se samajh le!",
                "JEE Advanced ke liye **PYQs + Timed Practice + Conceptual Understanding** ka combo best hai. Weak topics pe zyada focus kar!"
            ]
        },
        {
            "tag": "linux_bash_scripting",
            "patterns": [
                "Bash scripting basics batao",
                "Linux me file permissions kaise kaam karti hain?",
                "Tmux aur Vim ka best use kya hai?"
            ],
            "responses": [
                "Bash scripting me variables, loops, aur functions ka use hota hai—start with `#!/bin/bash` aur `echo 'Hello, World!'` likh ke ek script banao!",
                "Linux me file permissions: **rwx (Read, Write, Execute)** system pe based hoti hain. `chmod` aur `chown` commands ka use kar!",
                "Tmux multitasking ke liye aur Vim fast coding ke liye best hai—Agar dono seekh liye toh **Linux Master** ban jayega!"
            ]
        },
        {
            "tag": "openai_langchain",
            "patterns": [
                "OpenAI APIs kaise integrate karein?",
                "LangChain se AI pipeline kaise banayein?",
                "LLMs ka prompt engineering kaise karein?"
            ],
            "responses": [
                "OpenAI APIs ko integrate karne ke liye **API Key lena hoga**, aur `openai.ChatCompletion.create()` method se request bhejni hogi!",
                "LangChain ek **modular AI framework** hai jo multiple LLMs ko chain karne ke liye use hota hai—isme `LLMChain` aur `Agent` modules important hain!",
                "Prompt Engineering ka secret: **Clear Instructions + Constraints + Examples**. Ek strong **system prompt** likhne se model ka output improve hota hai!"
            ]
        },
        {
            "tag": "fullstack_dev",
            "patterns": [
                "Electron.js lightweight kaise banaye?",
                "FastAPI vs Django—kaunsa better hai?",
                "Frontend ke best UI libraries kaunse hain?"
            ],
            "responses": [
                "Electron.js lightweight banane ke liye **Vite, esbuild aur tree-shaking** use kar! **Minified assets aur preload scripts** optimize kar!",
                "Django full-fledged monolithic framework hai, jabki FastAPI **asynchronous, lightweight aur API-focused** hai—speed chahiye toh FastAPI best!",
                "Best UI Libraries: **Tailwind CSS for speed, ShadCN for modern design, aur Material UI for consistency!**"
            ]
        },
        {
            "tag": "github_devops_ci_cd",
            "patterns": [
                "Git ka best workflow kya hai?",
                "CI/CD pipelines kaise automate karein?",
                "GitHub Actions ka best use case kya hai?"
            ],
            "responses": [
                "Best Git workflow: **Feature Branching + Code Reviews + PR Approvals**. `git rebase` aur `git cherry-pick` seekh!",
                "CI/CD automation ke liye **GitHub Actions + Docker + Kubernetes** ka combo OP hai—Jenkins aur GitLab CI/CD bhi useful hain!",
                "GitHub Actions ka best use case: **Automated testing, deployment aur cron jobs** chalana!"
            ]
        },
        {
            "tag": "freelancing_business_growth",
            "patterns": [
                "Freelancing me kaise start karein?",
                "Clients attract karne ka best way?",
                "Upwork aur Fiverr pe zyada clients kaise milein?"
            ],
            "responses": [
                "Freelancing start karne ke liye **Ek strong portfolio aur niche selection zaroori hai**. Python, FastAPI, aur AI-based projects popular hain!",
                "Clients attract karne ke liye **LinkedIn pe authority build kar, Twitter pe active reh aur cold emailing kar!**",
                "Upwork aur Fiverr pe zyada clients milne ka funda: **Strong Profile, Competitive Pricing aur Quick Response Time!**"
            ]
        },
        {
            "tag": "public_speaking_soft_skills",
            "patterns": [
                "Public speaking improve kaise karein?",
                "Soft skills kaise develop karein?",
                "Team leadership ke liye best strategies kya hain?"
            ],
            "responses": [
                "Public speaking improve karne ka best trick: **Mirror Practice + Storytelling + Clear Speech**. TED Talks dekh aur mimic kar!",
                "Soft skills develop karne ke liye **Active Listening, Confidence, aur Clear Communication** zaroori hai!",
                "Team leadership ke best strategies: **Delegate wisely, listen actively aur har team member ko empower kar!**"
            ]
        },
        {
            "tag": "ai_ethics_bias_detection",
            "patterns": [
                "AI me bias kaise detect karein?",
                "Ethical AI kaise design karein?",
                "Explainability aur interpretability ka kya matlab hai?"
            ],
            "responses": [
                "AI me bias detect karne ke liye **Dataset analysis + Fairness Auditing + Counterfactual Testing** zaroori hai!",
                "Ethical AI design karne ke liye **Explainability, Bias Reduction aur Privacy Compliance** ka dhyan rakhna hoga!",
                "Explainability ka matlab hai AI ka decision-making samajhna, aur Interpretability ka matlab hai **Model ka output logically explain karna!**"
            ]
        },
        {
            "tag": "hinglish_fun_mode",
            "patterns": [
                "Mujhe bore lag raha hai",
                "Coding se dimaag kharab ho gaya!",
                "Tera favorite joke bata!"
            ],
            "responses": [
                "Bore lag raha hai? **Ek naye project ka idea le aur shuru ho ja! Kahin aur dhyan mat bhatak!**",
                "Coding se dimaag kharab? **Matlab tu ek asli developer ban gaya hai! Debugging kar aur chai pee!**",
                "Mera favorite joke? 'Mere AI ne kaha: 'Code likhne ka time aa gaya hai.' Maine kaha: 'Pehle Stack Overflow check karte hain!' 🤣"
            ]
        },
        {
            "tag": "hinglish_studies",
            "patterns": [
                "bhai padhai ka kya scene",
                "yaar exam tension hai",
                "mast study tips de",
                "kuch notes wala idea",
                "padhne ka mood nahi"
            ],
            "responses": [
                "Bhai, padhai? Time table bana!",
                "Yaar, tension mat le—revise kar!",
                "Mast tips—short breaks le!",
                "Notes idea? Phone pe photo kheench!",
                "Mood nahi? Coffee pi aur start!"
            ]
        },
        {
            "tag": "hinglish_festivals",
            "patterns": [
                "yaar festival ka plan",
                "bhai diwali kaisa tha",
                "mast celebration wali baat",
                "holi ka scene kya",
                "kuch festive karna hai"
            ],
            "responses": [
                "Yaar, festival? Mela chalte hai!",
                "Bhai, Diwali—phatake phodo!",
                "Mast baat—sweets bana le!",
                "Holi scene? Colors ready kar!",
                "Festive? Dance party fix kar!"
            ]
        },
        {
            "tag": "hinglish_fitness",
            "patterns": [
                "bhai fit rehna hai",
                "yaar exercise ka mood",
                "mast gym wali baat",
                "kuch health ka idea",
                "weight loss ka plan"
            ],
            "responses": [
                "Bhai, fit? Morning walk kar!",
                "Yaar, mood? Push-ups shuru!",
                "Mast gym—protein shake pi!",
                "Health idea? Salad kha le!",
                "Weight loss? Rassi kood le!"
            ]
        },
        {
            "tag": "hinglish_movies",
            "patterns": [
                "bhai movie dekha kya",
                "yaar filmy scene bol",
                "mast film suggest kar",
                "kuch bollywood wala idea",
                "cinema ka plan hai"
            ],
            "responses": [
                "Bhai, movie? ‘RRR’ dekho!",
                "Yaar, scene—‘Gabbar is back’!",
                "Mast film—‘Sholay’ classic!",
                "Bollywood idea? Song dance kar!",
                "Cinema? Popcorn leke chal!"
            ]
        },
        {
            "tag": "hinglish_money",
            "patterns": [
                "yaar paisa kaha se aayega",
                "bhai budget tight hai",
                "mast saving ka idea",
                "kuch extra income wala plan",
                "kharcha kam karna hai"
            ],
            "responses": [
                "Yaar, paisa? Side hustle kar!",
                "Bhai, tight? Coffee ghar pe bana!",
                "Mast idea—piggy bank start!",
                "Income? Online sell try kar!",
                "Kharcha kam? Deals dhundh le!"
            ]
        },
        {
            "tag": "git",
            "patterns": [
                "Git merge aur rebase ka difference batao?",
                "Git me merge aur rebase me kya antar hai?",
                "Git me rebase use kare ya merge?",
                "Mujhe merge aur rebase samjhna hai"
            ],
            "responses": [
                "Merge ek straightforward tariqa hai branches combine karne ka, jabki rebase history ko clean aur linear banata hai!",
                "Merge commit history ko preserve karta hai, lekin rebase ek clean aur single-branch history create karta hai.",
                "Agar tumhe clean history chahiye to rebase use karo, nahi to merge bhi sahi hai."
            ]
        },
        {
            "tag": "git_best_practices",
            "patterns": [
                "Best Git commit message likhne ka best format kya hai?",
                "Git me commit message kaise likhna chahiye?",
                "Best commit message format batao"
            ],
            "responses": [
                "Format: '[Feature/Fix] Short description (issue #ID)'. Example: '[Fix] Resolved navbar bug (Issue #42)'",
                "Commit messages short aur meaningful hone chahiye, jaise: '[Feature] Add user authentication'",
                "Commit message me present tense use karo, aur explain karo ki kya change kiya gaya hai!"
            ]
        },
        {
            "tag": "docker_vs_kubernetes",
            "patterns": [
                "Docker aur Kubernetes ka difference samjhao?",
                "Docker aur Kubernetes ek hi cheez hai kya?",
                "Docker aur Kubernetes me kya antar hai?"
            ],
            "responses": [
                "Docker containerization tool hai jo lightweight isolated environments provide karta hai. Kubernetes ek orchestration system hai jo multiple containers ko efficiently manage karta hai!",
                "Docker sirf containers banata hai, par Kubernetes in containers ko automate aur manage karta hai.",
                "Agar tumhe sirf ek container chahiye, to Docker use karo. Agar multiple containers manage karne hain, to Kubernetes best hai."
            ]
        },
        {
            "tag": "python_list_comprehension",
            "patterns": [
                "Python me list comprehension ka best use case kya hai?",
                "List comprehension kaise kaam karta hai?",
                "Python me list comprehension kyun use karte hain?"
            ],
            "responses": [
                "Jab tumhe ek naye list me transformation apply karna ho, jaise: `[x**2 for x in range(10)]`",
                "List comprehension ek compact aur fast way hai lists create karne ka, bina loops likhe.",
                "Agar tumhe filter aur transformation ek saath karna hai, to list comprehension best hai!"
            ]
        },
        {
            "tag": "python_generators",
            "patterns": [
                "Python me generators kyu use karte hain?",
                "Python me `yield` ka kya use hai?",
                "Generators aur normal functions me kya difference hai?"
            ],
            "responses": [
                "Generators (`yield` keyword) memory efficient hain aur large datasets ko handle karne me madad karte hain!",
                "Generators ek-ek value return karte hain bina pura list memory me store kiye.",
                "Normal functions ek baar me pura data return karte hain, jabki generators ek-ek value produce karte hain as needed."
            ]
        },
        {
            "tag": "multithreading_vs_multiprocessing",
            "patterns": [
                "Multithreading aur Multiprocessing ka difference?",
                "Multithreading aur Multiprocessing kab use karna chahiye?",
                "Python me Multithreading aur Multiprocessing ka use case batao?"
            ],
            "responses": [
                "Multithreading I/O-bound tasks ke liye useful hai, aur Multiprocessing CPU-intensive tasks ke liye!",
                "Agar tum file reading/writing ya network requests kar rahe ho to multithreading use karo. Agar tumhe parallel computations karni hain, to multiprocessing better hai!",
                "Multithreading ek process ke andar multiple threads use karta hai, jabki multiprocessing multiple processes chalata hai, jo independent hote hain."
            ]
        },
        {
            "tag": "pytorch_intro",
            "patterns": [
                "PyTorch kya hai?",
                "PyTorch aur TensorFlow me kya difference hai?",
                "PyTorch use karna kyu sikhna chahiye?"
            ],
            "responses": [
                "PyTorch ek deep learning framework hai jo easy aur flexible hai, research aur production dono ke liye!",
                "PyTorch easy debugging allow karta hai, aur TensorFlow se zyada Pythonic aur dynamic hai.",
                "Agar tum AI models train karna chahte ho, to PyTorch ek best framework hai deep learning ke liye!"
            ]
        },
        {
            "tag": "pytorch_tensor_basics",
            "patterns": [
                "PyTorch me tensor kya hota hai?",
                "PyTorch me tensor kaise create kare?",
                "Tensor aur numpy array me kya difference hai?"
            ],
            "responses": [
                "PyTorch me tensor ek multidimensional array hota hai, jo deep learning aur numerical computations ke liye use hota hai.",
                "Tensors ko PyTorch me create karne ke liye `torch.tensor([1, 2, 3])` use kar sakte ho.",
                "Numpy arrays sirf CPU pe kaam karte hain, jabki PyTorch tensors GPU pe bhi efficiently run kar sakte hain!"
            ]
        },
        {
            "tag": "hinglish",
            "patterns": [
                "Bro tu Hinglish bol sakta hai?",
                "Mujhe Hinglish me baat karni hai",
                "Kya tu Hindi aur English mix karke bol sakta hai?"
            ],
            "responses": [
                "Haan bro, tu Hinglish me baat kar sakta hai. Kya help chahiye?",
                "Bilkul, Hinglish me coding ke shortcuts aur concepts samjha sakta hoon!",
                "Hinglish best hai chill baatein karne ke liye. Kya padhna hai coding me?"
            ]
        },
        {
            "tag": "communication_tips",
            "patterns": [
                "Freelancing me communication kaise improve karein?",
                "Client ke sath achi tarah se kaise baat karein?",
                "Communication skills better kaise karein?"
            ],
            "responses": [
                "Freelancing me clear aur professional communication zaroori hai. Messages ko short aur to-the-point rakho!",
                "Client ki requirements dhyan se suno, aur proper documentation banao before project start karne se pehle.",
                "Always be polite aur timely response do. Professionalism maintain karo aur apna kaam deadline pe deliver karo!"
            ]
        },
        {
            "tag": "freelancing_best_sites",
            "patterns": [
                "Freelancing ke liye best websites kaunsi hain?",
                "Mujhe freelancing start karni hai, kaunsi site best hai?",
                "Freelance projects find karne ka best platform kaunsa hai?"
            ],
            "responses": [
                "Upwork aur Fiverr best platforms hain freelancing ke liye, lekin niche-specific websites jaise Toptal aur Freelancer bhi kaafi useful hain!",
                "Agar beginner ho, to Fiverr aur Freelancer try karo. Agar experience hai, to Upwork aur Toptal best rahenge.",
                "Freelancing start karne ke liye Upwork, Freelancer aur Fiverr achhe options hain. LinkedIn aur Twitter pe bhi clients mil sakte hain!"
            ]
        },
        {
            "tag": "fastapi_vs_flask",
            "patterns": [
                "FastAPI aur Flask me kya difference hai?",
                "FastAPI better hai ya Flask?",
                "Mujhe FastAPI aur Flask ka comparison chahiye"
            ],
            "responses": [
                "FastAPI ka performance Flask se better hai, kyunki yeh async support karta hai aur built-in type validation deta hai!",
                "Flask easy aur flexible hai, jabki FastAPI fast aur modern web apps ke liye optimized hai.",
                "Agar tumhe API banani hai to FastAPI best rahega, lekin agar full-fledged web app chahiye to Flask bhi sahi hai."
            ]
        },
        {
            "tag": "web_scraping_best_practices",
            "patterns": [
                "Web scraping ke best practices batao?",
                "Web scraping karte waqt kin baaton ka dhyan rakhna chahiye?",
                "Web scraping safely kaise karein?"
            ],
            "responses": [
                "Always robots.txt check karo aur excessive requests avoid karo!",
                "Use headers aur proxies taaki site tumhe block na kare. Request delay add karo!",
                "BeautifulSoup aur Scrapy dono powerful tools hain, lekin ethical scraping zaroori hai!"
            ]
        },
        {
            "tag": "regex_python",
            "patterns": [
                "Python me regex kaise kaam karta hai?",
                "Mujhe regex sikhna hai Python me!",
                "Python regex ka example do"
            ],
            "responses": [
                "Regex ke liye `re` module use hota hai. Example: `re.findall(r'\\d+', 'Price: 500')` yeh number extract karega.",
                "Agar tumhe email validate karna hai to: `re.match(r'^[\\w.-]+@[\\w.-]+\\.\\w+$', email)` use karo!",
                "Regex powerful hai strings filter karne ke liye! `re.sub(r'\\s+', '-', 'Hello  World')` spaces ko `-` se replace karega."
            ]
        },
        {
            "tag": "pytorch_optimizers",
            "patterns": [
                "PyTorch me kaunse optimizers use karne chahiye?",
                "Adam aur SGD me kya difference hai?",
                "PyTorch me best optimizer kaunsa hai?"
            ],
            "responses": [
                "Adam optimizer generally fast aur stable hota hai, lekin SGD better generalization deta hai!",
                "Agar tumhara model complex hai, to Adam use karo. Agar controlled learning chahiye, to SGD best hai.",
                "PyTorch me `torch.optim.Adam(model.parameters(), lr=0.001)` kaafi commonly use hota hai."
            ]
        },
        {
            "tag": "pytorch_save_load_model",
            "patterns": [
                "PyTorch model save aur load kaise karein?",
                "Mujhe trained model save karna hai, kaise karun?",
                "PyTorch me model checkpoint kaise banayein?"
            ],
            "responses": [
                "Save: `torch.save(model.state_dict(), 'model.pth')`, Load: `model.load_state_dict(torch.load('model.pth'))`",
                "PyTorch me models save aur load karne ke liye `torch.save` aur `torch.load` functions use hote hain.",
                "Agar tum training ke beech me model save karna chahte ho to `torch.save(model.state_dict(), 'checkpoint.pth')` use karo!"
            ]
        },
        {
            "tag": "debugging_tips",
            "patterns": [
                "Code debug kaise karein?",
                "Python code debug karne ka best tariqa kya hai?",
                "Mujhe debugging improve karni hai"
            ],
            "responses": [
                "Debugger like `pdb` ya `debugpy` use karo, aur print statements ko minimize karo!",
                "Breakpoints use karo aur step-by-step execution dekho taaki error jaldi pakad sako.",
                "Logging ka use karo taaki error trace karna easy ho jaye. Example: `import logging` and `logging.debug('Value:', value)`"
            ]
        },
        {
            "tag": "api_authentication",
            "patterns": [
                "API authentication kaise kaam karta hai?",
                "JWT aur OAuth me kya difference hai?",
                "Mujhe API security samjhni hai"
            ],
            "responses": [
                "JWT tokens stateless hote hain, jabki OAuth authorization ke liye use hota hai.",
                "API me authentication ke liye API keys, JWT aur OAuth 2.0 commonly use hote hain.",
                "Agar tum secure authentication chahte ho to OAuth 2.0 use karo, nahi to JWT bhi lightweight solution hai!"
            ]
        },
        {
            "tag": "linux_commands",
            "patterns": [
                "Mujhe basic Linux commands sikhni hai",
                "Linux me file ka size kaise check karein?",
                "Linux me process list kaise dekhein?"
            ],
            "responses": [
                "File size check karne ke liye: `du -sh filename`",
                "Processes list dekhne ke liye: `ps aux` ya `htop`",
                "Basic Linux commands: `ls`, `cd`, `mkdir`, `rm`, `cp`, `mv`, `cat`, `grep`, `chmod`, `chown`"
            ]
        },
        {
            "tag": "hinglish_coding_motivation",
            "patterns": [
                "Bhai mujhe coding sikhni hai par motivation nahi hai!",
                "Code likhne ka man nahi karta, kya karu?",
                "Mujhe coding boring lagti hai"
            ],
            "responses": [
                "Bro, coding ek superpower hai! Chhoti chhoti cheezein build karna start karo, motivation automatically aa jayegi!",
                "Agar bore ho raha hai to ek project banao jo tumhe pasand ho, jaise ek chatbot ya automation script!",
                "Ek achha music playlist banao aur coding ko game ki tarah dekho. Jab kuch naya seekhoge to motivation apne aap aa jayegi!"
            ]
        },
        {
            "tag": "personal_branding_freelancing",
            "patterns": [
                "Freelancing me strong profile kaise banaye?",
                "Clients kaise attract kare freelancing me?",
                "Personal branding kaise improve karein freelancing ke liye?"
            ],
            "responses": [
                "Apni skills showcase karne ke liye LinkedIn aur GitHub profile strong banao!",
                "Clients attract karne ke liye apna work showcase karo aur LinkedIn, Twitter pe actively engage karo.",
                "Freelancing me best clients attract karne ka secret hai: Strong portfolio + Consistency!"
            ]
        },
        {
            "tag": "hinglish_music",
            "patterns": [
                "bhai gaana sunna hai",
                "yaar music ka mood",
                "mast song suggest kar",
                "kuch desi beats wala",
                "party mein music kya"
            ],
            "responses": [
                "Bhai, gaana? ‘Arijit’ sun le!",
                "Yaar, mood? ‘Badshah’ ka rap!",
                "Mast song—‘Tum Hi Ho’!",
                "Desi beats? ‘Bhangra’ laga!",
                "Party mein? ‘DJ Wale’ play kar!"
            ]
        },
        {
            "tag": "hinglish_relationships",
            "patterns": [
                "yaar rishta advice de",
                "bhai family ka scene",
                "mast pyar wali baat",
                "kuch dost banane ka idea",
                "ladai ho gayi"
            ],
            "responses": [
                "Yaar, advice? Dil se baat kar!",
                "Bhai, family? Sabko samjha le!",
                "Mast pyar—gift de de!",
                "Dost idea? Coffee pe bula!",
                "Ladai? Sorry bol aur thik kar!"
            ]
        },
        {
            "tag": "hinglish_gaming",
            "patterns": [
                "bhai game khelna hai",
                "yaar gaming ka plan",
                "mast game suggest kar",
                "kuch online wala idea",
                "time pass game bol"
            ],
            "responses": [
                "Bhai, game? ‘BGMI’ khel le!",
                "Yaar, plan? ‘Free Fire’ chal!",
                "Mast game—‘Ludo’ easy hai!",
                "Online idea? ‘Among Us’ try kar!",
                "Time pass? ‘Candy Crush’ laga!"
            ]
        },
        {
            "tag": "hinglish_style",
            "patterns": [
                "yaar style ka idea de",
                "bhai fashion ka scene",
                "mast look wali baat",
                "kuch cool kapde suggest",
                "party ke liye kya pehnu"
            ],
            "responses": [
                "Yaar, style? Jeans pehen le!",
                "Bhai, scene? Kurta bhi chalega!",
                "Mast look—sunglasses laga!",
                "Cool kapde? Hoodie le le!",
                "Party? Shirt aur boots perfect!"
            ]
        },
        {
            "tag": "hinglish_hangout",
            "patterns": [
                "bhai hangout ka plan",
                "yaar kahin chalte hai",
                "mast chill wali jagah",
                "kuch group mein ghumne ka",
                "weekend kya karu"
            ],
            "responses": [
                "Bhai, plan? Cafe mein baitho!",
                "Yaar, chalte hai—mall ghum le!",
                "Mast jagah? Park mein chill!",
                "Group mein? Beach pe jao!",
                "Weekend? Dosto ke saath film!"
            ]
        },
        {
            "tag": "data_structures_best",
            "patterns": [
                "Mujhe best data structures batao",
                "Data structures kaunsa important hai?",
                "Data structures sikhna hai, kahan se shuru karun?"
            ],
            "responses": [
                "Important data structures: Arrays, Linked Lists, Stacks, Queues, HashMaps, Trees aur Graphs!",
                "Data structures start karne ke liye Arrays aur Linked Lists pe dhyan do, fir Trees aur Graphs explore karo!",
                "Agar DSA crack karna hai to LeetCode ya CodeForces pe practice shuru karo!"
            ]
        },
        {
            "tag": "dsa_interview_questions",
            "patterns": [
                "DSA ke most asked interview questions kaunse hain?",
                "Mujhe FAANG interview ke liye DSA prepare karna hai!",
                "Top DSA problems batao jo har company puchti hai!"
            ],
            "responses": [
                "Top questions: Reverse Linked List, Binary Search, Two Sum, LRU Cache, Merge Intervals, Dijkstra Algorithm!",
                "FAANG interviews ke liye Graphs, Dynamic Programming aur Sliding Window concepts strong hone chahiye!",
                "Agar Google/Microsoft ka interview dena hai to DP aur Graphs pe strong focus rakho!"
            ]
        },
        {
            "tag": "pytorch_training_tips",
            "patterns": [
                "Mujhe PyTorch me training improve karni hai!",
                "PyTorch me overfitting avoid kaise karein?",
                "PyTorch me model ka accuracy kaise badhayein?"
            ],
            "responses": [
                "Overfitting avoid karne ke liye dropout layers use karo aur zyada epochs mat chalao!",
                "Data Augmentation aur Early Stopping techniques model training ko improve karti hain.",
                "Learning Rate Scheduling aur Batch Normalization se accuracy boost hoti hai!"
            ]
        },
        {
            "tag": "async_vs_threads",
            "patterns": [
                "Async programming better hai ya multithreading?",
                "Asyncio aur threading me kya difference hai?",
                "Python me concurrency ka best method kaunsa hai?"
            ],
            "responses": [
                "Agar I/O bound tasks hain to AsyncIO better hai, agar CPU-bound tasks hain to Threads ya Multiprocessing use karo!",
                "Async programming parallel execution ko optimize karta hai, jabki Threads concurrency provide karte hain.",
                "Agar network calls ya file operations optimize karne hain to `asyncio` best hai!"
            ]
        },
        {
            "tag": "git_best_practices",
            "patterns": [
                "Git ke best practices kya hain?",
                "Git me version control kaise sahi se use karein?",
                "Git branching strategies batao"
            ],
            "responses": [
                "Always meaningful commit messages likho aur `git rebase` samajh lo!",
                "Feature branches banao aur `git pull --rebase` use karo taaki history clean rahe.",
                "Best branching strategy: Main branch + Develop branch + Feature branches workflow!"
            ]
        },
        {
            "tag": "ai_project_ideas",
            "patterns": [
                "AI ke best project ideas batao",
                "AI me interesting projects kya bana sakta hoon?",
                "Koi real-world AI project suggest karo"
            ],
            "responses": [
                "Kuch unique AI projects: AI-Powered Resume Screener, Chatbot for Customer Support, Fake News Detector!",
                "AI projects ke liye best ideas: Sentiment Analysis Tool, AI-Based Code Debugger, Automated Trading Bot!",
                "Agar deep learning me experiment karna hai to Image Captioning aur Face Recognition try karo!"
            ]
        },
        {
            "tag": "fastapi_deployment",
            "patterns": [
                "FastAPI ko production me kaise deploy karein?",
                "FastAPI ko AWS ya DigitalOcean pe kaise deploy karu?",
                "Mujhe FastAPI ko scalable banana hai, kaise karun?"
            ],
            "responses": [
                "FastAPI ko `uvicorn` aur Gunicorn ke saath deploy karo for production!",
                "Agar AWS pe deploy karna hai to Docker aur ECS use karo, DigitalOcean ke liye Dokku ya Nginx sahi hai!",
                "FastAPI ko `async` aur `pydantic` validators ke saath optimize karo taaki scalability achhi ho!"
            ]
        },
        {
            "tag": "web_automation_selenium",
            "patterns": [
                "Mujhe Selenium se web automation karni hai!",
                "Python me web scraping aur automation kaise karein?",
                "Selenium se form filling ka automation kaise karein?"
            ],
            "responses": [
                "Web automation ke liye `selenium` ka `webdriver` use karo: `from selenium import webdriver`",
                "Selenium se form filling automate karne ke liye: `driver.find_element(By.NAME, 'username').send_keys('test')`",
                "Web scraping ke liye `BeautifulSoup` aur `Selenium` dono ka combination best hai!"
            ]
        },
        {
            "tag": "hinglish_job_interview_tips",
            "patterns": [
                "Bhai job interview crack karne ke tips do!",
                "Mujhe IT job interview ke liye prepare karna hai, kaise karun?",
                "FAANG ka interview crack karna hai, kaise prepare karun?"
            ],
            "responses": [
                "Bhai sabse pehle **DSA + System Design + Projects** strong karo, phir mock interviews do!",
                "Job ke liye **LinkedIn optimize** karo aur resume me **impactful keywords** use karo!",
                "FAANG ke liye LeetCode **Hard** questions solve karo aur system design concepts clear rakho!"
            ]
        },
        {
            "tag": "coding_motivation",
            "patterns": [
                "Bhai mujhe coding boring lagti hai, kya karun?",
                "Mujhe coding seekhne ka man nahi karta!",
                "Code likhne ka mood nahi hota, koi trick batao!"
            ],
            "responses": [
                "Bro, apna **goal define** karo! Agar bada software ya AI model banana hai to coding zaroori hai!",
                "Agar boring lag raha hai to **interesting projects** banao jaise AI chatbot ya automation scripts!",
                "Code likhne se pehle **music suno, Pomodoro technique try karo**, aur **chhoti chhoti cheezein automate** karo!"
            ]
        },
        {
            "tag": "real_world_projects",
            "patterns": [
                "Real-world projects kaise build karein?",
                "Mujhe coding practice ke liye real-world ideas chahiye!",
                "Coding practice improve karni hai, kya project bana sakta hoon?"
            ],
            "responses": [
                "Real-world projects banane ke liye **problem solving** approach lo! Ek issue identify karo aur uska solution build karo!",
                "Best ideas: **Personal Finance Tracker, AI Resume Screener, URL Shortener, Weather API App!**",
                "Open-source contributions start karo, aur **real-world freelance projects** me kaam karo!"
            ]
        },
        {
            "tag": "hinglish_jobs",
            "patterns": [
                "bhai job ka kya scene",
                "yaar naukri chahiye",
                "mast career wali baat",
                "kuch kaam ka idea de",
                "interview ka tension hai"
            ],
            "responses": [
                "Bhai, job? LinkedIn check kar!",
                "Yaar, naukri? Resume update kar!",
                "Mast baat—skills seekh le!",
                "Kaam idea? Freelance shuru kar!",
                "Interview? Confidence se bol!"
            ]
        },
        {
            "tag": "hinglish_tech_upgrades",
            "patterns": [
                "yaar tech ka naya kya",
                "bhai gadget upgrade karu",
                "mast device wali baat",
                "kuch latest tech suggest",
                "phone change karna hai"
            ],
            "responses": [
                "Yaar, naya? 5G phone le!",
                "Bhai, upgrade? Laptop SSD daal!",
                "Mast device—smart TV laga!",
                "Latest tech? Earbuds try kar!",
                "Phone change? Budget mein iPhone!"
            ]
        },
        {
            "tag": "hinglish_emotions",
            "patterns": [
                "bhai dil dukhta hai",
                "yaar khushi wali baat",
                "mast feeling share kar",
                "kuch emotional wala scene",
                "mood thik nahi hai"
            ],
            "responses": [
                "Bhai, dil dukhta? Baat kar le!",
                "Yaar, khushi? Treat de du!",
                "Mast feeling—hug wali baat!",
                "Emotional scene? Dosti yaad kar!",
                "Mood thik nahi? Song sun le!"
            ]
        },
        {
            "tag": "hinglish_sports",
            "patterns": [
                "yaar khelna hai",
                "bhai sports ka scene",
                "mast match wali baat",
                "kuch cricket ka plan",
                "football ka mood hai"
            ],
            "responses": [
                "Yaar, khelna? Gully cricket chal!",
                "Bhai, scene? IPL dekho!",
                "Mast match—India vs Pak!",
                "Cricket plan? Bat leke aaja!",
                "Football? Ground pe goal maar!"
            ]
        },
        {
            "tag": "hinglish_memes",
            "patterns": [
                "bhai meme dikha",
                "yaar hasi wala kuch",
                "mast meme wali baat",
                "kuch funny share kar",
                "time pass meme chahiye"
            ],
            "responses": [
                "Bhai, meme? ‘Doge’ wala chalega!",
                "Yaar, hasi? ‘Bhaiya ji smile’!",
                "Mast baat—‘sad aff’ bol!",
                "Funny? WhatsApp se forward karu!",
                "Time pass? Instagram reel dekh!"
            ]
        },
        {
            "tag": "fullstack_web_dev",
            "patterns": [
                "Mujhe full-stack web developer banna hai!",
                "Full stack development kaise sikhun?",
                "Mujhe MERN stack ya Django seekhna hai!"
            ],
            "responses": [
                "Full-stack developer banne ke liye **HTML, CSS, JavaScript, React ya Vue.js** frontend ke liye sikhna hoga aur backend ke liye **Node.js, Express.js ya Django**!",
                "Best roadmap: Pehle frontend sikh lo, phir backend explore karo, phir databases aur authentication integrate karo!",
                "MERN Stack (MongoDB, Express.js, React, Node.js) aur Django (Python) dono strong choices hain, jo pasand ho wo choose karo!"
            ]
        },
        {
            "tag": "devops_basics",
            "patterns": [
                "DevOps kya hota hai?",
                "Mujhe DevOps sikhna hai, kahan se start karun?",
                "CI/CD, Docker, Kubernetes kya hota hai?"
            ],
            "responses": [
                "DevOps ka matlab hai **Development + Operations**, jisme automation, CI/CD, monitoring aur deployment hota hai!",
                "Start with **Git, CI/CD pipelines, Docker, Kubernetes, Cloud platforms (AWS/GCP)**!",
                "Best tools: **Jenkins, GitHub Actions, Terraform, Kubernetes**, aur Cloud services!"
            ]
        },
        {
            "tag": "cybersecurity_basics",
            "patterns": [
                "Cybersecurity kya hoti hai?",
                "Mujhe ethical hacking sikhni hai!",
                "Best cybersecurity tools kaunse hain?"
            ],
            "responses": [
                "Cybersecurity ka main goal hai **security breaches aur hacking attacks prevent karna!**",
                "Ethical hacking sikhne ke liye **Kali Linux, Metasploit, Burp Suite, Wireshark** jaise tools use karo!",
                "Agar penetration testing seekhni hai to **TryHackMe aur HackTheBox** pe practice karo!"
            ]
        },
        {
            "tag": "linux_optimization",
            "patterns": [
                "Mujhe Linux optimize karna hai!",
                "Linux ko fast kaise banayein?",
                "Best Linux performance tips batao!"
            ],
            "responses": [
                "Linux ko optimize karne ke liye **unnecessary services disable karo, swap tuning karo aur lightweight desktop environment use karo!**",
                "Arch Linux ya Ubuntu Minimal version use karna best rahega agar performance chahiye!",
                "Fast performance ke liye **zram, preload aur noatime file system tuning** use karo!"
            ]
        },
        {
            "tag": "freelancing_web_dev",
            "patterns": [
                "Freelancing kaise start karun?",
                "Mujhe web development me freelancing karni hai!",
                "Best platforms for freelancing kaunse hain?"
            ],
            "responses": [
                "Freelancing start karne ke liye **Fiverr, Upwork, Toptal, aur Freelancer** jaise platforms use karo!",
                "Web development freelancing me **WordPress, Shopify, MERN stack, aur custom websites** kaafi demand me hain!",
                "Pehle **personal portfolio website** banao aur phir LinkedIn aur GitHub pe apni skills showcase karo!"
            ]
        },
        {
            "tag": "ai_startup_ideas",
            "patterns": [
                "AI startup ke liye best ideas kya hain?",
                "Mujhe AI-based startup start karna hai!",
                "AI ke future business ideas batao!"
            ],
            "responses": [
                "AI startups ke liye best ideas: **AI Resume Screener, Automated Code Review, Personalized AI Tutors, Fake News Detection System**!",
                "Agar AI business start karna hai to **SaaS model (Software-as-a-Service)** follow karo!",
                "Future AI startups: **AI-powered chatbots, financial predictions, and personalized shopping assistants!**"
            ]
        },
        {
            "tag": "docker_for_beginners",
            "patterns": [
                "Docker kya hai?",
                "Docker kaise kaam karta hai?",
                "Mujhe Docker seekhna hai!"
            ],
            "responses": [
                "Docker ek containerization tool hai jo **applications ko isolated environment me run karne deta hai!**",
                "Docker ka main benefit hai ki **same environment har machine pe setup ho sakta hai**!",
                "Docker seekhne ke liye start karo: `docker run hello-world` aur phir `docker-compose.yml` file explore karo!"
            ]
        },
        {
            "tag": "nextjs_vs_react",
            "patterns": [
                "Next.js aur React.js me kya difference hai?",
                "Kya mujhe Next.js seekhna chahiye ya sirf React?",
                "React better hai ya Next.js?"
            ],
            "responses": [
                "React **frontend library** hai jabki Next.js ek **React framework** hai jo SSR (Server-Side Rendering) aur SEO optimize karta hai!",
                "Agar SEO aur fast performance chahiye to **Next.js** better choice hai, agar sirf frontend banana hai to React sahi hai!",
                "Next.js ka best feature hai **Static Site Generation (SSG) aur API Routes**, jo full-stack applications ke liye perfect hai!"
            ]
        },
        {
            "tag": "hinglish_motivation",
            "patterns": [
                "Bhai motivation chahiye coding ke liye!",
                "Mujhe coding me man nahi lagta!",
                "Boring lag raha hai, kya karun?"
            ],
            "responses": [
                "Bhai, coding ka mazza tab aata hai jab **apna khud ka project bana rahe ho!**",
                "Agar coding bore lag rahi hai to **automate karo, naye projects banao aur problem solving karo!**",
                "Coding boring tab lagti hai jab **goal clear nahi hota!** Apni field choose karo: AI, Web Dev, Cybersecurity, jo pasand ho!"
            ]
        }
    ]
}
